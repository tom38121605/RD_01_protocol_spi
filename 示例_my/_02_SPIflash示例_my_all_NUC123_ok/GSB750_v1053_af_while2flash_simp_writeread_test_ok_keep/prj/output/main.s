; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--split_sections --debug -c --asm --info=totals -o.\output\main.o --depend=.\output\main.d --cpu=Cortex-M0 --apcs=interwork -I..\CMSIS\CM0\DeviceSupport\Nuvoton\NUC123Series -I..\CMSIS\CM0\CoreSupport -I..\INC\DrvInc -I..\INC\SysInc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -D__MICROLIB --omf_browse=.\output\main.crf ..\AppSrc\main.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.CLK_Init||, CODE, READONLY, ALIGN=2

CLK_Init PROC
        PUSH     {r4,lr}
        BL       SYS_UnlockReg
        LDR      r0,|L1.160|
        LDR      r1,[r0,#4]
        MOVS     r2,#3
        ORRS     r1,r1,r2
        STR      r1,[r0,#4]
        LDR      r4,|L1.164|
        LDR      r0,[r4,#0]
        MOVS     r1,#1
        ORRS     r0,r0,r1
        STR      r0,[r4,#0]
|L1.26|
        LDR      r0,[r4,#0xc]
        LSLS     r0,r0,#31
        LSRS     r0,r0,#31
        BEQ      |L1.26|
        LDR      r0,|L1.168|
        STR      r0,[r4,#0x20]
|L1.38|
        LDR      r1,[r4,#0xc]
        MOVS     r0,#4
        TST      r1,r0
        BEQ      |L1.38|
        LDR      r1,[r4,#0x10]
        MOVS     r0,#2
        LSRS     r1,r1,#3
        LSLS     r1,r1,#3
        ORRS     r1,r1,r0
        STR      r1,[r4,#0x10]
        LDR      r1,[r4,#0x2c]
        MOVS     r0,#1
        BICS     r1,r1,r0
        ORRS     r1,r1,r0
        STR      r1,[r4,#0x2c]
        BL       SystemCoreClockUpdate
        LDR      r0,|L1.172|
        BL       SysTickInit
        LDR      r0,[r4,#0x14]
        MOVS     r1,#3
        LSLS     r1,r1,#28
        BICS     r0,r0,r1
        STR      r0,[r4,#0x14]
        LDR      r0,[r4,#0x1c]
        MOVS     r1,#0xff
        ADDS     r1,#1
        BICS     r0,r0,r1
        STR      r0,[r4,#0x1c]
        LDR      r0,[r4,#0x14]
        LSLS     r0,r0,#2
        LSRS     r0,r0,#2
        STR      r0,[r4,#0x14]
        LDR      r0,[r4,#0x1c]
        LSLS     r1,r1,#1
        BICS     r0,r0,r1
        STR      r0,[r4,#0x1c]
        MOVS     r1,#3
        LDR      r0,[r4,#8]
        LSLS     r1,r1,#20
        ORRS     r0,r0,r1
        STR      r0,[r4,#8]
        MOVS     r1,#1
        LSLS     r1,r1,#20
        MOVS     r0,#5
        LSLS     r0,r0,#28
        LDR      r2,[r0,#0xc]
        ORRS     r2,r2,r1
        STR      r2,[r0,#0xc]
        LDR      r2,[r0,#0xc]
        BICS     r2,r2,r1
        STR      r2,[r0,#0xc]
        BL       adcKeyClkInit
        LDR      r1,|L1.160|
        MOVS     r0,#0
        ADDS     r1,r1,#0xc0
        STR      r0,[r1,#0]
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L1.160|
        DCD      0x50000040
|L1.164|
        DCD      0x50000200
|L1.168|
        DCD      0x00004a54
|L1.172|
        DCD      0x00001770

        AREA ||i.Erase_Page_Data||, CODE, READONLY, ALIGN=2

Erase_Page_Data PROC
        PUSH     {r3-r7,lr}
        LDR      r4,|L2.192|
        MOV      r5,r0
        LDR      r0,[r4,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        STR      r0,[r4,#8]
        LDR      r0,[r4,#0]
        MOVS     r7,#1
        LSLS     r7,r7,#19
        BICS     r0,r0,r7
        STR      r0,[r4,#0]
        LDR      r0,[r4,#8]
        MOVS     r6,#1
        ORRS     r0,r0,r6
        STR      r0,[r4,#8]
        MOVS     r1,#8
        MOVS     r0,#6
        BL       spiSendWord
        LDR      r0,[r4,#8]
        BICS     r0,r0,r6
        STR      r0,[r4,#8]
        LDR      r0,[r4,#8]
        ORRS     r0,r0,r6
        STR      r0,[r4,#8]
        MOVS     r1,#8
        MOVS     r0,#0xd8
        BL       spiSendWord
        MOVS     r1,#0x18
        MOV      r0,r5
        BL       spiSendWord
        LDR      r0,[r4,#8]
        BICS     r0,r0,r6
        STR      r0,[r4,#8]
        LDR      r0,[r4,#8]
        ORRS     r0,r0,r6
        STR      r0,[r4,#8]
        MOVS     r1,#8
        MOVS     r0,#4
        BL       spiSendWord
        LDR      r0,[r4,#8]
        BICS     r0,r0,r6
        STR      r0,[r4,#8]
        LDR      r0,[r4,#8]
        BICS     r0,r0,r6
        STR      r0,[r4,#8]
        LDR      r0,[r4,#0]
        BICS     r0,r0,r7
        STR      r0,[r4,#0]
        LDR      r0,[r4,#8]
        ORRS     r0,r0,r6
        STR      r0,[r4,#8]
        MOVS     r1,#8
        MOVS     r0,#5
        BL       spiSendWord
        MOVS     r1,#8
        MOVS     r0,#0xff
        BL       spiSendWord
        LDR      r0,[r4,#0x10]
        LDR      r5,|L2.196|
        B        |L2.172|
|L2.134|
        LDR      r0,[r4,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        STR      r0,[r4,#8]
        LDR      r0,[r4,#0]
        BICS     r0,r0,r7
        STR      r0,[r4,#0]
        LDR      r0,[r4,#8]
        ORRS     r0,r0,r6
        STR      r0,[r4,#8]
        MOVS     r1,#8
        MOVS     r0,#5
        BL       spiSendWord
        MOVS     r1,#8
        MOVS     r0,#0xff
        BL       spiSendWord
        LDR      r0,[r4,#0x10]
|L2.172|
        STRB     r0,[r5,#0]
        LDR      r0,[r4,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        STR      r0,[r4,#8]
        LDRB     r0,[r5,#0]  ; flash_status
        LSLS     r0,r0,#31
        BNE      |L2.134|
        POP      {r3-r7,pc}
        ENDP

        DCW      0x0000
|L2.192|
        DCD      0x40130000
|L2.196|
        DCD      flash_status

        AREA ||i.Hal_Init||, CODE, READONLY, ALIGN=1

Hal_Init PROC
        PUSH     {r4,lr}
        MRS      r4,PRIMASK
        MOVS     r0,#1
        MSR      PRIMASK,r0
        BL       CLK_Init
        MSR      PRIMASK,r4
        BL       sysTaskInit
        BL       dealPowerKey
        BL       ledInit
        POP      {r4,pc}
        ENDP


        AREA ||i.SYS_UnlockReg||, CODE, READONLY, ALIGN=2

SYS_UnlockReg PROC
        LDR      r0,|L4.16|
        MOVS     r1,#0x59
        STR      r1,[r0,#0]
        MOVS     r1,#0x16
        STR      r1,[r0,#0]
        MOVS     r1,#0x88
        STR      r1,[r0,#0]
        BX       lr
        ENDP

|L4.16|
        DCD      0x50000100

        AREA ||i.SysTickInit||, CODE, READONLY, ALIGN=2

SysTickInit PROC
        PUSH     {r4,r5,lr}
        LSLS     r0,r0,#8
        LSRS     r0,r0,#8
        LDR      r1,|L5.52|
        SUBS     r0,r0,#1
        STR      r0,[r1,#0x14]
        LDR      r0,|L5.56|
        LDR      r2,[r0,#0x1c]
        MOVS     r4,#3
        LSLS     r2,r2,#8
        LSRS     r2,r2,#8
        LSLS     r3,r1,#17
        ORRS     r2,r2,r3
        STR      r2,[r0,#0x1c]
        MOVS     r0,#0
        STR      r0,[r1,#0x18]
        LDR      r3,|L5.60|
        MOVS     r0,#0x10
        LDR      r2,[r3,#0x10]
        MOVS     r5,#0x38
        BICS     r2,r2,r5
        ORRS     r2,r2,r0
        STR      r2,[r3,#0x10]
        STR      r4,[r1,#0x10]
        POP      {r4,r5,pc}
        ENDP

        DCW      0x0000
|L5.52|
        DCD      0xe000e000
|L5.56|
        DCD      0xe000ed04
|L5.60|
        DCD      0x50000200

        AREA ||i.main||, CODE, READONLY, ALIGN=2

main PROC
        PUSH     {r4,lr}
        BL       Hal_Init
        BL       ledTaskInit
        BL       pt2314Init
        BL       ampInit
        BL       adckeyTaskInit
        BL       DWPH83Init
        BL       outStandby
        ADR      r0,|L6.132|
        BL       iputs
        ADR      r0,|L6.144|
        BL       iputs
        MOVS     r0,#0x1d
        LDR      r4,|L6.160|
        LSLS     r0,r0,#15
        STR      r0,[r4,#0]  ; iwraddr
        BL       Erase_Page_Data
        LDR      r0,|L6.164|
        MOVS     r1,#0x33
        STRB     r1,[r0,#0]
        MOVS     r1,#0x36
        STRB     r1,[r0,#1]
        MOVS     r1,#0x39
        STRB     r1,[r0,#2]
        MOV      r2,r0
        MOVS     r1,#3
        LDR      r0,[r4,#0]  ; iwraddr
        BL       spiFlashPageWrite
        ADR      r0,|L6.168|
        BL       iputs
        LDR      r2,|L6.184|
        MOVS     r1,#3
        LDR      r0,[r4,#0]  ; iwraddr
        BL       spiFlashRead
        LDR      r4,|L6.184|
        ADR      r1,|L6.188|
        LDRB     r0,[r4,#0]  ; rdbuf
        BL       uartdecodeH
        LDRB     r0,[r4,#1]  ; rdbuf
        ADR      r1,|L6.196|
        BL       uartdecodeH
        LDRB     r0,[r4,#2]  ; rdbuf
        ADR      r1,|L6.204|
        BL       uartdecodeH
        LDR      r0,|L6.212|
        BL       sysDelayMs
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L6.132|
        DCB      "main--01.\r\n",0
|L6.144|
        DCB      "begin write.\r\n",0
        DCB      0
|L6.160|
        DCD      ||.data||
|L6.164|
        DCD      wrbuf
|L6.168|
        DCB      "begin read.\r\n",0
        DCB      0
        DCB      0
|L6.184|
        DCD      ||.bss||
|L6.188|
        DCB      " buf0: ",0
|L6.196|
        DCB      " buf1: ",0
|L6.204|
        DCB      " buf2: ",0
|L6.212|
        DCD      0x00002ee0

        AREA ||i.showVersion||, CODE, READONLY, ALIGN=2

showVersion PROC
        PUSH     {r1-r7,lr}
        ADR      r1,|L7.184|
        LDM      r1,{r0,r1}
        STR      r0,[sp,#0]
        STR      r1,[sp,#4]
        MOV      r0,sp
        LDRB     r7,[r0,#1]
        LDRB     r0,[r0,#2]
        SUBS     r7,r7,#0x30
        SUBS     r0,r0,#0x30
        STR      r0,[sp,#0]
        MOV      r0,sp
        LDRB     r6,[r0,#4]
        LDRB     r5,[r0,#5]
        SUBS     r6,r6,#0x30
        SUBS     r5,r5,#0x30
        MOVS     r4,#0
        B        |L7.64|
|L7.36|
        MOVS     r0,#0xff
        ADDS     r0,r0,#0xf5
        BL       sysDelayMs
        MOVS     r0,#4
        BL       ledColorSet
        MOVS     r0,#0xc8
        BL       sysDelayMs
        MOVS     r0,#0
        BL       ledColorSet
        ADDS     r4,r4,#1
|L7.64|
        CMP      r4,r7
        BCC      |L7.36|
        MOVS     r4,#0
        MOVS     r7,#0xff
        ADDS     r7,r7,#0xf5
        B        |L7.102|
|L7.76|
        MOV      r0,r7
        BL       sysDelayMs
        MOVS     r0,#7
        BL       ledColorSet
        MOVS     r0,#0xc8
        BL       sysDelayMs
        MOVS     r0,#0
        BL       ledColorSet
        ADDS     r4,r4,#1
|L7.102|
        LDR      r0,[sp,#0]
        CMP      r4,r0
        BCC      |L7.76|
        MOVS     r4,#0
        B        |L7.138|
|L7.112|
        MOV      r0,r7
        BL       sysDelayMs
        MOVS     r0,#5
        BL       ledColorSet
        MOVS     r0,#0xc8
        BL       sysDelayMs
        MOVS     r0,#0
        BL       ledColorSet
        ADDS     r4,r4,#1
|L7.138|
        CMP      r4,r6
        BCC      |L7.112|
        MOVS     r4,#0
        B        |L7.172|
|L7.146|
        MOV      r0,r7
        BL       sysDelayMs
        MOVS     r0,#2
        BL       ledColorSet
        MOVS     r0,#0xc8
        BL       sysDelayMs
        MOVS     r0,#0
        BL       ledColorSet
        ADDS     r4,r4,#1
|L7.172|
        CMP      r4,r5
        BCC      |L7.146|
        LDR      r1,|L7.192|
        MOVS     r0,#1
        STR      r0,[r1,#4]  ; f_test
        POP      {r1-r7,pc}
        ENDP

|L7.184|
        DCB      "v10.53",0
        DCB      0
|L7.192|
        DCD      ||.data||

        AREA ||i.spiSendWord||, CODE, READONLY, ALIGN=2

spiSendWord PROC
        PUSH     {r4,lr}
        LDR      r2,|L8.44|
        LDR      r3,[r2,#0]
        MOVS     r4,#0xf8
        BICS     r3,r3,r4
        CMP      r1,#0x20
        BNE      |L8.16|
        MOVS     r1,#0
|L8.16|
        LSLS     r1,r1,#3
        ORRS     r3,r3,r1
        STR      r3,[r2,#0]
        STR      r0,[r2,#0x20]
        LDR      r0,[r2,#0]
        MOVS     r1,#1
        ORRS     r0,r0,r1
        STR      r0,[r2,#0]
|L8.32|
        LDR      r0,[r2,#0]
        LSLS     r0,r0,#31
        LSRS     r0,r0,#31
        BNE      |L8.32|
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L8.44|
        DCD      0x40130000

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.bss||, DATA, NOINIT, ALIGN=0

rdbuf
        %        256

        AREA ||.data||, DATA, ALIGN=2

iwraddr
        DCD      0x00100000
f_test
        DCD      0x00000000

__ARM_use_no_argv EQU 0

        EXPORT __ARM_use_no_argv
        EXPORT CLK_Init [CODE]
        EXPORT Erase_Page_Data [CODE]
        EXPORT Hal_Init [CODE]
        EXPORT main [CODE]
        EXPORT showVersion [CODE]
        EXPORT rdbuf [DATA,SIZE=256]
        EXPORT iwraddr [DATA,SIZE=4]
        EXPORT f_test [DATA,SIZE=4]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT SystemCoreClockUpdate [CODE]
        IMPORT adcKeyClkInit [CODE]
        IMPORT sysTaskInit [CODE]
        IMPORT dealPowerKey [CODE]
        IMPORT ledInit [CODE]
        IMPORT sysDelayMs [CODE]
        IMPORT ledColorSet [CODE]
        IMPORT flash_status [DATA]
        IMPORT ledTaskInit [CODE]
        IMPORT pt2314Init [CODE]
        IMPORT ampInit [CODE]
        IMPORT adckeyTaskInit [CODE]
        IMPORT DWPH83Init [CODE]
        IMPORT outStandby [CODE]
        IMPORT iputs [CODE]
        IMPORT spiFlashPageWrite [CODE]
        IMPORT spiFlashRead [CODE]
        IMPORT uartdecodeH [CODE]
        IMPORT wrbuf [DATA]

        KEEP SYS_UnlockReg
        KEEP SysTickInit
        KEEP spiSendWord

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,3
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
