; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--split_sections --debug -c --asm --info=totals -o.\output\dwhp83.o --depend=.\output\dwhp83.d --cpu=Cortex-M0 --apcs=interwork -I..\CMSIS\CM0\DeviceSupport\Nuvoton\NUC123Series -I..\CMSIS\CM0\CoreSupport -I..\INC\DrvInc -I..\INC\SysInc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -D__MICROLIB --omf_browse=.\output\dwhp83.crf ..\AppSrc\DWHP83.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.DWHP83DealMsg||, CODE, READONLY, ALIGN=2

DWHP83DealMsg PROC
        PUSH     {r4,lr}
        BL       Dwhp83CuMuDetect
        CMP      r0,#0
        BEQ      |L1.18|
        MOVS     r1,#0xa
        MOVS     r0,#0x3e
        BL       readDwhp83
|L1.18|
        BL       exitGpioI2c
        MOVS     r2,#0
        LDR      r0,|L1.80|
        MOVS     r1,#1
|L1.28|
        LDRB     r3,[r0,r1]
        ADDS     r1,r1,#1
        ADDS     r2,r3,r2
        UXTB     r2,r2
        CMP      r1,#8
        BCC      |L1.28|
        LDRB     r1,[r0,#8]  ; dwhp83_buf
        CMP      r1,r2
        BNE      |L1.72|
        MOVS     r2,#8
        LDR      r1,|L1.84|
        ADDS     r0,r0,#1
        BL       strncpy
        LDR      r0,|L1.84|
        SUBS     r0,r0,#0x30
        LDR      r0,[r0,#0x10]  ; Dwhp83_CuMu
        LDR      r1,|L1.88|
        CMP      r0,r1
        BNE      |L1.74|
        BL       doMuMsg
|L1.72|
        POP      {r4,pc}
|L1.74|
        BL       doCuMsg
        POP      {r4,pc}
        ENDP

|L1.80|
        DCD      ||.bss||
|L1.84|
        DCD      ||.data||+0x30
|L1.88|
        DCD      0x0000aa55

        AREA ||i.DWHP83Mute||, CODE, READONLY, ALIGN=1

DWHP83Mute PROC
        PUSH     {r3,lr}
        MOVS     r0,#0
        MOV      r1,sp
        STRB     r0,[r1,#0]
        MOVS     r2,#1
        MOVS     r1,#0xc3
        MOV      r0,sp
        BL       writeDwhp83
        BL       exitGpioI2c
        POP      {r3,pc}
        ENDP


        AREA ||i.DWHP83RxtoTxMsg||, CODE, READONLY, ALIGN=2

DWHP83RxtoTxMsg PROC
        PUSH     {r4,lr}
        LDR      r0,|L3.48|
        MOVS     r1,#2
        STRB     r1,[r0,#0]
        MOVS     r2,#0
        STRB     r2,[r0,#1]
        STRB     r2,[r0,#2]
        STRB     r2,[r0,#3]
        MOVS     r2,#0x10
        STRB     r2,[r0,#4]
        MOVS     r2,#0xcf
        STRB     r2,[r0,#5]
        MOVS     r2,#0x13
        STRB     r2,[r0,#6]
        MOVS     r2,#0xaa
        STRB     r2,[r0,#7]
        MOVS     r2,#0xbb
        STRB     r2,[r0,#8]
        MOVS     r2,#8
        ADDS     r0,r0,#1
        BL       writeDwhp83
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L3.48|
        DCD      ||.bss||

        AREA ||i.DWHP83SendCmd||, CODE, READONLY, ALIGN=2

DWHP83SendCmd PROC
        PUSH     {r3-r7,lr}
        MOV      r7,r0
        MOV      r12,r1
        LDR      r0,|L4.116|
        MOVS     r1,#2
        STRB     r1,[r0,#0]
        MOVS     r5,#0
        STRB     r5,[r0,#1]
        STRB     r5,[r0,#2]
        STRB     r5,[r0,#3]
        MOVS     r3,#0x10
        STRB     r3,[r0,#4]
        MOVS     r3,#0xcf
        STRB     r3,[r0,#5]
        MOVS     r3,#0x13
        LDR      r6,|L4.120|
        STRB     r3,[r0,#6]
        LDRH     r4,[r6,#4]  ; cc_count
        MOV      r3,r0
        ADDS     r4,r4,#1
        STRH     r4,[r6,#4]
        STRB     r4,[r3,#9]
        LSRS     r4,r4,#8
        STRB     r4,[r3,#0xa]
        STRB     r2,[r3,#7]
        LSRS     r2,r2,#8
        STRB     r2,[r3,#8]
        STRB     r7,[r0,#0xb]
        MOV      r2,r12
        STRB     r2,[r0,#0xc]
        MOV      r2,r6
        ADDS     r2,r2,#0x30
        LDRB     r3,[r2,#6]  ; dwhp83_receive_msg
        STRB     r3,[r0,#0xd]
        ADDS     r2,r0,#7
        STR      r2,[r6,#0x20]  ; p
        STRB     r5,[r0,#0xe]
        LDRB     r4,[r2,#0]
        LDRB     r5,[r2,#1]
        LDRB     r6,[r2,#3]
        ADDS     r4,r4,r5
        LDRB     r5,[r2,#2]
        ADDS     r5,r5,r6
        ADDS     r4,r4,r5
        LDRB     r5,[r2,#4]
        LDRB     r2,[r2,#5]
        ADDS     r4,r4,r5
        ADDS     r2,r4,r2
        ADDS     r2,r2,r3
        STRB     r2,[r0,#0xe]
        MOVS     r2,#0xf
        ADDS     r0,r0,#1
        BL       writeDwhp83
        BL       exitGpioI2c
        POP      {r3-r7,pc}
        ENDP

        DCW      0x0000
|L4.116|
        DCD      ||.bss||+0x84
|L4.120|
        DCD      ||.data||

        AREA ||i.DWHP83TxToRx||, CODE, READONLY, ALIGN=1

DWHP83TxToRx PROC
        BX       lr
        ENDP


        AREA ||i.DWHP83UnMute||, CODE, READONLY, ALIGN=1

DWHP83UnMute PROC
        PUSH     {r3,lr}
        MOVS     r0,#1
        MOV      r1,sp
        STRB     r0,[r1,#0]
        MOV      r2,r0
        MOVS     r1,#0xc3
        MOV      r0,sp
        BL       writeDwhp83
        BL       exitGpioI2c
        POP      {r3,pc}
        ENDP


        AREA ||i.DWP83CuCV||, CODE, READONLY, ALIGN=2

DWP83CuCV PROC
        PUSH     {r4-r7,lr}
        LDR      r0,|L7.60|
        LDRB     r4,[r0,#2]  ; dwhp83_type
        CMP      r4,#0xa0
        BEQ      |L7.56|
        LDR      r1,|L7.68|
        MOVS     r0,#0
        LDRB     r1,[r1,#0]
        LDR      r5,|L7.64|
        MOVS     r6,#4
        UXTB     r3,r1
|L7.22|
        LSLS     r1,r0,#1
        ADDS     r1,r1,r5
        LDRH     r1,[r1,#0x18]
        CMP      r1,#0
        BEQ      |L7.50|
        ADDS     r2,r5,r0
        MOV      r1,r2
        ADDS     r1,r1,#0x40
        LDRB     r7,[r1,#8]
        CMP      r7,r4
        BNE      |L7.50|
        ADDS     r2,r2,#0x20
        STRB     r6,[r2,#0x10]
        STRB     r3,[r1,#0x14]
|L7.50|
        ADDS     r0,r0,#1
        CMP      r0,#0xc
        BCC      |L7.22|
|L7.56|
        POP      {r4-r7,pc}
        ENDP

        DCW      0x0000
|L7.60|
        DCD      ||.data||
|L7.64|
        DCD      ||.bss||+0x24
|L7.68|
        DCD      amp_volume

        AREA ||i.DWP83CuPowerOn||, CODE, READONLY, ALIGN=2

DWP83CuPowerOn PROC
        MOVS     r0,#0
        LDR      r2,|L8.20|
        MOVS     r1,#5
|L8.6|
        ADDS     r3,r2,r0
        ADDS     r3,r3,#0x20
        ADDS     r0,r0,#1
        STRB     r1,[r3,#0x1c]
        CMP      r0,#0xc
        BCC      |L8.6|
        BX       lr
        ENDP

|L8.20|
        DCD      ||.bss||+0x24

        AREA ||i.DWP83MuPowerOn||, CODE, READONLY, ALIGN=2

DWP83MuPowerOn PROC
        LDR      r0,|L9.12|
        MOVS     r2,#4
        LDR      r1,[r0,#0x14]  ; Dwhp83_flag
        ORRS     r1,r1,r2
        STR      r1,[r0,#0x14]  ; Dwhp83_flag
        BX       lr
        ENDP

|L9.12|
        DCD      ||.data||

        AREA ||i.DWP83SpiritTask||, CODE, READONLY, ALIGN=2

DWP83SpiritTask PROC
        PUSH     {r4-r6,lr}
        BL       Dwhp83CuMuDetect
        LDR      r4,|L10.220|
        LDRB     r0,[r4,#1]  ; ack_error
        CMP      r0,#0
        BEQ      |L10.18|
        MOVS     r0,#0xa
        B        |L10.154|
|L10.18|
        LDR      r5,|L10.224|
        MOVS     r6,#0xff
        STR      r6,[r5,#0]  ; breath_flag
        LDR      r0,[r4,#0x10]  ; Dwhp83_CuMu
        LDR      r1,|L10.228|
        CMP      r0,r1
        BNE      |L10.158|
        LDR      r0,[r4,#0x18]  ; Dwhp83_route_count
        ADDS     r0,r0,#1
        STR      r0,[r4,#0x18]  ; Dwhp83_route_count
        BL       Dwhp83GetStatus
        LDR      r0,|L10.220|
        ADDS     r0,r0,#0x2c
        LDRB     r0,[r0,#0]  ; dwhp83_status
        CMP      r0,#1
        BNE      |L10.142|
        LDR      r0,[r4,#0x28]  ; ck
        ADDS     r0,r0,#1
        STR      r0,[r4,#0x28]  ; ck
        LSLS     r0,r0,#31
        BEQ      |L10.72|
        LDRH     r2,[r4,#6]  ; mu_addr
        LDRB     r1,[r4,#2]  ; dwhp83_type
        MOVS     r0,#1
        BL       DWHP83SendCmd
|L10.72|
        MOVS     r0,#3
        BL       sysDelayMs
        LDRB     r0,[r4,#0x14]  ; Dwhp83_flag
        LSLS     r0,r0,#31
        BEQ      |L10.94|
        LDRH     r2,[r4,#6]  ; mu_addr
        MOVS     r1,#0
        MOVS     r0,#2
        BL       DWHP83SendCmd
|L10.94|
        MOVS     r0,#3
        BL       sysDelayMs
        LDRB     r0,[r4,#0x14]  ; Dwhp83_flag
        LSLS     r0,r0,#29
        BPL      |L10.116|
        LDRH     r2,[r4,#6]  ; mu_addr
        MOVS     r1,#0
        MOVS     r0,#5
        BL       DWHP83SendCmd
|L10.116|
        MOVS     r0,#3
        BL       sysDelayMs
        LDRB     r0,[r4,#0x14]  ; Dwhp83_flag
        LSLS     r0,r0,#30
        BPL      |L10.142|
        LDR      r0,|L10.232|
        LDRH     r2,[r4,#6]  ; mu_addr
        LDRB     r0,[r0,#0]  ; amp_volume
        UXTB     r1,r0
        LDRB     r0,[r4,#2]  ; dwhp83_type
        BL       DWPH83VolumeChange
|L10.142|
        LDR      r0,[r4,#0x18]  ; Dwhp83_route_count
        ADDS     r0,r0,#1
        STR      r0,[r4,#0x18]  ; Dwhp83_route_count
        CMP      r0,#0xa
        BLS      |L10.204|
        MOVS     r0,#8
|L10.154|
        STR      r0,[r4,#0x18]  ; Dwhp83_route_count
        B        |L10.204|
|L10.158|
        BL       dealMuContainer
        LDR      r0,|L10.236|
        LDRB     r0,[r0,#0]  ; dev_state
        CMP      r0,#2
        BEQ      |L10.204|
        LDR      r0,|L10.240|
        LDRB     r0,[r0,#0]  ; dev_input
        CMP      r0,#0
        BEQ      |L10.184|
        CMP      r0,#1
        BEQ      |L10.196|
        B        |L10.202|
|L10.184|
        LDR      r0,|L10.244|
        LDRB     r0,[r0,#0]  ; state_color
        CMP      r0,#8
        BEQ      |L10.202|
        MOVS     r0,#1
        B        |L10.198|
|L10.196|
        MOVS     r0,#5
|L10.198|
        STR      r0,[r5,#0]  ; breath_flag
        B        |L10.204|
|L10.202|
        STR      r6,[r5,#0]  ; breath_flag
|L10.204|
        LDR      r3,|L10.248|
        MOVS     r2,#0
        LDR      r1,|L10.252|
        LDRB     r0,[r4,#3]  ; dwph83_id
        BL       startATask
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L10.220|
        DCD      ||.data||
|L10.224|
        DCD      breath_flag
|L10.228|
        DCD      0x0000aa55
|L10.232|
        DCD      amp_volume
|L10.236|
        DCD      dev_state
|L10.240|
        DCD      dev_input
|L10.244|
        DCD      state_color
|L10.248|
        DCD      DWP83SpiritTask
|L10.252|
        DCD      0x000005dc

        AREA ||i.DWPH83Init||, CODE, READONLY, ALIGN=2

DWPH83Init PROC
        PUSH     {r4-r6,lr}
        MOVS     r4,#0
        BL       getATask
        LDR      r1,|L11.60|
        MOVS     r2,#0
        STRB     r0,[r1,#3]
        LDR      r3,|L11.64|
        MOVS     r5,#5
        STR      r2,[r1,#0x18]  ; Dwhp83_route_count
|L11.20|
        LSLS     r1,r4,#1
        STRH     r2,[r3,r1]
        ADDS     r1,r1,r3
        ADDS     r4,r4,#1
        STRH     r5,[r1,#0x18]
        CMP      r4,#0xa
        BCC      |L11.20|
        LDR      r2,|L11.60|
        MOVS     r1,#0xff
        ADDS     r2,r2,#8
        STRB     r1,[r2,#2]
        STRB     r1,[r2,#1]
        STRB     r1,[r2,#0]
        MOVS     r1,#0x7d
        LDR      r3,|L11.68|
        MOVS     r2,#0
        LSLS     r1,r1,#3
        BL       startATask
        POP      {r4-r6,pc}
        ENDP

|L11.60|
        DCD      ||.data||
|L11.64|
        DCD      ||.bss||+0x24
|L11.68|
        DCD      DWP83SpiritTask

        AREA ||i.DWPH83VolumeChange||, CODE, READONLY, ALIGN=2

DWPH83VolumeChange PROC
        PUSH     {r3-r7,lr}
        MOV      r6,r0
        MOV      r7,r1
        LDR      r0,|L12.104|
        MOVS     r1,#2
        STRB     r1,[r0,#0]
        MOVS     r5,#0
        STRB     r5,[r0,#1]
        STRB     r5,[r0,#2]
        STRB     r5,[r0,#3]
        MOVS     r3,#0x10
        STRB     r3,[r0,#4]
        MOVS     r3,#0xcf
        STRB     r3,[r0,#5]
        MOVS     r3,#0x13
        STRB     r3,[r0,#6]
        LDR      r3,|L12.108|
        LDRH     r4,[r3,#4]  ; cc_count
        ADDS     r4,r4,#1
        STRH     r4,[r3,#4]
        MOV      r3,r0
        STRB     r4,[r3,#9]
        LSRS     r4,r4,#8
        STRB     r4,[r3,#0xa]
        STRB     r2,[r3,#7]
        LSRS     r2,r2,#8
        STRB     r2,[r3,#8]
        MOVS     r2,#4
        STRB     r2,[r0,#0xb]
        STRB     r6,[r0,#0xc]
        STRB     r7,[r0,#0xd]
        LDRB     r3,[r0,#7]
        LDRB     r4,[r0,#8]
        LDRB     r5,[r0,#0xa]
        ADDS     r3,r3,r4
        LDRB     r4,[r0,#9]
        UXTB     r2,r7
        ADDS     r4,r4,r5
        ADDS     r3,r3,r4
        ADDS     r3,r3,#4
        UXTB     r4,r6
        ADDS     r3,r3,r4
        ADDS     r2,r3,r2
        STRB     r2,[r0,#0xe]
        MOVS     r2,#0xf
        ADDS     r0,r0,#1
        BL       writeDwhp83
        BL       exitGpioI2c
        POP      {r3-r7,pc}
        ENDP

        DCW      0x0000
|L12.104|
        DCD      ||.bss||+0x84
|L12.108|
        DCD      ||.data||

        AREA ||i.Dwhp83CuMuDetect||, CODE, READONLY, ALIGN=2

Dwhp83CuMuDetect PROC
        PUSH     {r4,lr}
        MOVS     r1,#1
        MOVS     r0,#0x21
        BL       readDwhp83
        BL       exitGpioI2c
        LDR      r1,|L13.52|
        LDRB     r0,[r1,#1]  ; ack_error
        CMP      r0,#1
        BEQ      |L13.36|
        LDR      r0,|L13.56|
        LDRB     r0,[r0,#0]  ; dwhp83_buf
        CMP      r0,#0xcc
        BEQ      |L13.40|
        CMP      r0,#0x55
        BEQ      |L13.44|
        B        |L13.48|
|L13.36|
        MOVS     r0,#0
        POP      {r4,pc}
|L13.40|
        LDR      r0,|L13.60|
        B        |L13.46|
|L13.44|
        LDR      r0,|L13.64|
|L13.46|
        STR      r0,[r1,#0x10]  ; Dwhp83_CuMu
|L13.48|
        MOVS     r0,#1
        POP      {r4,pc}
        ENDP

|L13.52|
        DCD      ||.data||
|L13.56|
        DCD      ||.bss||
|L13.60|
        DCD      0x000055aa
|L13.64|
        DCD      0x0000aa55

        AREA ||i.Dwhp83EnterPairing||, CODE, READONLY, ALIGN=1

Dwhp83EnterPairing PROC
        PUSH     {r3,lr}
        MOVS     r0,#1
        MOV      r1,sp
        STRB     r0,[r1,#0]
        MOV      r2,r0
        MOVS     r1,#0xc2
        MOV      r0,sp
        BL       writeDwhp83
        BL       exitGpioI2c
        POP      {r3,pc}
        ENDP


        AREA ||i.Dwhp83FixedCoCo||, CODE, READONLY, ALIGN=2

Dwhp83FixedCoCo PROC
        PUSH     {r3,lr}
        ADR      r0,|L15.44|
        LDR      r0,[r0,#0]
        STR      r0,[sp,#0]
        MOVS     r0,#0x37
        MOV      r1,sp
        STRB     r0,[r1,#0]
        MOVS     r0,#0x35
        STRB     r0,[r1,#1]
        MOVS     r0,#0x30
        STRB     r0,[r1,#2]
        MOVS     r2,#3
        MOVS     r1,#0xc6
        MOV      r0,sp
        BL       writeDwhp83
        MOVS     r0,#0x14
        BL       sysDelayMs
        BL       exitGpioI2c
        POP      {r3,pc}
        ENDP

|L15.44|
        DCB      "Pr1",0

        AREA ||i.Dwhp83GetMsg||, CODE, READONLY, ALIGN=2

Dwhp83GetMsg PROC
        PUSH     {r4,lr}
        MOVS     r1,#5
        MOVS     r0,#0x3e
        BL       readDwhp83
        LDR      r4,|L16.64|
        LDRB     r0,[r4,#1]  ; ack_error
        CMP      r0,#0
        BNE      |L16.58|
        LDR      r0,|L16.68|
        LDRB     r1,[r0,#1]  ; dwhp83_buf
        CMP      r1,#0xaa
        BNE      |L16.58|
        LDRB     r1,[r0,#2]  ; dwhp83_buf
        CMP      r1,#0xbb
        BNE      |L16.58|
        LDRB     r0,[r0,#0]  ; dwhp83_buf
        CMP      r0,#0x13
        BNE      |L16.58|
        MOVS     r0,#0
        STR      r0,[r4,#0x10]  ; Dwhp83_CuMu
        BL       Dwhp83CuMuDetect
        LDR      r0,[r4,#0x10]  ; Dwhp83_CuMu
        LDR      r1,|L16.72|
        CMP      r0,r1
        BNE      |L16.58|
        BL       changetoWirelessSlave
|L16.58|
        BL       exitGpioI2c
        POP      {r4,pc}
        ENDP

|L16.64|
        DCD      ||.data||
|L16.68|
        DCD      ||.bss||
|L16.72|
        DCD      0x000055aa

        AREA ||i.Dwhp83GetStatus||, CODE, READONLY, ALIGN=2

Dwhp83GetStatus PROC
        PUSH     {r4,lr}
        MOVS     r1,#3
        MOVS     r0,#0x3f
        BL       readDwhp83
        LDR      r2,|L17.56|
        LDRB     r1,[r2,#0]  ; dwhp83_buf
        LDRB     r0,[r2,#1]  ; dwhp83_buf
        LDRB     r2,[r2,#2]  ; dwhp83_buf
        ADDS     r3,r1,r0
        CMP      r3,r2
        BNE      |L17.50|
        LSLS     r3,r1,#31
        LDR      r1,|L17.60|
        LSRS     r3,r3,#31
        STRB     r3,[r1,#0]
        MOVS     r3,#4
        ANDS     r3,r3,r0
        STRB     r3,[r1,#2]
        MOVS     r3,#8
        ANDS     r0,r0,r3
        STRB     r0,[r1,#1]
        LSLS     r0,r2,#31
        LSRS     r0,r0,#31
        STRB     r0,[r1,#3]
|L17.50|
        BL       exitGpioI2c
        POP      {r4,pc}
        ENDP

|L17.56|
        DCD      ||.bss||
|L17.60|
        DCD      ||.data||+0x2c

        AREA ||i.Dwhp83Master||, CODE, READONLY, ALIGN=1

Dwhp83Master PROC
        PUSH     {r3,lr}
        MOVS     r0,#1
        MOV      r1,sp
        STRB     r0,[r1,#0]
        MOV      r2,r0
        MOVS     r1,#0xca
        MOV      r0,sp
        BL       writeDwhp83
        BL       exitGpioI2c
        BL       DWP83CuPowerOn
        POP      {r3,pc}
        ENDP


        AREA ||i.Dwhp83OutStandby||, CODE, READONLY, ALIGN=1

Dwhp83OutStandby PROC
        PUSH     {r4,lr}
        MOVS     r2,#0
        MOVS     r1,#0xcd
        MOV      r0,r2
        BL       writeDwhp83
        BL       exitGpioI2c
        POP      {r4,pc}
        ENDP


        AREA ||i.Dwhp83SendCoCo||, CODE, READONLY, ALIGN=2

Dwhp83SendCoCo PROC
        PUSH     {r2-r4,lr}
        LDR      r1,|L20.44|
        MOV      r2,sp
        LDM      r1,{r0,r1}
        STR      r0,[sp,#0]
        LDR      r0,|L20.48|
        STR      r1,[sp,#4]
        LDRB     r1,[r0,#0]  ; coco
        STRB     r1,[r2,#5]
        LDRB     r1,[r0,#1]  ; coco
        STRB     r1,[r2,#6]
        LDRB     r0,[r0,#2]  ; coco
        STRB     r0,[r2,#7]
        MOVS     r2,#8
        MOVS     r1,#2
        MOV      r0,sp
        BL       writeDwhp83
        BL       exitGpioI2c
        POP      {r2-r4,pc}
        ENDP

        DCW      0x0000
|L20.44|
        DCD      ||.constdata||
|L20.48|
        DCD      ||.data||+0x8

        AREA ||i.Dwhp83SendMsg||, CODE, READONLY, ALIGN=1

Dwhp83SendMsg PROC
        PUSH     {r0,lr}
        MOVS     r2,#1
        MOVS     r1,#0x20
        MOV      r0,sp
        BL       writeDwhp83
        BL       exitGpioI2c
        POP      {r3,pc}
        ENDP


        AREA ||i.Dwhp83Slave||, CODE, READONLY, ALIGN=1

Dwhp83Slave PROC
        PUSH     {r3,lr}
        MOVS     r0,#0
        MOV      r1,sp
        STRB     r0,[r1,#0]
        MOVS     r2,#1
        MOVS     r1,#0xca
        MOV      r0,sp
        BL       writeDwhp83
        BL       exitGpioI2c
        POP      {r3,pc}
        ENDP


        AREA ||i.Dwhp83Standby||, CODE, READONLY, ALIGN=1

Dwhp83Standby PROC
        PUSH     {r4,lr}
        MOVS     r2,#0
        MOVS     r1,#0xcb
        MOV      r0,r2
        BL       writeDwhp83
        BL       exitGpioI2c
        POP      {r4,pc}
        ENDP


        AREA ||i.Dwhp83StopPairing||, CODE, READONLY, ALIGN=1

Dwhp83StopPairing PROC
        PUSH     {r3,lr}
        MOVS     r0,#0
        MOV      r1,sp
        STRB     r0,[r1,#0]
        MOVS     r2,#1
        MOVS     r1,#0xc2
        MOV      r0,sp
        BL       writeDwhp83
        BL       exitGpioI2c
        POP      {r3,pc}
        ENDP


        AREA ||i.Dwhp83WriteCoCo||, CODE, READONLY, ALIGN=2

Dwhp83WriteCoCo PROC
        PUSH     {r4,lr}
        MOVS     r2,#3
        MOVS     r1,#0xc6
        LDR      r0,|L25.24|
        BL       writeDwhp83
        MOVS     r0,#0x14
        BL       sysDelayMs
        BL       exitGpioI2c
        POP      {r4,pc}
        ENDP

|L25.24|
        DCD      ||.data||+0x8

        AREA ||i.GPIO_SET_MODE||, CODE, READONLY, ALIGN=1

GPIO_SET_MODE PROC
        PUSH     {r4,lr}
        LDR      r3,[r0,#0]
        LSLS     r1,r1,#1
        MOVS     r4,#3
        LSLS     r4,r4,r1
        BICS     r3,r3,r4
        LSLS     r2,r2,r1
        ORRS     r3,r3,r2
        STR      r3,[r0,#0]
        POP      {r4,pc}
        ENDP


        AREA ||i.ack||, CODE, READONLY, ALIGN=2

ack PROC
        PUSH     {r3-r7,lr}
        LDR      r5,|L27.52|
        MOVS     r4,#0
        STR      r4,[r5,#0]
        MOVS     r0,#3
        BL       sysDelayUs
        SUBS     r6,r5,#4
        STR      r4,[r6,#0]
        MOVS     r0,#3
        BL       sysDelayUs
        MOVS     r7,#1
        STR      r7,[r5,#0]
        MOVS     r0,#6
        BL       sysDelayUs
        STR      r4,[r5,#0]
        MOVS     r0,#6
        BL       sysDelayUs
        STR      r7,[r6,#0]
        MOVS     r0,#3
        BL       sysDelayUs
        POP      {r3-r7,pc}
        ENDP

|L27.52|
        DCD      0x5000422c

        AREA ||i.addMuContainer||, CODE, READONLY, ALIGN=2

addMuContainer PROC
        PUSH     {r4-r6,lr}
        LDR      r2,|L28.76|
        MOVS     r1,#0xff
        MOVS     r0,#0
        LDRB     r5,[r2,#5]
        LDRH     r3,[r2,#0]
        LDR      r4,|L28.80|
        MOVS     r6,#5
|L28.16|
        LSLS     r2,r0,#1
        LDRH     r2,[r4,r2]
        CMP      r2,#0
        BNE      |L28.26|
        UXTH     r1,r0
|L28.26|
        CMP      r3,r2
        BNE      |L28.48|
        CMP      r2,#7
        BLS      |L28.48|
        LSLS     r1,r0,#1
        ADDS     r1,r1,r4
        ADDS     r0,r4,r0
        STRH     r6,[r1,#0x18]
        ADDS     r0,r0,#0x40
        STRB     r5,[r0,#8]
|L28.46|
        POP      {r4-r6,pc}
|L28.48|
        ADDS     r0,r0,#1
        CMP      r0,#0xc
        BCC      |L28.16|
        CMP      r1,#0xff
        BEQ      |L28.46|
        LSLS     r0,r1,#1
        ADDS     r1,r4,r1
        STRH     r3,[r4,r0]
        ADDS     r1,r1,#0x40
        STRB     r5,[r1,#8]
        ADDS     r0,r0,r4
        STRH     r6,[r0,#0x18]
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L28.76|
        DCD      ||.data||+0x30
|L28.80|
        DCD      ||.bss||+0x24

        AREA ||i.changetoWirelessMaster||, CODE, READONLY, ALIGN=1

changetoWirelessMaster PROC
        BX       lr
        ENDP


        AREA ||i.changetoWirelessSlave||, CODE, READONLY, ALIGN=2

changetoWirelessSlave PROC
        PUSH     {r4-r6,lr}
        LDR      r5,|L30.108|
        MOVS     r4,#0
        LDR      r1,|L30.112|
        MOVS     r0,#1
        STR      r4,[r5,#0x14]  ; Dwhp83_flag
        STRB     r0,[r1,#0]
        LDR      r1,|L30.116|
        STR      r4,[r1,#0]  ; led_saving_couter
        LDR      r1,|L30.120|
        STRB     r4,[r1,#0]
        LDR      r1,|L30.124|
        STRB     r0,[r1,#0]
        LDR      r0,|L30.128|
        STRB     r4,[r0,#0]
        BL       ampMute
        LDR      r1,|L30.132|
        MOVS     r0,#2
        STRB     r0,[r1,#0]
        LDR      r0,|L30.136|
        LDR      r1,|L30.140|
        LDRB     r0,[r0,#2]
        STRB     r0,[r1,#0]
        BL       ledColorSet
        LDR      r0,|L30.144|
        STR      r4,[r0,#0]
        MOVS     r0,#0xff
        ADDS     r0,r0,#0xf5
        BL       sysDelayMs
        BL       unMute
        MOVS     r0,#0x14
        BL       sysDelayMs
        BL       Dwhp83Slave
        STRB     r4,[r5,#0]
        BL       setConfig
        LDR      r0,|L30.152|
        MOVS     r1,#0xaf
        LDR      r3,|L30.148|
        MOVS     r2,#0
        LSLS     r1,r1,#4
        LDRB     r0,[r0,#0]  ; pt2314_id
        BL       startATask
        LDR      r0,|L30.156|
        STRB     r4,[r0,#0]
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L30.108|
        DCD      ||.data||
|L30.112|
        DCD      wireless_mode_open
|L30.116|
        DCD      led_saving_couter
|L30.120|
        DCD      led_saving_power_flag
|L30.124|
        DCD      change_source_mute
|L30.128|
        DCD      change_source_counter
|L30.132|
        DCD      dev_input
|L30.136|
        DCD      input_channel_color
|L30.140|
        DCD      state_color
|L30.144|
        DCD      0x500042b4
|L30.148|
        DCD      dwph83Check
|L30.152|
        DCD      pt2314_id
|L30.156|
        DCD      WB_paired_flag

        AREA ||i.check_coco||, CODE, READONLY, ALIGN=2

check_coco PROC
        PUSH     {r4,lr}
        MOVS     r1,#1
        MOVS     r0,#0x3d
        BL       readDwhp83
        BL       exitGpioI2c
        LDR      r0,|L31.28|
        LDRB     r1,[r0,#0]  ; dwhp83_buf
        LDR      r0,|L31.32|
        STRB     r1,[r0,#0]
        MOVS     r0,#1
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L31.28|
        DCD      ||.bss||
|L31.32|
        DCD      ||.data||+0x8

        AREA ||i.cuDealCmd||, CODE, READONLY, ALIGN=1

cuDealCmd PROC
        BX       lr
        ENDP


        AREA ||i.dealMuContainer||, CODE, READONLY, ALIGN=2

dealMuContainer PROC
        PUSH     {r3-r7,lr}
        LDR      r4,|L33.96|
        MOVS     r7,#0
        LDR      r5,|L33.100|
        STR      r7,[r4,#0x24]  ; i
|L33.10|
        LDR      r3,[r4,#0x24]  ; i
        LSLS     r0,r3,#1
        ADDS     r1,r0,r5
        LDRH     r2,[r1,#0x18]
        CMP      r2,#0
        BEQ      |L33.80|
        LDRH     r6,[r5,r0]
        CMP      r6,#0
        BEQ      |L33.80|
        SUBS     r2,r2,#1
        STRH     r2,[r1,#0x18]
        ADDS     r1,r5,r3
        ADDS     r1,r1,#0x20
        LDRB     r1,[r1,#0x1c]
        CMP      r1,#5
        BNE      |L33.52|
        LDRH     r2,[r5,r0]
        MOVS     r1,#0
        MOVS     r0,#5
        BL       DWHP83SendCmd
|L33.52|
        LDR      r1,[r4,#0x24]  ; i
        MOVS     r2,#0x30
        ADDS     r0,r5,r1
        LDRB     r2,[r2,r0]
        CMP      r2,#4
        BNE      |L33.84|
        LSLS     r1,r1,#1
        LDRH     r2,[r5,r1]
        ADDS     r0,r0,#0x40
        LDRB     r1,[r0,#0x14]
        LDRB     r0,[r0,#8]
        BL       DWPH83VolumeChange
        B        |L33.84|
|L33.80|
        STRH     r7,[r5,r0]
        STRH     r7,[r1,#0x18]
|L33.84|
        LDR      r0,[r4,#0x24]  ; i
        ADDS     r0,r0,#1
        STR      r0,[r4,#0x24]  ; i
        CMP      r0,#0xc
        BCC      |L33.10|
        POP      {r3-r7,pc}
        ENDP

|L33.96|
        DCD      ||.data||
|L33.100|
        DCD      ||.bss||+0x24

        AREA ||i.delayus||, CODE, READONLY, ALIGN=1

delayus PROC
        PUSH     {r4,lr}
        BL       sysDelayUs
        POP      {r4,pc}
        ENDP


        AREA ||i.doCuMsg||, CODE, READONLY, ALIGN=2

doCuMsg PROC
        PUSH     {r3-r7,lr}
        LDR      r5,|L35.300|
        LDR      r6,|L35.304|
        LDRB     r0,[r5,#4]  ; dwhp83_receive_msg
        CMP      r0,#5
        BEQ      |L35.188|
        BGT      |L35.114|
        CMP      r0,#1
        BEQ      |L35.146|
        CMP      r0,#2
        BEQ      |L35.158|
        CMP      r0,#4
        BNE      |L35.112|
        BL       dwhp83CuAck
        LDRB     r0,[r5,#5]  ; dwhp83_receive_msg
        CMP      r0,#0xa0
        BEQ      |L35.112|
        MOV      r1,r5
        SUBS     r1,r1,#0x30
        LDRB     r1,[r1,#2]  ; dwhp83_type
        CMP      r0,r1
        BNE      |L35.56|
        LDR      r1,|L35.308|
        LDRB     r0,[r5,#6]  ; dwhp83_receive_msg
        STR      r0,[r1,#0]  ; amp_volume
        BL       ampSetVolume
|L35.56|
        MOVS     r4,#0
|L35.58|
        LSLS     r2,r4,#1
        ADDS     r0,r2,r6
        LDRH     r0,[r0,#0x18]
        CMP      r0,#0
        BEQ      |L35.106|
        LDRH     r0,[r6,r2]
        LDRH     r1,[r5,#0]  ; dwhp83_receive_msg
        CMP      r0,r1
        BEQ      |L35.106|
        ADDS     r3,r6,r4
        MOV      r7,r3
        ADDS     r7,r7,#0x40
        LDRB     r1,[r7,#8]
        LDRB     r0,[r5,#5]  ; dwhp83_receive_msg
        CMP      r1,r0
        BNE      |L35.106|
        MOVS     r1,#4
        ADDS     r3,r3,#0x20
        STRB     r1,[r3,#0x10]
        LDRB     r1,[r5,#6]  ; dwhp83_receive_msg
        STRB     r1,[r7,#0x14]
        LDRH     r2,[r6,r2]
        BL       DWPH83VolumeChange
|L35.106|
        ADDS     r4,r4,#1
        CMP      r4,#0xc
        BCC      |L35.58|
|L35.112|
        POP      {r3-r7,pc}
|L35.114|
        LDR      r1,|L35.300|
        MOVS     r2,#0
        LDRH     r1,[r1,#0]
        CMP      r0,#0x84
        BEQ      |L35.252|
        CMP      r0,#0x85
        BNE      |L35.112|
        MOVS     r0,#0
|L35.130|
        LSLS     r3,r0,#1
        LDRH     r3,[r6,r3]
        CMP      r3,r1
        BNE      |L35.290|
        ADDS     r0,r6,r0
        ADDS     r0,r0,#0x20
        STRB     r2,[r0,#0x1c]
        POP      {r3-r7,pc}
|L35.146|
        MOVS     r0,#1
        BL       dwhp83CuAck
        BL       addMuContainer
        POP      {r3-r7,pc}
|L35.158|
        MOVS     r0,#2
        BL       dwhp83CuAck
        MOVS     r0,#0x32
        BL       sysDelayMs
        MOVS     r0,#2
        BL       dwhp83CuAck
        MOVS     r0,#0x32
        BL       sysDelayMs
        BL       changetoWirelessSlave
|L35.186|
        POP      {r3-r7,pc}
|L35.188|
        MOVS     r0,#5
        BL       dwhp83CuAck
        MOVS     r4,#0
        MOVS     r7,#5
|L35.198|
        LSLS     r0,r4,#1
        ADDS     r1,r0,r6
        LDRH     r1,[r1,#0x18]
        CMP      r1,#0
        BEQ      |L35.232|
        LDRH     r1,[r6,r0]
        LDRH     r2,[r5,#0]  ; dwhp83_receive_msg
        CMP      r1,r2
        BEQ      |L35.232|
        ADDS     r1,r6,r4
        ADDS     r1,r1,#0x20
        STRB     r7,[r1,#0x1c]
        LDRH     r2,[r6,r0]
        MOVS     r1,#0
        MOVS     r0,#5
        BL       DWHP83SendCmd
|L35.232|
        ADDS     r4,r4,#1
        CMP      r4,#0xc
        BCC      |L35.198|
        LDR      r0,|L35.312|
        LDRB     r0,[r0,#0]  ; dev_state
        CMP      r0,#2
        BNE      |L35.186|
        BL       outStandby
        POP      {r3-r7,pc}
|L35.252|
        LDRB     r3,[r5,#6]
        MOVS     r0,#0
|L35.256|
        LSLS     r4,r0,#1
        LDRH     r4,[r6,r4]
        CMP      r4,r1
        BNE      |L35.282|
        ADDS     r4,r6,r0
        ADDS     r4,r4,#0x40
        LDRB     r4,[r4,#0x14]
        CMP      r4,r3
        BNE      |L35.282|
        ADDS     r0,r6,r0
        ADDS     r0,r0,#0x20
        STRB     r2,[r0,#0x10]
        POP      {r3-r7,pc}
|L35.282|
        ADDS     r0,r0,#1
        CMP      r0,#0xc
        BCC      |L35.256|
        POP      {r3-r7,pc}
|L35.290|
        ADDS     r0,r0,#1
        CMP      r0,#0xc
        BCC      |L35.130|
        POP      {r3-r7,pc}
        ENDP

        DCW      0x0000
|L35.300|
        DCD      ||.data||+0x30
|L35.304|
        DCD      ||.bss||+0x24
|L35.308|
        DCD      amp_volume
|L35.312|
        DCD      dev_state

        AREA ||i.doMuMsg||, CODE, READONLY, ALIGN=2

doMuMsg PROC
        PUSH     {r4-r6,lr}
        LDR      r5,|L36.136|
        MOV      r4,r5
        SUBS     r4,r4,#0x30
        LDRH     r0,[r5,#0]  ; dwhp83_receive_msg
        LDRH     r2,[r4,#6]  ; mu_addr
        CMP      r0,r2
        BNE      |L36.46|
        LDRB     r0,[r5,#4]  ; dwhp83_receive_msg
        MOVS     r1,#0
        LDR      r6,|L36.140|
        CMP      r0,#0x82
        BEQ      |L36.110|
        BGT      |L36.48|
        CMP      r0,#4
        BEQ      |L36.66|
        CMP      r0,#5
        BEQ      |L36.100|
        CMP      r0,#0x81
        BNE      |L36.46|
        STR      r1,[r4,#0x18]  ; Dwhp83_route_count
        BL       saveCoCo
|L36.46|
        POP      {r4-r6,pc}
|L36.48|
        LDR      r1,|L36.136|
        SUBS     r1,r1,#0x30
        LDR      r1,[r1,#0x14]
        CMP      r0,#0x84
        BEQ      |L36.118|
        CMP      r0,#0x85
        BNE      |L36.46|
        MOVS     r0,#5
        B        |L36.128|
|L36.66|
        MOVS     r1,#0
        MOVS     r0,#0x84
        BL       DWHP83SendCmd
        LDR      r0,|L36.144|
        LDRB     r0,[r0,#0]  ; dev_input
        CMP      r0,#2
        BNE      |L36.46|
        LDRB     r0,[r5,#5]  ; dwhp83_receive_msg
        LDRB     r1,[r4,#2]  ; dwhp83_type
        CMP      r0,r1
        BNE      |L36.46|
        LDRB     r0,[r5,#6]  ; dwhp83_receive_msg
        STR      r0,[r6,#0]  ; amp_volume
        BL       ampSetVolume
        POP      {r4-r6,pc}
|L36.100|
        MOVS     r1,#0
        MOVS     r0,#0x85
        BL       DWHP83SendCmd
        POP      {r4-r6,pc}
|L36.110|
        STR      r1,[r4,#0x14]  ; Dwhp83_flag
        BL       Dwhp83Master
|L36.116|
        POP      {r4-r6,pc}
|L36.118|
        LDRB     r0,[r5,#6]  ; dwhp83_receive_msg
        LDR      r2,[r6,#0]  ; amp_volume
        CMP      r0,r2
        BNE      |L36.116|
        MOVS     r0,#2
|L36.128|
        BICS     r1,r1,r0
        STR      r1,[r4,#0x14]  ; Dwhp83_flag
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L36.136|
        DCD      ||.data||+0x30
|L36.140|
        DCD      amp_volume
|L36.144|
        DCD      dev_input

        AREA ||i.dwhp83CuAck||, CODE, READONLY, ALIGN=2

dwhp83CuAck PROC
        PUSH     {r4,lr}
        LDR      r1,|L37.20|
        LDRH     r2,[r1,#0]  ; dwhp83_receive_msg
        MOVS     r1,#0x80
        ORRS     r0,r0,r1
        MOVS     r1,#0
        BL       DWHP83SendCmd
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L37.20|
        DCD      ||.data||+0x30

        AREA ||i.dwhp83TestProcess||, CODE, READONLY, ALIGN=2

dwhp83TestProcess PROC
        MOVS     r7,#1
        LDR      r6,|L38.84|
        LDR      r4,|L38.88|
        MOVS     r5,#0
|L38.8|
        LDR      r0,[r4,#0x1c]  ; debug_dwhp83
        MOVS     r3,r0
        BL       __ARM_common_switch8
        DCB      0x07,0x1d,0x05,0x09
        DCB      0x0f,0x12,0x15,0x1b
        DCB      0x1d,0x00
        BL       Dwhp83Master
        STRB     r7,[r4,#0]
        B        |L38.40|
        BL       Dwhp83Slave
        STRB     r5,[r4,#0]
|L38.40|
        BL       setConfig
        B        |L38.74|
        BL       Dwhp83SendCoCo
        B        |L38.74|
        BL       Dwhp83EnterPairing
        B        |L38.74|
        LDRB     r1,[r6,#0]  ; dwhp83_buf
        MOVS     r2,#0xf
        ADDS     r0,r6,#1
        BL       writeDwhp83
        B        |L38.74|
        BL       Dwhp83GetStatus
|L38.74|
        MOVS     r0,#1
        BL       sysDelayMs
        STR      r5,[r4,#0x1c]  ; debug_dwhp83
        B        |L38.8|
        ENDP

|L38.84|
        DCD      ||.bss||
|L38.88|
        DCD      ||.data||

        AREA ||i.dwph83Check||, CODE, READONLY, ALIGN=2

dwph83Check PROC
        PUSH     {r4-r6,lr}
        LDR      r4,|L39.56|
        LDR      r5,|L39.52|
        STR      r5,[r4,#0x10]  ; Dwhp83_CuMu
        BL       Dwhp83CuMuDetect
        LDR      r0,[r4,#0x10]  ; Dwhp83_CuMu
        CMP      r0,r5
        BNE      |L39.50|
        BL       Dwhp83Slave
        MOVS     r0,#0x32
        BL       sysDelayMs
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        BL       setConfig
        LDR      r0,|L39.68|
        LDR      r3,|L39.60|
        MOVS     r2,#0
        LDR      r1,|L39.64|
        LDRB     r0,[r0,#0]  ; pt2314_id
        BL       startATask
|L39.50|
        POP      {r4-r6,pc}
        ENDP

|L39.52|
        DCD      0x000055aa
|L39.56|
        DCD      ||.data||
|L39.60|
        DCD      dwph83Check
|L39.64|
        DCD      0x000009c4
|L39.68|
        DCD      pt2314_id

        AREA ||i.exitGpioI2c||, CODE, READONLY, ALIGN=2

exitGpioI2c PROC
        PUSH     {r4,lr}
        MOVS     r0,#0x50
        BL       sysDelayUs
        LDR      r1,|L40.24|
        MOVS     r0,#1
        STR      r0,[r1,#0]
        LDR      r1,|L40.28|
        MOVS     r0,#0
        STR      r0,[r1,#0xc]  ; i2c_gpio_enable
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L40.24|
        DCD      0x50004228
|L40.28|
        DCD      ||.data||

        AREA ||i.getMuAddr||, CODE, READONLY, ALIGN=2

getMuAddr PROC
        PUSH     {r4-r6,lr}
        LDR      r5,|L41.60|
        MOVS     r0,#1
        LDRB     r4,[r5,#0]  ; dev_input
        LDR      r1,|L41.64|
        STRB     r0,[r5,#0]
        STR      r0,[r1,#0]
        LDR      r1,|L41.64|
        MOVS     r0,#0
        SUBS     r1,r1,#8
        STR      r0,[r1,#0]
        MOVS     r0,#5
        BL       sysDelayMs
        LDR      r0,|L41.68|
        LDR      r1,|L41.72|
        LDR      r0,[r0,#0]  ; sum_H
        LSLS     r0,r0,#8
        LSRS     r0,r0,#16
        STRH     r0,[r1,#6]
        CMP      r0,#8
        BCS      |L41.54|
        MOVS     r2,#3
        LSLS     r0,r0,#8
        LSLS     r2,r2,#8
        ADDS     r0,r0,r2
        STRH     r0,[r1,#6]
|L41.54|
        STRB     r4,[r5,#0]
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L41.60|
        DCD      dev_input
|L41.64|
        DCD      0x500042b4
|L41.68|
        DCD      sum_H
|L41.72|
        DCD      ||.data||

        AREA ||i.getRandonCoCo||, CODE, READONLY, ALIGN=2

getRandonCoCo PROC
        LDR      r2,|L42.40|
        LDR      r0,[r2,#0]  ; systick_counter
        LDR      r1,[r2,#0]  ; systick_counter
        LSRS     r0,r0,#2
        CMP      r0,r1
        BEQ      |L42.16|
        MOVS     r0,#1
        B        |L42.18|
|L42.16|
        MOVS     r0,#0
|L42.18|
        LDR      r1,|L42.44|
        STRB     r0,[r1,#0]
        LDR      r3,[r2,#0]  ; systick_counter
        LSRS     r3,r3,#8
        EORS     r3,r3,r0
        STRB     r3,[r1,#1]
        LDR      r2,[r2,#0]  ; systick_counter
        LSRS     r2,r2,#8
        ORRS     r2,r2,r0
        STRB     r2,[r1,#2]
        BX       lr
        ENDP

|L42.40|
        DCD      systick_counter
|L42.44|
        DCD      ||.data||+0x8

        AREA ||i.i2cAck||, CODE, READONLY, ALIGN=2

i2cAck PROC
        PUSH     {r3-r7,lr}
        LDR      r4,|L43.56|
        MOVS     r6,#0
        STR      r6,[r4,#0]
        MOVS     r0,#6
        BL       sysDelayUs
        MOVS     r5,#1
        SUBS     r7,r4,#4
        STR      r5,[r7,#0]
        MOVS     r0,#6
        BL       sysDelayUs
        STR      r5,[r4,#0]
        MOVS     r0,#3
        BL       sysDelayUs
        LDR      r5,[r7,#0]
        MOVS     r0,#3
        BL       sysDelayUs
        STR      r6,[r4,#0]
        MOVS     r0,#6
        BL       sysDelayUs
        MOV      r0,r5
        POP      {r3-r7,pc}
        ENDP

        DCW      0x0000
|L43.56|
        DCD      0x5000422c

        AREA ||i.i2cReadByte||, CODE, READONLY, ALIGN=2

i2cReadByte PROC
        PUSH     {r3-r7,lr}
        MOVS     r6,#0
        LDR      r7,|L44.56|
        MOVS     r4,#0x80
        MOV      r5,r6
|L44.10|
        MOVS     r0,#0
        STR      r0,[r7,#0]
        MOVS     r0,#6
        BL       sysDelayUs
        MOVS     r0,#1
        STR      r0,[r7,#0]
        MOVS     r0,#6
        BL       sysDelayUs
        LDR      r0,|L44.56|
        SUBS     r0,r0,#4
        LDR      r0,[r0,#0]
        CMP      r0,#0
        BEQ      |L44.42|
        ORRS     r6,r6,r4
|L44.42|
        LSRS     r4,r4,#1
        ADDS     r5,r5,#1
        CMP      r5,#8
        BCC      |L44.10|
        MOV      r0,r6
        POP      {r3-r7,pc}
        ENDP

        DCW      0x0000
|L44.56|
        DCD      0x5000422c

        AREA ||i.i2cRestart||, CODE, READONLY, ALIGN=2

i2cRestart PROC
        PUSH     {r3-r7,lr}
        LDR      r5,|L45.52|
        MOVS     r4,#0
        STR      r4,[r5,#0]
        MOVS     r0,#6
        BL       sysDelayUs
        MOVS     r6,#1
        SUBS     r7,r5,#4
        STR      r6,[r7,#0]
        MOVS     r0,#0x3c
        BL       sysDelayUs
        STR      r6,[r5,#0]
        MOVS     r0,#6
        BL       sysDelayUs
        STR      r4,[r7,#0]
        MOVS     r0,#6
        BL       sysDelayUs
        STR      r4,[r5,#0]
        MOVS     r0,#6
        BL       sysDelayUs
        POP      {r3-r7,pc}
        ENDP

|L45.52|
        DCD      0x5000422c

        AREA ||i.i2cStart||, CODE, READONLY, ALIGN=2

i2cStart PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r4,|L46.72|
        MOVS     r0,#1
        STR      r0,[r4,#0]
        ADDS     r1,r4,#4
        STR      r0,[r1,#0]
        LDR      r6,|L46.76|
        MOVS     r2,#2
        MOVS     r1,#0xa
        MOV      r0,r6
        BL       GPIO_SET_MODE
        MOVS     r2,#2
        MOVS     r1,#0xb
        MOV      r0,r6
        BL       GPIO_SET_MODE
        MOVS     r0,#0xa
        BL       sysDelayUs
        MOVS     r0,#0
        STR      r0,[r4,#0]
        MOVS     r0,#0x14
        BL       sysDelayUs
        MOV      r0,r5
        BL       i2cWriteByte
        BL       i2cAck
        CMP      r0,#0
        BEQ      |L46.68|
        MOVS     r0,#1
|L46.68|
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L46.72|
        DCD      0x50004228
|L46.76|
        DCD      0x50004000

        AREA ||i.i2cStop||, CODE, READONLY, ALIGN=2

i2cStop PROC
        PUSH     {r4-r6,lr}
        LDR      r5,|L47.36|
        MOVS     r0,#0
        STR      r0,[r5,#0]
        MOVS     r0,#6
        BL       sysDelayUs
        MOVS     r4,#1
        ADDS     r0,r5,#4
        STR      r4,[r0,#0]
        MOVS     r0,#6
        BL       sysDelayUs
        STR      r4,[r5,#0]
        MOVS     r0,#6
        BL       sysDelayUs
        POP      {r4-r6,pc}
        ENDP

|L47.36|
        DCD      0x50004228

        AREA ||i.i2cWriteByte||, CODE, READONLY, ALIGN=2

i2cWriteByte PROC
        PUSH     {r0,r4-r7,lr}
        MOVS     r4,#0x80
        MOVS     r5,#0
        LDR      r7,|L48.68|
        MOV      r6,r5
|L48.10|
        STR      r6,[r7,#0]
        MOVS     r0,#3
        BL       sysDelayUs
        LDR      r0,[sp,#0]
        TST      r0,r4
        BEQ      |L48.34|
        LDR      r1,|L48.68|
        MOVS     r0,#1
        SUBS     r1,r1,#4
        STR      r0,[r1,#0]
        B        |L48.40|
|L48.34|
        LDR      r0,|L48.68|
        SUBS     r0,r0,#4
        STR      r6,[r0,#0]
|L48.40|
        MOVS     r0,#3
        BL       sysDelayUs
        MOVS     r0,#1
        STR      r0,[r7,#0]
        MOVS     r0,#6
        BL       sysDelayUs
        LSRS     r4,r4,#1
        ADDS     r5,r5,#1
        CMP      r5,#8
        BCC      |L48.10|
        POP      {r3-r7,pc}
        ENDP

        DCW      0x0000
|L48.68|
        DCD      0x5000422c

        AREA ||i.isDwhp83Linked||, CODE, READONLY, ALIGN=2

isDwhp83Linked PROC
        LDR      r0,|L49.16|
        LDR      r0,[r0,#0x18]  ; Dwhp83_route_count
        CMP      r0,#4
        BLS      |L49.12|
        MOVS     r0,#0
        BX       lr
|L49.12|
        MOVS     r0,#1
        BX       lr
        ENDP

|L49.16|
        DCD      ||.data||

        AREA ||i.nack||, CODE, READONLY, ALIGN=2

nack PROC
        PUSH     {r3-r7,lr}
        LDR      r4,|L50.52|
        MOVS     r6,#0
        STR      r6,[r4,#0]
        MOVS     r0,#3
        BL       sysDelayUs
        MOVS     r5,#1
        SUBS     r7,r4,#4
        STR      r5,[r7,#0]
        MOVS     r0,#3
        BL       sysDelayUs
        STR      r5,[r4,#0]
        MOVS     r0,#6
        BL       sysDelayUs
        STR      r6,[r4,#0]
        MOVS     r0,#6
        BL       sysDelayUs
        STR      r5,[r7,#0]
        MOVS     r0,#3
        BL       sysDelayUs
        POP      {r3-r7,pc}
        ENDP

|L50.52|
        DCD      0x5000422c

        AREA ||i.readDwhp83||, CODE, READONLY, ALIGN=2

readDwhp83 PROC
        PUSH     {r3-r7,lr}
        MOV      r7,r0
        LDR      r4,|L51.124|
        MOVS     r0,#0
        STRB     r0,[r4,#1]
        MOV      r5,r1
        MOVS     r0,#0x80
        BL       i2cStart
        MOVS     r6,#1
        CMP      r0,#0
        BNE      |L51.68|
        MOVS     r0,#0xa
        BL       sysDelayUs
        UXTB     r0,r7
        BL       i2cWriteByte
        BL       i2cAck
        CMP      r0,#1
        BEQ      |L51.68|
        MOVS     r0,#0xa
        BL       sysDelayUs
        BL       i2cRestart
        MOVS     r0,#0x81
        BL       i2cWriteByte
        BL       i2cAck
        CMP      r0,#0
        BEQ      |L51.72|
|L51.68|
        STRB     r6,[r4,#1]
        B        |L51.118|
|L51.72|
        MOVS     r4,#0
        LDR      r6,|L51.128|
        SUBS     r5,r5,#1
        B        |L51.98|
|L51.80|
        MOVS     r0,#0xfa
        BL       sysDelayUs
        BL       i2cReadByte
        STRB     r0,[r6,r4]
        BL       ack
        ADDS     r4,r4,#1
|L51.98|
        CMP      r5,r4
        BHI      |L51.80|
        MOVS     r0,#0xfa
        BL       sysDelayUs
        BL       i2cReadByte
        STRB     r0,[r6,r4]
        BL       nack
|L51.118|
        BL       i2cStop
        POP      {r3-r7,pc}
        ENDP

|L51.124|
        DCD      ||.data||
|L51.128|
        DCD      ||.bss||

        AREA ||i.saveCoCo||, CODE, READONLY, ALIGN=2

saveCoCo PROC
        PUSH     {r4,lr}
        MOVS     r1,#3
        MOVS     r0,#0x3d
        BL       readDwhp83
        BL       exitGpioI2c
        LDR      r0,|L52.32|
        MOVS     r1,#0x37
        STRB     r1,[r0,#0]
        MOVS     r1,#0x35
        STRB     r1,[r0,#1]
        MOVS     r1,#0x30
        STRB     r1,[r0,#2]
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L52.32|
        DCD      ||.data||+0x8

        AREA ||i.writeDwhp83||, CODE, READONLY, ALIGN=2

writeDwhp83 PROC
        PUSH     {r0-r2,r4-r7,lr}
        LDR      r5,|L53.96|
        MOV      r6,r0
        MOVS     r7,#0
        MOV      r4,r1
        STRB     r7,[r5,#1]
        MOVS     r0,#0x80
        BL       i2cStart
        CMP      r0,#0
        BNE      |L53.50|
        MOV      r0,r4
        BL       i2cWriteByte
        BL       i2cAck
        CMP      r0,#1
        BEQ      |L53.50|
        MOVS     r0,#0x32
        BL       sysDelayUs
        CMP      r6,#0
        BEQ      |L53.88|
        MOVS     r4,#0
        B        |L53.82|
|L53.50|
        MOVS     r0,#1
        STRB     r0,[r5,#1]
        B        |L53.90|
|L53.56|
        LDR      r0,|L53.100|
        STR      r7,[r0,#0]
        LDRB     r0,[r6,r4]
        BL       i2cWriteByte
        BL       i2cAck
        CMP      r0,#1
        BEQ      |L53.50|
        MOVS     r0,#0xfa
        BL       sysDelayUs
        ADDS     r4,r4,#1
|L53.82|
        LDR      r0,[sp,#8]
        CMP      r4,r0
        BCC      |L53.56|
|L53.88|
        STRB     r7,[r5,#1]
|L53.90|
        BL       i2cStop
        POP      {r1-r7,pc}
        ENDP

|L53.96|
        DCD      ||.data||
|L53.100|
        DCD      0x5000422c

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.bss||, DATA, NOINIT, ALIGN=1

dwhp83_buf
        %        36
mu_container
        %        96
dwhp83_send_msg
        %        15

        AREA ||.constdata||, DATA, READONLY, ALIGN=2

        DCB      0x00,0x00,0x00,0x10
        DCB      0xc6,0x01,0x00,0x00

        AREA ||.data||, DATA, ALIGN=2

cumu_flag
        DCB      0x00
ack_error
        DCB      0x00
dwhp83_type
        DCB      0xa0
dwph83_id
        DCB      0xff
cc_count
        DCW      0x0000
mu_addr
        DCB      0x00,0x00
coco
        DCB      0xff,0xff,0xff,0x00
i2c_gpio_enable
        DCD      0x00000000
Dwhp83_CuMu
        DCD      0x00000000
Dwhp83_flag
        DCD      0x00000000
Dwhp83_route_count
        DCD      0x00000000
debug_dwhp83
        DCD      0x00000000
p
        DCD      0x00000000
i
        DCD      0x00000000
||ck||
        DCD      0x00000000
dwhp83_status
        DCD      0x00000000
dwhp83_receive_msg
        %        8

        AREA ||i.__ARM_common_switch8||, COMGROUP=__ARM_common_switch8, CODE, READONLY, ALIGN=1

__ARM_common_switch8 PROC
        PUSH     {r4,r5}
        MOV      r4,lr
        SUBS     r4,r4,#1
        LDRB     r5,[r4,#0]
        ADDS     r4,r4,#1
        CMP      r3,r5
        BCS      |L322.16|
        MOV      r5,r3
|L322.16|
        LDRB     r3,[r4,r5]
        LSLS     r3,r3,#1
        ADDS     r3,r4,r3
        POP      {r4,r5}
        BX       r3
        ENDP


        EXPORT DWHP83DealMsg [CODE]
        EXPORT DWHP83Mute [CODE]
        EXPORT DWHP83RxtoTxMsg [CODE]
        EXPORT DWHP83SendCmd [CODE]
        EXPORT DWHP83TxToRx [CODE]
        EXPORT DWHP83UnMute [CODE]
        EXPORT DWP83CuCV [CODE]
        EXPORT DWP83CuPowerOn [CODE]
        EXPORT DWP83MuPowerOn [CODE]
        EXPORT DWP83SpiritTask [CODE]
        EXPORT DWPH83Init [CODE]
        EXPORT DWPH83VolumeChange [CODE]
        EXPORT Dwhp83CuMuDetect [CODE]
        EXPORT Dwhp83EnterPairing [CODE]
        EXPORT Dwhp83FixedCoCo [CODE]
        EXPORT Dwhp83GetMsg [CODE]
        EXPORT Dwhp83GetStatus [CODE]
        EXPORT Dwhp83Master [CODE]
        EXPORT Dwhp83OutStandby [CODE]
        EXPORT Dwhp83SendCoCo [CODE]
        EXPORT Dwhp83SendMsg [CODE]
        EXPORT Dwhp83Slave [CODE]
        EXPORT Dwhp83Standby [CODE]
        EXPORT Dwhp83StopPairing [CODE]
        EXPORT Dwhp83WriteCoCo [CODE]
        EXPORT ack [CODE]
        EXPORT addMuContainer [CODE]
        EXPORT changetoWirelessMaster [CODE]
        EXPORT changetoWirelessSlave [CODE]
        EXPORT check_coco [CODE]
        EXPORT cuDealCmd [CODE]
        EXPORT dealMuContainer [CODE]
        EXPORT delayus [CODE]
        EXPORT doCuMsg [CODE]
        EXPORT doMuMsg [CODE]
        EXPORT dwhp83CuAck [CODE]
        EXPORT dwhp83TestProcess [CODE]
        EXPORT dwph83Check [CODE]
        EXPORT exitGpioI2c [CODE]
        EXPORT getMuAddr [CODE]
        EXPORT getRandonCoCo [CODE]
        EXPORT i2cAck [CODE]
        EXPORT i2cReadByte [CODE]
        EXPORT i2cRestart [CODE]
        EXPORT i2cStart [CODE]
        EXPORT i2cStop [CODE]
        EXPORT i2cWriteByte [CODE]
        EXPORT isDwhp83Linked [CODE]
        EXPORT nack [CODE]
        EXPORT readDwhp83 [CODE]
        EXPORT saveCoCo [CODE]
        EXPORT writeDwhp83 [CODE]
        EXPORT mu_container [DATA,SIZE=96]
        EXPORT dwhp83_send_msg [DATA,SIZE=15]
        EXPORT cumu_flag [DATA,SIZE=1]
        EXPORT dwhp83_type [DATA,SIZE=1]
        EXPORT dwph83_id [DATA,SIZE=1]
        EXPORT cc_count [DATA,SIZE=2]
        EXPORT mu_addr [DATA,SIZE=2]
        EXPORT i2c_gpio_enable [DATA,SIZE=4]
        EXPORT Dwhp83_CuMu [DATA,SIZE=4]
        EXPORT Dwhp83_flag [DATA,SIZE=4]
        EXPORT debug_dwhp83 [DATA,SIZE=4]
        EXPORT dwhp83_status [DATA,SIZE=4]
        EXPORT dwhp83_receive_msg [DATA,SIZE=8]
        EXPORT __ARM_common_switch8 [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT sysDelayUs [CODE]
        IMPORT systick_counter [DATA]
        IMPORT sysDelayMs [CODE]
        IMPORT setConfig [CODE]
        IMPORT startATask [CODE]
        IMPORT pt2314_id [DATA]
        IMPORT ampMute [CODE]
        IMPORT ledColorSet [CODE]
        IMPORT unMute [CODE]
        IMPORT wireless_mode_open [DATA]
        IMPORT led_saving_couter [DATA]
        IMPORT led_saving_power_flag [DATA]
        IMPORT change_source_mute [DATA]
        IMPORT change_source_counter [DATA]
        IMPORT dev_input [DATA]
        IMPORT input_channel_color [DATA]
        IMPORT state_color [DATA]
        IMPORT WB_paired_flag [DATA]
        IMPORT sum_H [DATA]
        IMPORT ampSetVolume [CODE]
        IMPORT outStandby [CODE]
        IMPORT amp_volume [DATA]
        IMPORT dev_state [DATA]
        IMPORT strncpy [CODE]
        IMPORT breath_flag [DATA]
        IMPORT getATask [CODE]

        KEEP GPIO_SET_MODE
        KEEP dwhp83_buf
        KEEP ack_error
        KEEP coco
        KEEP Dwhp83_route_count
        KEEP p
        KEEP i
        KEEP ||ck||

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,3
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
