; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--split_sections --debug -c --asm --info=totals -o.\output\led.o --depend=.\output\led.d --cpu=Cortex-M0 --apcs=interwork -I..\CMSIS\CM0\DeviceSupport\Nuvoton\NUC123Series -I..\CMSIS\CM0\CoreSupport -I..\INC\DrvInc -I..\INC\SysInc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -D__MICROLIB --omf_browse=.\output\led.crf ..\AppSrc\led.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.AUX_DETECT||, CODE, READONLY, ALIGN=2

AUX_DETECT PROC
        LDR      r0,|L1.16|
        LDR      r0,[r0,#0]
        CMP      r0,#0
        BEQ      |L1.12|
        MOVS     r0,#0
        BX       lr
|L1.12|
        MOVS     r0,#1
        BX       lr
        ENDP

|L1.16|
        DCD      0x50004268

        AREA ||i.DECT_DC||, CODE, READONLY, ALIGN=2

DECT_DC PROC
        LDR      r0,|L2.16|
        LDR      r0,[r0,#0]
        CMP      r0,#0
        BEQ      |L2.12|
        MOVS     r0,#0
        BX       lr
|L2.12|
        MOVS     r0,#1
        BX       lr
        ENDP

|L2.16|
        DCD      0x500042a8

        AREA ||i.GPIO_SET_MODE||, CODE, READONLY, ALIGN=1

GPIO_SET_MODE PROC
        PUSH     {r4,lr}
        LDR      r3,[r0,#0]
        LSLS     r1,r1,#1
        MOVS     r4,#3
        LSLS     r4,r4,r1
        BICS     r3,r3,r4
        LSLS     r2,r2,r1
        ORRS     r3,r3,r2
        STR      r3,[r0,#0]
        POP      {r4,pc}
        ENDP


        AREA ||i.TMR0_IRQHandler||, CODE, READONLY, ALIGN=2

TMR0_IRQHandler PROC
        PUSH     {r4-r6,lr}
        LDR      r0,|L4.96|
        LDR      r2,[r0,#8]
        MOVS     r1,#1
        ORRS     r2,r2,r1
        STR      r2,[r0,#8]
        LDR      r3,|L4.100|
        MOVS     r2,#0
        LDR      r0,[r3,#0x2c]  ; ptimer
        ADDS     r0,r0,#1
        STR      r0,[r3,#0x2c]  ; ptimer
        CMP      r0,#0xc8
        BLS      |L4.28|
        STR      r2,[r3,#0x2c]  ; ptimer
|L4.28|
        LDR      r0,[r3,#0x18]  ; R_C
        LDR      r4,|L4.100|
        LSLS     r0,r0,#2
        ADDS     r4,r4,#0x54
        LDR      r5,[r4,r0]
        LDR      r0,[r3,#0x2c]  ; ptimer
        LDR      r6,|L4.104|
        CMP      r5,r0
        BLS      |L4.50|
        STR      r1,[r6,#0]
        B        |L4.52|
|L4.50|
        STR      r2,[r6,#0]
|L4.52|
        LDR      r5,[r3,#0x1c]  ; B_C
        LSLS     r5,r5,#2
        LDR      r6,[r4,r5]
        LDR      r5,|L4.104|
        ADDS     r5,r5,#8
        CMP      r6,r0
        BLS      |L4.70|
        STR      r1,[r5,#0]
        B        |L4.72|
|L4.70|
        STR      r2,[r5,#0]
|L4.72|
        LDR      r3,[r3,#0x20]  ; G_C
        LSLS     r3,r3,#2
        LDR      r4,[r4,r3]
        LDR      r3,|L4.104|
        ADDS     r3,r3,#4
        CMP      r4,r0
        BLS      |L4.90|
        STR      r1,[r3,#0]
        POP      {r4-r6,pc}
|L4.90|
        STR      r2,[r3,#0]
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L4.96|
        DCD      0x40010000
|L4.100|
        DCD      ||.data||
|L4.104|
        DCD      0x50004230

        AREA ||i.breathingColor||, CODE, READONLY, ALIGN=2

breathingColor PROC
        PUSH     {r4-r7,lr}
        LDR      r5,|L5.184|
        LDR      r1,[r5,#0x30]  ; cc
        LDR      r0,[r5,#0x28]  ; breath_flag
        ADDS     r1,r1,#1
        STR      r1,[r5,#0x30]  ; cc
        LSLS     r1,r1,#31
        BEQ      |L5.66|
        LDR      r2,[r5,#0x24]
        MOVS     r7,#0x28
        ADDS     r1,r2,#1
        LDR      r4,[r5,#0x50]
        MOVS     r6,#0
|L5.26|
        MOVS     r3,r0
        BL       __ARM_common_switch8
        DCB      0x08,0x11,0x05,0x12
        DCB      0x1c,0x26,0x33,0x41
        DCB      0x44,0x11
        STR      r6,[r5,#0x18]  ; R_C
        STR      r6,[r5,#0x20]  ; G_C
        STR      r1,[r5,#0x24]  ; ck
        CMP      r1,#0x13
        BLS      |L5.58|
        SUBS     r0,r7,r1
        STR      r0,[r5,#0x1c]  ; B_C
        B        |L5.60|
|L5.58|
        STR      r1,[r5,#0x1c]  ; B_C
|L5.60|
        CMP      r1,#0x27
        BLS      |L5.66|
        STR      r6,[r5,#0x24]  ; ck
|L5.66|
        POP      {r4-r7,pc}
        STR      r6,[r5,#0x1c]  ; B_C
        STR      r6,[r5,#0x20]  ; G_C
        STR      r1,[r5,#0x24]  ; ck
        CMP      r1,#0x13
        BLS      |L5.84|
        SUBS     r0,r7,r1
        STR      r0,[r5,#0x18]  ; R_C
        B        |L5.60|
|L5.84|
        STR      r1,[r5,#0x18]  ; R_C
        POP      {r4-r7,pc}
        STR      r6,[r5,#0x1c]  ; B_C
        STR      r6,[r5,#0x18]  ; R_C
        STR      r1,[r5,#0x24]  ; ck
        CMP      r1,#0x13
        BLS      |L5.104|
        SUBS     r0,r7,r1
        STR      r0,[r5,#0x20]  ; G_C
        B        |L5.60|
|L5.104|
        STR      r1,[r5,#0x20]  ; G_C
        POP      {r4-r7,pc}
        STR      r6,[r5,#0x1c]  ; B_C
        STR      r1,[r5,#0x24]  ; ck
        CMP      r1,#0x13
        BLS      |L5.130|
        SUBS     r0,r7,r1
        STR      r0,[r5,#0x20]  ; G_C
        CMP      r1,#0x27
        BLS      |L5.126|
        STR      r6,[r5,#0x24]  ; ck
|L5.126|
        LDR      r0,[r5,#0x20]  ; G_C
        B        |L5.154|
|L5.130|
        STR      r1,[r5,#0x20]  ; G_C
        B        |L5.126|
        STR      r1,[r5,#0x24]  ; ck
        CMP      r1,#0x13
        BLS      |L5.158|
        SUBS     r0,r7,r1
        STR      r0,[r5,#0x1c]  ; B_C
        CMP      r1,#0x27
        BLS      |L5.150|
        STR      r6,[r5,#0x24]  ; ck
|L5.150|
        LDR      r0,[r5,#0x1c]  ; B_C
        STR      r0,[r5,#0x20]  ; G_C
|L5.154|
        STR      r0,[r5,#0x18]  ; R_C
        POP      {r4-r7,pc}
|L5.158|
        STR      r1,[r5,#0x1c]  ; B_C
        B        |L5.150|
        CMP      r2,#0x14
        BNE      |L5.172|
        B        |L5.176|
        CMP      r2,#0
        BEQ      |L5.176|
|L5.172|
        MOV      r0,r4
        B        |L5.26|
|L5.176|
        MOVS     r0,#0xff
        STR      r0,[r5,#0x28]  ; breath_flag
        POP      {r4-r7,pc}
        ENDP

        DCW      0x0000
|L5.184|
        DCD      ||.data||

        AREA ||i.btHangUpSignalProcess||, CODE, READONLY, ALIGN=1

btHangUpSignalProcess PROC
        PUSH     {r4,lr}
        BL       ledTask
        POP      {r4,pc}
        ENDP


        AREA ||i.fadeoff||, CODE, READONLY, ALIGN=2

fadeoff PROC
        LDR      r1,|L7.16|
        MOVS     r2,#0x14
        STR      r2,[r1,#0x24]  ; ck
        STR      r0,[r1,#0x50]  ; fade_color
        MOVS     r0,#7
        STR      r0,[r1,#0x28]  ; breath_flag
        BX       lr
        ENDP

        DCW      0x0000
|L7.16|
        DCD      ||.data||

        AREA ||i.fadeon||, CODE, READONLY, ALIGN=2

fadeon PROC
        LDR      r1,|L8.16|
        MOVS     r2,#0
        STR      r2,[r1,#0x24]  ; ck
        STR      r0,[r1,#0x50]  ; fade_color
        MOVS     r0,#6
        STR      r0,[r1,#0x28]  ; breath_flag
        BX       lr
        ENDP

        DCW      0x0000
|L8.16|
        DCD      ||.data||

        AREA ||i.ledColorSet||, CODE, READONLY, ALIGN=2

ledColorSet PROC
        PUSH     {r4-r7,lr}
        MOVS     r2,#0
        LDR      r1,|L9.92|
        MOVS     r6,#0x10
        MOVS     r4,#0x14
        MOVS     r5,#0xa
        MOVS     r7,#0x12
        MOVS     r3,r0
        BL       __ARM_common_switch8
        DCB      0x0a,0x06,0x08,0x0d
        DCB      0x0b,0x18,0x1c,0x1f
        DCB      0x10,0x14,0x0b,0x17
        STR      r2,[r1,#0x18]  ; R_C
        B        |L9.38|
        STR      r6,[r1,#0x18]  ; R_C
|L9.38|
        STR      r2,[r1,#0x20]  ; G_C
        B        |L9.72|
        STR      r2,[r1,#0x18]  ; R_C
        B        |L9.78|
        STR      r5,[r1,#0x20]  ; G_C
        STR      r2,[r1,#0x18]  ; R_C
        B        |L9.72|
        MOVS     r0,#5
        STR      r5,[r1,#0x18]  ; R_C
        STR      r0,[r1,#0x20]  ; G_C
        B        |L9.64|
        STR      r5,[r1,#0x20]  ; G_C
        STR      r2,[r1,#0x18]  ; R_C
|L9.64|
        STR      r5,[r1,#0x1c]  ; B_C
        POP      {r4-r7,pc}
        STR      r7,[r1,#0x20]  ; G_C
        STR      r6,[r1,#0x18]  ; R_C
|L9.72|
        STR      r2,[r1,#0x1c]  ; B_C
        POP      {r4-r7,pc}
        STR      r4,[r1,#0x18]  ; R_C
|L9.78|
        STR      r2,[r1,#0x20]  ; G_C
        B        |L9.88|
        MOVS     r0,#0xd
        STR      r7,[r1,#0x20]  ; G_C
        STR      r0,[r1,#0x18]  ; R_C
|L9.88|
        STR      r4,[r1,#0x1c]  ; B_C
        POP      {r4-r7,pc}
        ENDP

|L9.92|
        DCD      ||.data||

        AREA ||i.ledInit||, CODE, READONLY, ALIGN=2

ledInit PROC
        PUSH     {r4,lr}
        LDR      r1,|L10.60|
        MOVS     r0,#0
        STR      r0,[r1,#0]
        ADDS     r1,r1,#4
        STR      r0,[r1,#0]
        ADDS     r1,r1,#4
        STR      r0,[r1,#0]
        LDR      r4,|L10.64|
        MOVS     r2,#1
        MOVS     r1,#0xc
        MOV      r0,r4
        BL       GPIO_SET_MODE
        MOVS     r2,#1
        MOVS     r1,#0xd
        MOV      r0,r4
        BL       GPIO_SET_MODE
        MOVS     r2,#1
        MOVS     r1,#0xe
        MOV      r0,r4
        BL       GPIO_SET_MODE
        MOVS     r0,#0
        BL       ledColorSet
        BL       timerInit
        POP      {r4,pc}
        ENDP

|L10.60|
        DCD      0x50004230
|L10.64|
        DCD      0x50004000

        AREA ||i.ledTask||, CODE, READONLY, ALIGN=2

ledTask PROC
        PUSH     {r3-r7,lr}
        LDR      r0,|L11.1020|
        LDR      r5,|L11.1024|
        LDRB     r1,[r0,#0]  ; dev_state
        CMP      r1,#0
        BEQ      |L11.260|
        LDR      r0,[r5,#0x38]  ; amp_i2c_check_counter
        LDR      r7,|L11.1028|
        ADDS     r0,r0,#1
        MOVS     r6,#1
        MOVS     r4,#0
        STR      r0,[r5,#0x38]  ; amp_i2c_check_counter
        CMP      r0,#0x64
        BNE      |L11.52|
        LDR      r0,|L11.1032|
        LDRB     r0,[r0,#0]  ; usb_i2c_enable
        CMP      r0,#0
        BNE      |L11.50|
        CMP      r1,#1
        BNE      |L11.50|
        BL       ampGetStatus
        CMP      r0,#0
        BEQ      |L11.50|
        STRB     r6,[r7,#0]
|L11.50|
        STR      r4,[r5,#0x38]  ; amp_i2c_check_counter
|L11.52|
        BL       amp_i2c_status_check
        CMP      r0,#0
        BEQ      |L11.130|
        LDR      r0,[r5,#0x34]  ; amp_i2c_error_counter
        ADDS     r0,r0,#1
        STR      r0,[r5,#0x34]  ; amp_i2c_error_counter
        CMP      r0,#0x23
        BLS      |L11.74|
        STR      r4,[r5,#0x34]  ; amp_i2c_error_counter
        STRB     r6,[r7,#0]
|L11.74|
        LDR      r7,|L11.1036|
        LDRB     r0,[r7,#0]  ; WB_paired_flag
        CMP      r0,#1
        BEQ      |L11.134|
        LDR      r1,|L11.1040|
        LDRB     r1,[r1,#0]  ; WB_paired_back_flag
        CMP      r1,r0
        BEQ      |L11.102|
        MOVS     r0,#2
        BL       playMusic
        LDR      r0,|L11.1040|
        LDRB     r1,[r7,#0]  ; WB_paired_flag
        STRB     r1,[r0,#0]
|L11.102|
        LDR      r1,|L11.1044|
        LDR      r2,|L11.1048|
        LDRB     r0,[r1,#0]  ; bt_play_music_before
        LDRB     r3,[r2,#0]  ; bt_play_music_flag
        CMP      r0,r3
        BEQ      |L11.162|
        LDR      r2,|L11.1052|
        LDRB     r0,[r2,#0]  ; bt_play_music_change_delay
        ADDS     r0,r0,#1
        UXTB     r0,r0
        STRB     r0,[r2,#0]
        CMP      r0,#0x3c
        BEQ      |L11.158|
        B        |L11.162|
|L11.130|
        STR      r4,[r5,#0x34]  ; amp_i2c_error_counter
        B        |L11.74|
|L11.134|
        LDR      r0,|L11.1040|
        LDRB     r0,[r0,#0]  ; WB_paired_back_flag
        CMP      r0,#1
        BEQ      |L11.102|
        MOVS     r0,#3
        BL       playMusic
        LDR      r0,|L11.1040|
        LDRB     r1,[r7,#0]  ; WB_paired_flag
        STRB     r1,[r0,#0]
        STR      r4,[r5,#0x10]  ; BAT_STATE_DECT_DELAY_COUNT
        B        |L11.102|
|L11.158|
        STRB     r4,[r2,#0]
        STRB     r3,[r1,#0]
|L11.162|
        LDRB     r0,[r1,#0]  ; bt_play_music_before
        CMP      r0,#0
        BEQ      |L11.262|
        LDRB     r0,[r7,#0]  ; WB_paired_flag
        CMP      r0,#0
        BEQ      |L11.262|
        LDR      r0,|L11.1056|
        LDRB     r0,[r0,#0]  ; dev_input
        CMP      r0,#1
        BEQ      |L11.194|
        CMP      r0,#2
        BNE      |L11.258|
        LDR      r0,|L11.1060|
        LDRB     r0,[r0,#0]  ; wireless_mode_open
        CMP      r0,#0
        BNE      |L11.258|
|L11.194|
        BL       ampMute
        LDR      r0,|L11.1064|
        STRB     r6,[r0,#0]
        LDR      r0,|L11.1068|
        STRB     r4,[r0,#0]
        LDR      r0,|L11.1056|
        STRB     r4,[r0,#0]
        LDR      r0,|L11.1072|
        LDRB     r0,[r0,#0]
        STRB     r0,[r5,#0]
        BL       ledColorSet
        LDR      r0,|L11.1076|
        STR      r6,[r0,#0]
        LDR      r0,|L11.1076|
        SUBS     r0,r0,#8
        STR      r6,[r0,#0]
        MOVS     r0,#0xff
        ADDS     r0,r0,#0xf5
        BL       sysDelayMs
        BL       unMute
        MOVS     r0,#0x14
        BL       sysDelayMs
        LDR      r0,|L11.1080|
        STR      r4,[r0,#0]  ; led_saving_couter
        LDR      r0,|L11.1084|
        STRB     r4,[r0,#0]
        STR      r4,[r5,#0x10]  ; BAT_STATE_DECT_DELAY_COUNT
|L11.258|
        B        |L11.506|
|L11.260|
        B        |L11.1014|
|L11.262|
        LDR      r0,|L11.1056|
        LDRB     r0,[r0,#0]  ; dev_input
        CMP      r0,#0
        BEQ      |L11.282|
        CMP      r0,#2
        BNE      |L11.416|
        LDR      r0,|L11.1060|
        LDRB     r0,[r0,#0]  ; wireless_mode_open
        CMP      r0,#0
        BNE      |L11.506|
|L11.282|
        BL       AUX_DETECT
        CMP      r0,#0
        BEQ      |L11.298|
        LDR      r0,|L11.1088|
        LDRB     r0,[r0,#0]  ; WB_call_status
        CMP      r0,#0
        BEQ      |L11.308|
|L11.298|
        LDR      r0,|L11.1056|
        LDRB     r0,[r0,#0]  ; dev_input
        CMP      r0,#2
        BEQ      |L11.346|
        B        |L11.416|
|L11.308|
        BL       ampMute
        LDR      r0,|L11.1064|
        STRB     r6,[r0,#0]
        LDR      r0,|L11.1068|
        STRB     r4,[r0,#0]
        LDR      r0,|L11.1056|
        STRB     r6,[r0,#0]
        LDR      r0,|L11.1072|
        LDRB     r0,[r0,#1]
        STRB     r0,[r5,#0]
        BL       ledColorSet
        LDR      r0,|L11.1076|
        STR      r6,[r0,#0]
        LDR      r0,|L11.1076|
        SUBS     r0,r0,#8
        STR      r4,[r0,#0]
        B        |L11.390|
|L11.346|
        LDR      r0,|L11.1060|
        LDRB     r0,[r0,#0]  ; wireless_mode_open
        CMP      r0,#0
        BNE      |L11.506|
        BL       ampMute
        LDR      r0,|L11.1064|
        STRB     r6,[r0,#0]
        LDR      r0,|L11.1068|
        STRB     r4,[r0,#0]
        LDR      r0,|L11.1056|
        STRB     r4,[r0,#0]
        LDR      r0,|L11.1072|
        LDRB     r0,[r0,#0]
        STRB     r0,[r5,#0]
        BL       ledColorSet
        LDR      r0,|L11.1076|
        STR      r6,[r0,#0]
        LDR      r0,|L11.1076|
        SUBS     r0,r0,#8
        STR      r6,[r0,#0]
|L11.390|
        MOVS     r0,#0xff
        ADDS     r0,r0,#0xf5
        BL       sysDelayMs
        BL       unMute
        MOVS     r0,#0x14
        BL       sysDelayMs
        LDR      r0,|L11.1080|
        STR      r4,[r0,#0]  ; led_saving_couter
        LDR      r0,|L11.1084|
        STRB     r4,[r0,#0]
|L11.416|
        LDR      r0,|L11.1056|
        LDRB     r0,[r0,#0]  ; dev_input
        CMP      r0,#1
        BNE      |L11.506|
        BL       AUX_DETECT
        CMP      r0,#0
        BEQ      |L11.444|
        LDR      r0,|L11.1088|
        LDRB     r0,[r0,#0]  ; WB_call_status
        CMP      r0,#4
        BEQ      |L11.444|
        CMP      r0,#2
        BNE      |L11.506|
|L11.444|
        BL       ampMute
        LDR      r0,|L11.1064|
        STRB     r6,[r0,#0]
        LDR      r0,|L11.1068|
        STRB     r4,[r0,#0]
        LDR      r0,|L11.1056|
        STRB     r4,[r0,#0]
        LDR      r0,|L11.1072|
        LDRB     r0,[r0,#0]
        STRB     r0,[r5,#0]
        BL       ledColorSet
        LDR      r0,|L11.1076|
        STR      r6,[r0,#0]
        LDR      r0,|L11.1076|
        SUBS     r0,r0,#8
        STR      r6,[r0,#0]
        MOVS     r0,#0xff
        ADDS     r0,r0,#0xf5
        BL       sysDelayMs
        BL       unMute
        MOVS     r0,#0x14
        BL       sysDelayMs
        LDR      r0,|L11.1080|
        STR      r4,[r0,#0]  ; led_saving_couter
        LDR      r0,|L11.1084|
        STRB     r4,[r0,#0]
|L11.506|
        LDR      r1,|L11.1064|
        LDRB     r0,[r1,#0]  ; change_source_mute
        CMP      r0,#1
        BNE      |L11.522|
        LDR      r2,|L11.1068|
        LDRB     r0,[r2,#0]  ; change_source_counter
        ADDS     r0,r0,#1
        STRB     r0,[r2,#0]
|L11.522|
        LDR      r0,|L11.1068|
        LDRB     r0,[r0,#0]  ; change_source_counter
        CMP      r0,#0xa
        BLS      |L11.532|
        STRB     r4,[r1,#0]
|L11.532|
        STRB     r4,[r5,#2]
        BL       Dwhp83CuMuDetect
        CMP      r0,#0
        BEQ      |L11.556|
        LDR      r0,[r5,#0x4c]  ; ccv
        CMP      r0,#0
        BNE      |L11.558|
        BL       DWP83CuCV
        STR      r6,[r5,#0x4c]  ; ccv
        B        |L11.558|
|L11.556|
        STR      r4,[r5,#0x4c]  ; ccv
|L11.558|
        LDRB     r0,[r5,#0]  ; state_color
        CMP      r0,#8
        BEQ      |L11.606|
        MOVS     r0,#0
|L11.566|
        TST      r4,r0
        BEQ      |L11.576|
        LDR      r0,[r5,#0xc]  ; bt_hang_up_signal
        CMP      r0,#1
        BEQ      |L11.610|
|L11.576|
        LDR      r0,|L11.1056|
        LDRB     r0,[r0,#0]  ; dev_input
        CMP      r0,#2
        BEQ      |L11.636|
        CMP      r0,#0
        BEQ      |L11.674|
        LDR      r0,|L11.1020|
        LDRB     r0,[r0,#0]  ; dev_state
        CMP      r0,#2
        BEQ      |L11.750|
|L11.596|
        LDR      r0,|L11.1092|
        LDRB     r0,[r0,#0]  ; call_eq_mode
        CMP      r0,#1
        BEQ      |L11.738|
        B        |L11.750|
|L11.606|
        MOVS     r0,#1
        B        |L11.566|
|L11.610|
        MOVS     r0,#0xa
        STR      r4,[r5,#0xc]  ; bt_hang_up_signal
        STR      r0,[r5,#0x3c]  ; bt_match_times
        MOVS     r0,#3
        BL       playMusic
        MOVS     r0,#0x38
        BL       logEvent
        MOVS     r2,#0
        LDR      r3,|L11.1096|
        MOVS     r1,#0xc8
        B        |L11.1192|
|L11.636|
        LDR      r0,[r5,#0x14]  ; volume_key_delay
        CMP      r0,#0
        BEQ      |L11.648|
        SUBS     r0,r0,#1
        STR      r0,[r5,#0x14]  ; volume_key_delay
        B        |L11.596|
|L11.648|
        BL       isDwhp83Linked
        CMP      r0,#0
        BNE      |L11.596|
        LDR      r0,[r5,#0x48]  ; ccj
        ADDS     r0,r0,#1
        STR      r0,[r5,#0x48]  ; ccj
        CMP      r0,#5
        BLS      |L11.596|
        MOVS     r0,#3
        STR      r4,[r5,#0x48]  ; ccj
        STR      r0,[r5,#4]  ; led_flash
        B        |L11.596|
|L11.674|
        LDRB     r1,[r7,#0]  ; WB_paired_flag
        CMP      r1,#0
        BEQ      |L11.688|
        LDR      r0,|L11.1088|
        LDRB     r0,[r0,#0]  ; WB_call_status
        CMP      r0,#2
        BNE      |L11.712|
|L11.688|
        LDR      r0,[r5,#0x3c]  ; bt_match_times
        CMP      r0,#0
        BEQ      |L11.700|
        SUBS     r0,r0,#1
        STR      r0,[r5,#0x3c]  ; bt_match_times
        B        |L11.712|
|L11.700|
        CMP      r1,#0
        BEQ      |L11.730|
        MOVS     r0,#6
        STR      r0,[r5,#0x3c]  ; bt_match_times
        MOVS     r0,#3
|L11.710|
        STR      r0,[r5,#4]  ; led_flash
|L11.712|
        LDR      r0,|L11.1088|
        LDRB     r0,[r0,#0]  ; WB_call_status
        CMP      r0,#0
        BEQ      |L11.750|
        LDR      r0,|L11.1080|
        STR      r4,[r0,#0]  ; led_saving_couter
        LDR      r0,|L11.1084|
        STRB     r4,[r0,#0]
        B        |L11.596|
|L11.730|
        MOVS     r0,#8
        STR      r0,[r5,#0x3c]  ; bt_match_times
        MOVS     r0,#5
        B        |L11.710|
|L11.738|
        MOVS     r1,#0x3f
        MOVS     r0,#0
        BL       ampSendEqs_38
        LDR      r0,|L11.1092|
        STRB     r4,[r0,#0]
|L11.750|
        LDR      r0,[r5,#0x40]  ; BT_CALL_FLAG
        CMP      r0,#0
        BEQ      |L11.796|
        MOVS     r0,#0x39
        BL       logEvent
        BL       DWHP83UnMute
        BL       ampUnMuteBass
        LDR      r0,[r5,#0x40]  ; BT_CALL_FLAG
        CMP      r0,#2
        BEQ      |L11.826|
        CMP      r0,#3
        BEQ      |L11.832|
        MOVS     r0,#9
        STRB     r0,[r5,#0]
        BL       ledColorSet
        MOVS     r0,#7
        BL       changeInputVolumeDown
|L11.794|
        STR      r4,[r5,#0x40]  ; BT_CALL_FLAG
|L11.796|
        LDR      r0,[r5,#0x10]  ; BAT_STATE_DECT_DELAY_COUNT
        ADDS     r0,r0,#1
        STR      r0,[r5,#0x10]  ; BAT_STATE_DECT_DELAY_COUNT
        CMP      r0,#0xb4
        BLS      |L11.852|
        MOVS     r0,#0x1c
        STR      r4,[r5,#0x10]  ; BAT_STATE_DECT_DELAY_COUNT
        STR      r0,[r5,#8]  ; led_battery_flash
        LDR      r0,[r5,#0x44]  ; led_cc
        ADDS     r0,r0,#1
        STR      r0,[r5,#0x44]  ; led_cc
        CMP      r0,#1
        BLS      |L11.858|
        STR      r4,[r5,#0x44]  ; led_cc
        B        |L11.858|
|L11.826|
        LDR      r0,|L11.1056|
        STRB     r4,[r0,#0]
        B        |L11.836|
|L11.832|
        LDR      r0,|L11.1056|
        STRB     r6,[r0,#0]
|L11.836|
        MOVS     r0,#1
        BL       changeInputVolumeDown
        LDR      r0,|L11.1100|
        LDR      r1,[r0,#0]  ; amp_volume_back
        LDR      r0,|L11.1104|
        STR      r1,[r0,#0]  ; amp_volume
        B        |L11.794|
|L11.852|
        LDR      r0,[r5,#8]  ; led_battery_flash
        CMP      r0,#0
        BEQ      |L11.1014|
|L11.858|
        BL       DECT_DC
        CMP      r0,#0
        BNE      |L11.1014|
        LDR      r0,|L11.1108|
        LDR      r6,|L11.1112|
        LDRB     r0,[r0,#0]  ; battery_state
        CMP      r0,#1
        BEQ      |L11.918|
        CMP      r0,#2
        BEQ      |L11.886|
        CMP      r0,#3
        BNE      |L11.982|
        B        |L11.928|
|L11.886|
        LDRB     r0,[r6,#0]  ; event
        CMP      r0,#0x60
        BEQ      |L11.898|
        MOVS     r0,#0x60
        BL       logEvent
|L11.898|
        BL       DECT_DC
        CMP      r0,#0
        BNE      |L11.972|
        MOVS     r0,#1
        BL       ledColorSet
        LDR      r0,|L11.1116|
        STRB     r4,[r0,#0]
        B        |L11.972|
|L11.918|
        BL       DECT_DC
        CMP      r0,#0
        BNE      |L11.972|
        B        |L11.982|
|L11.928|
        BL       DECT_DC
        CMP      r0,#0
        BEQ      |L11.982|
        LDRB     r0,[r7,#0]  ; WB_paired_flag
        CMP      r0,#0
        LDRB     r0,[r5,#0]  ; state_color
        BEQ      |L11.956|
        CMP      r0,#9
        BNE      |L11.960|
        LDR      r0,[r5,#0x44]  ; led_cc
        CMP      r0,#0
        BEQ      |L11.960|
        B        |L11.972|
|L11.956|
        CMP      r0,#9
        BEQ      |L11.972|
|L11.960|
        LDRB     r0,[r6,#0]  ; event
        CMP      r0,#0x5f
        BEQ      |L11.972|
        MOVS     r0,#0x5f
        BL       logEvent
|L11.972|
        BL       DECT_DC
        CMP      r0,#0
        BEQ      |L11.1128|
        B        |L11.1186|
|L11.982|
        BL       DECT_DC
        CMP      r0,#0
        BEQ      |L11.1008|
        LDR      r0,[r5,#8]  ; led_battery_flash
        CMP      r0,#0xc
        BNE      |L11.1008|
        LDRB     r0,[r6,#0]  ; event
        CMP      r0,#0x61
        BEQ      |L11.1008|
        MOVS     r0,#0x61
        BL       logEvent
|L11.1008|
        LDR      r0,[r5,#8]  ; led_battery_flash
        SUBS     r0,r0,#1
        STR      r0,[r5,#8]  ; led_battery_flash
|L11.1014|
        LDR      r0,|L11.1084|
        LDRB     r0,[r0,#0]  ; led_saving_power_flag
        B        |L11.1120|
|L11.1020|
        DCD      dev_state
|L11.1024|
        DCD      ||.data||
|L11.1028|
        DCD      reset_en
|L11.1032|
        DCD      usb_i2c_enable
|L11.1036|
        DCD      WB_paired_flag
|L11.1040|
        DCD      WB_paired_back_flag
|L11.1044|
        DCD      bt_play_music_before
|L11.1048|
        DCD      bt_play_music_flag
|L11.1052|
        DCD      bt_play_music_change_delay
|L11.1056|
        DCD      dev_input
|L11.1060|
        DCD      wireless_mode_open
|L11.1064|
        DCD      change_source_mute
|L11.1068|
        DCD      change_source_counter
|L11.1072|
        DCD      input_channel_color
|L11.1076|
        DCD      0x500042b4
|L11.1080|
        DCD      led_saving_couter
|L11.1084|
        DCD      led_saving_power_flag
|L11.1088|
        DCD      WB_call_status
|L11.1092|
        DCD      call_eq_mode
|L11.1096|
        DCD      btHangUpSignalProcess
|L11.1100|
        DCD      amp_volume_back
|L11.1104|
        DCD      amp_volume
|L11.1108|
        DCD      battery_state
|L11.1112|
        DCD      event
|L11.1116|
        DCD      led_battery_low_mode
|L11.1120|
        CMP      r0,#0
        BEQ      |L11.1136|
        MOVS     r0,#0
        B        |L11.1182|
|L11.1128|
        LDR      r0,[r5,#8]  ; led_battery_flash
        SUBS     r0,r0,#1
        STR      r0,[r5,#8]  ; led_battery_flash
        B        |L11.1186|
|L11.1136|
        LDR      r0,[r5,#0x28]  ; breath_flag
        CMP      r0,#0xff
        BEQ      |L11.1148|
        BL       breathingColor
        B        |L11.1186|
|L11.1148|
        LDR      r0,[r5,#4]  ; led_flash
        CMP      r0,#0
        LDR      r0,|L11.1204|
        LDRB     r0,[r0,#0]  ; dev_state
        BEQ      |L11.1176|
        CMP      r0,#2
        BEQ      |L11.1180|
        MOVS     r0,#0
        BL       ledColorSet
        LDR      r0,[r5,#4]  ; led_flash
        SUBS     r0,r0,#1
        STR      r0,[r5,#4]  ; led_flash
        B        |L11.1186|
|L11.1176|
        CMP      r0,#0
        BEQ      |L11.1200|
|L11.1180|
        LDRB     r0,[r5,#0]  ; state_color
|L11.1182|
        BL       ledColorSet
|L11.1186|
        LDR      r3,|L11.1208|
        MOVS     r2,#0
        MOVS     r1,#0x1e
|L11.1192|
        LDRB     r0,[r5,#1]  ; led_task
        BL       startATask
        POP      {r3-r7,pc}
|L11.1200|
        MOVS     r0,#7
        B        |L11.1182|
        ENDP

|L11.1204|
        DCD      dev_state
|L11.1208|
        DCD      ledTask

        AREA ||i.ledTaskInit||, CODE, READONLY, ALIGN=2

ledTaskInit PROC
        PUSH     {r4,lr}
        BL       getATask
        LDR      r4,|L12.36|
        STRB     r0,[r4,#1]
        BL       getATask
        LDR      r1,|L12.40|
        STRB     r0,[r1,#0]
        LDRB     r0,[r4,#1]  ; led_task
        CMP      r0,#0xff
        BEQ      |L12.34|
        LDR      r3,|L12.44|
        MOVS     r2,#0
        MOVS     r1,#0x1e
        BL       startATask
|L12.34|
        POP      {r4,pc}
        ENDP

|L12.36|
        DCD      ||.data||
|L12.40|
        DCD      log_id
|L12.44|
        DCD      ledTask

        AREA ||i.leddisable||, CODE, READONLY, ALIGN=2

leddisable PROC
        PUSH     {r4,lr}
        MOVS     r0,#5
        LSLS     r0,r0,#28
        LDR      r1,[r0,#0x30]
        MOVS     r2,#7
        LSLS     r2,r2,#12
        BICS     r1,r1,r2
        STR      r1,[r0,#0x30]
        LDR      r0,|L13.76|
        LDR      r1,[r0,#0x3c]
        LSRS     r1,r1,#3
        LSLS     r1,r1,#3
        STR      r1,[r0,#0x3c]
        LDR      r1,|L13.80|
        MOVS     r0,#0
        STR      r0,[r1,#0]
        ADDS     r1,r1,#4
        STR      r0,[r1,#0]
        ADDS     r1,r1,#4
        STR      r0,[r1,#0]
        LDR      r4,|L13.84|
        MOVS     r2,#1
        MOVS     r1,#0xc
        MOV      r0,r4
        BL       GPIO_SET_MODE
        MOVS     r2,#1
        MOVS     r1,#0xd
        MOV      r0,r4
        BL       GPIO_SET_MODE
        MOVS     r2,#1
        MOVS     r1,#0xe
        MOV      r0,r4
        BL       GPIO_SET_MODE
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L13.76|
        DCD      0x40040040
|L13.80|
        DCD      0x50004230
|L13.84|
        DCD      0x50004000

        AREA ||i.timerInit||, CODE, READONLY, ALIGN=2

timerInit PROC
        PUSH     {r4,lr}
        LDR      r0,|L14.60|
        LDR      r1,[r0,#0x14]
        MOVS     r2,#7
        LSLS     r2,r2,#8
        BICS     r1,r1,r2
        STR      r1,[r0,#0x14]
        LDR      r4,|L14.64|
        LSLS     r3,r0,#19
        MOVS     r2,#0xa
        MOVS     r1,#0x15
        MOV      r0,r4
        BL       DrvTIMER_Init
        LDR      r1,|L14.68|
        LDR      r0,[r1,#0]
        LSRS     r2,r0,#8
        LSLS     r2,r2,#8
        MOVS     r0,#0x80
        ORRS     r2,r2,r0
        STR      r2,[r1,#0]
        LSLS     r1,r0,#22
        MOV      r0,r4
        BL       DrvTIMER_EnableInt
        LDR      r1,[r4,#0]
        LSLS     r2,r4,#14
        ORRS     r1,r1,r2
        STR      r1,[r4,#0]
        POP      {r4,pc}
        ENDP

|L14.60|
        DCD      0x50000200
|L14.64|
        DCD      0x40010000
|L14.68|
        DCD      0xe000e408

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.data||, DATA, ALIGN=2

state_color
        DCB      0x09
led_task
        DCB      0xff
NFC_flag
        DCB      0x00,0x00
led_flash
        DCD      0x00000000
led_battery_flash
        DCD      0x00000000
bt_hang_up_signal
        DCD      0x00000000
BAT_STATE_DECT_DELAY_COUNT
        DCD      0x00000000
volume_key_delay
        DCD      0x00000000
||R_C||
        DCD      0x00000000
B_C
        DCD      0x00000000
G_C
        DCD      0x00000000
||ck||
        DCD      0x00000000
breath_flag
        DCD      0x000000ff
ptimer
        DCD      0x00000000
||cc||
        DCD      0x00000000
amp_i2c_error_counter
        DCD      0x00000000
amp_i2c_check_counter
        DCD      0x00000000
bt_match_times
        DCD      0x00000000
BT_CALL_FLAG
        DCD      0x00000000
led_cc
        DCD      0x00000001
||ccj||
        DCD      0x00000000
||ccv||
        DCD      0x00000000
fade_color
        DCD      0x00000000
pwtable
        DCD      0x00000000
        DCD      0x00000002
        DCD      0x00000003
        DCD      0x00000004
        DCD      0x00000006
        DCD      0x00000009
        DCD      0x0000000c
        DCD      0x0000000f
        DCD      0x00000012
        DCD      0x00000018
        DCD      0x0000001e
        DCD      0x00000027
        DCD      0x00000030
        DCD      0x0000003e
        DCD      0x0000004e
        DCD      0x0000005f
        DCD      0x00000074
        DCD      0x00000083
        DCD      0x00000096
        DCD      0x000000aa
        DCD      0x000000c8

        AREA ||area_number.18||, DATA, ALIGN=0

        EXPORTAS ||area_number.18||, ||.data||
state_color_back
        DCB      0x00

        AREA ||area_number.19||, DATA, ALIGN=1

        EXPORTAS ||area_number.19||, ||.data||
color_pwm_clc
        DCW      0x03e8,0x03e8
        DCB      0x0c,0x04,0x01,0x00

        AREA ||area_number.20||, DATA, ALIGN=1

        EXPORTAS ||area_number.20||, ||.data||
RGB_brightness
        DCW      0x03e8,0x0384
        DCW      0x0320,0x02bc
        DCW      0x0258,0x01f4
        DCW      0x0190,0x012c
        DCW      0x00c8,0x0064
        DCW      0x0000

        AREA ||area_number.21||, DATA, ALIGN=2

        EXPORTAS ||area_number.21||, ||.data||
BT_MATCH_FLAG
        DCD      0x00000000

        AREA ||area_number.22||, DATA, ALIGN=2

        EXPORTAS ||area_number.22||, ||.data||
BT_FIRST_START
        DCD      0x00000000

        AREA ||area_number.23||, DATA, ALIGN=2

        EXPORTAS ||area_number.23||, ||.data||
ccount
        DCD      0x00000000

        AREA ||i.__ARM_common_switch8||, COMGROUP=__ARM_common_switch8, CODE, READONLY, ALIGN=1

__ARM_common_switch8 PROC
        PUSH     {r4,r5}
        MOV      r4,lr
        SUBS     r4,r4,#1
        LDRB     r5,[r4,#0]
        ADDS     r4,r4,#1
        CMP      r3,r5
        BCS      |L96.16|
        MOV      r5,r3
|L96.16|
        LDRB     r3,[r4,r5]
        LSLS     r3,r3,#1
        ADDS     r3,r4,r3
        POP      {r4,r5}
        BX       r3
        ENDP


        EXPORT TMR0_IRQHandler [CODE]
        EXPORT breathingColor [CODE]
        EXPORT fadeoff [CODE]
        EXPORT fadeon [CODE]
        EXPORT ledColorSet [CODE]
        EXPORT ledInit [CODE]
        EXPORT ledTask [CODE]
        EXPORT ledTaskInit [CODE]
        EXPORT leddisable [CODE]
        EXPORT timerInit [CODE]
        EXPORT state_color [DATA,SIZE=1]
        EXPORT led_task [DATA,SIZE=1]
        EXPORT NFC_flag [DATA,SIZE=1]
        EXPORT led_flash [DATA,SIZE=4]
        EXPORT led_battery_flash [DATA,SIZE=4]
        EXPORT bt_hang_up_signal [DATA,SIZE=4]
        EXPORT BAT_STATE_DECT_DELAY_COUNT [DATA,SIZE=4]
        EXPORT volume_key_delay [DATA,SIZE=4]
        EXPORT ||R_C|| [DATA,SIZE=4]
        EXPORT B_C [DATA,SIZE=4]
        EXPORT G_C [DATA,SIZE=4]
        EXPORT breath_flag [DATA,SIZE=4]
        EXPORT pwtable [DATA,SIZE=84]
        EXPORT state_color_back [DATA,SIZE=1]
        EXPORT color_pwm_clc [DATA,SIZE=8]
        EXPORT RGB_brightness [DATA,SIZE=22]
        EXPORT BT_MATCH_FLAG [DATA,SIZE=4]
        EXPORT BT_FIRST_START [DATA,SIZE=4]
        EXPORT ccount [DATA,SIZE=4]
        EXPORT __ARM_common_switch8 [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT DrvTIMER_Init [CODE]
        IMPORT DrvTIMER_EnableInt [CODE]
        IMPORT ampGetStatus [CODE]
        IMPORT amp_i2c_status_check [CODE]
        IMPORT playMusic [CODE]
        IMPORT ampMute [CODE]
        IMPORT sysDelayMs [CODE]
        IMPORT unMute [CODE]
        IMPORT Dwhp83CuMuDetect [CODE]
        IMPORT DWP83CuCV [CODE]
        IMPORT logEvent [CODE]
        IMPORT startATask [CODE]
        IMPORT isDwhp83Linked [CODE]
        IMPORT ampSendEqs_38 [CODE]
        IMPORT DWHP83UnMute [CODE]
        IMPORT ampUnMuteBass [CODE]
        IMPORT changeInputVolumeDown [CODE]
        IMPORT dev_state [DATA]
        IMPORT reset_en [DATA]
        IMPORT usb_i2c_enable [DATA]
        IMPORT WB_paired_flag [DATA]
        IMPORT WB_paired_back_flag [DATA]
        IMPORT bt_play_music_before [DATA]
        IMPORT bt_play_music_flag [DATA]
        IMPORT bt_play_music_change_delay [DATA]
        IMPORT dev_input [DATA]
        IMPORT wireless_mode_open [DATA]
        IMPORT change_source_mute [DATA]
        IMPORT change_source_counter [DATA]
        IMPORT input_channel_color [DATA]
        IMPORT led_saving_couter [DATA]
        IMPORT led_saving_power_flag [DATA]
        IMPORT WB_call_status [DATA]
        IMPORT call_eq_mode [DATA]
        IMPORT amp_volume_back [DATA]
        IMPORT amp_volume [DATA]
        IMPORT battery_state [DATA]
        IMPORT event [DATA]
        IMPORT led_battery_low_mode [DATA]
        IMPORT getATask [CODE]
        IMPORT log_id [DATA]

        KEEP AUX_DETECT
        KEEP DECT_DC
        KEEP GPIO_SET_MODE
        KEEP btHangUpSignalProcess
        KEEP ||ck||
        KEEP ptimer
        KEEP ||cc||
        KEEP amp_i2c_error_counter
        KEEP amp_i2c_check_counter
        KEEP bt_match_times
        KEEP BT_CALL_FLAG
        KEEP led_cc
        KEEP ||ccj||
        KEEP ||ccv||
        KEEP fade_color

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,3
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
