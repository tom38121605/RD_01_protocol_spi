; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--debug -c --asm --info=totals -o.\output\drvuart.o --depend=.\output\drvuart.d --cpu=Cortex-M0 --apcs=interwork -O0 -I..\CMSIS\CM0\DeviceSupport\Nuvoton\NUC123Series -I..\CMSIS\CM0\CoreSupport -I..\INC\DrvInc -I..\INC\SysInc -IC:\Keil_v472\ARM\RV31\INC -IC:\Keil_v472\ARM\CMSIS\Include -D__MICROLIB --omf_browse=.\output\drvuart.crf ..\DrvSrc\DrvUART.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

DrvUART_DriveRTS PROC
        LDR      r2,[r0,#0x10]
        MOVS     r3,#1
        LSLS     r3,r3,#9
        BICS     r2,r2,r3
        STR      r2,[r0,#0x10]
        LDR      r2,[r0,#0x10]
        LSLS     r3,r1,#1
        ORRS     r2,r2,r3
        STR      r2,[r0,#0x10]
        BX       lr
        ENDP

DrvUART_Init PROC
        PUSH     {r3-r7,lr}
        MOV      r5,r0
        MOV      r4,r1
        LDR      r0,[r4,#0]
        LDR      r1,|L1.760|
        LDR      r1,[r1,#0x14]
        MOVS     r2,#3
        LSLS     r2,r2,#24
        BICS     r1,r1,r2
        ORRS     r1,r1,r0
        LDR      r2,|L1.760|
        STR      r1,[r2,#0x14]
        NOP      
        LDR      r0,[r4,#4]
        MOV      r1,r2
        LDR      r1,[r1,#0x18]
        MOVS     r2,#0xf
        LSLS     r2,r2,#8
        BICS     r1,r1,r2
        SUBS     r2,r0,#1
        LSLS     r2,r2,#8
        ORRS     r1,r1,r2
        LDR      r2,|L1.760|
        STR      r1,[r2,#0x18]
        NOP      
        LDR      r0,|L1.764|
        CMP      r5,r0
        BNE      |L1.92|
        LSLS     r0,r2,#7
        BL       SYS_RESET_IP2
        MOVS     r0,#1
        LSLS     r0,r0,#16
        BL       APBCLK_ENABLE
        B        |L1.108|
|L1.92|
        MOVS     r0,#1
        LSLS     r0,r0,#17
        BL       SYS_RESET_IP2
        MOVS     r0,#1
        LSLS     r0,r0,#17
        BL       APBCLK_ENABLE
|L1.108|
        MOVS     r0,#6
        LDR      r1,[r5,#8]
        ORRS     r1,r1,r0
        STR      r1,[r5,#8]
        NOP      
        LDR      r0,[r4,#0x1c]
        LDR      r1,[r5,#8]
        MOVS     r2,#0xf0
        BICS     r1,r1,r2
        ORRS     r1,r1,r0
        STR      r1,[r5,#8]
        NOP      
        LDR      r2,[r4,#0x18]
        LDR      r1,[r4,#0x10]
        ORRS     r1,r1,r2
        MOV      r0,r1
        LDR      r2,[r4,#0x14]
        ORRS     r0,r0,r2
        LDR      r1,[r5,#0xc]
        MOVS     r2,#0x40
        ANDS     r1,r1,r2
        ORRS     r1,r1,r0
        STR      r1,[r5,#0xc]
        NOP      
        MOVS     r1,#0x24
        LDRB     r0,[r1,r4]
        LDR      r1,[r5,#0x20]
        LSRS     r1,r1,#8
        LSLS     r1,r1,#8
        ORRS     r1,r1,r0
        STR      r1,[r5,#0x20]
        NOP      
        MOVS     r1,#3
        LSLS     r1,r1,#28
        LDR      r0,[r4,#0x20]
        CMP      r0,r1
        BNE      |L1.208|
        LDR      r7,[r4,#0xc]
        LDR      r6,[r4,#8]
        MOV      r1,r7
        MOV      r0,r6
        BL       __aeabi_uidivmod
        SUBS     r0,r0,#2
        MOVS     r1,#3
        LSLS     r1,r1,#28
        ORRS     r0,r0,r1
        STR      r0,[r5,#0x24]
        NOP      
        B        |L1.230|
|L1.208|
        LDR      r7,[r4,#0xc]
        LDR      r6,[r4,#8]
        MOV      r1,r7
        MOV      r0,r6
        BL       __aeabi_uidivmod
        LSRS     r0,r0,#4
        SUBS     r0,r0,#2
        STR      r0,[r5,#0x24]
        NOP      
        NOP      
|L1.230|
        MOVS     r0,#1
        POP      {r3-r7,pc}
        ENDP

DrvUART_EnableFlowCtrl PROC
        PUSH     {r4,lr}
        MOVS     r2,#3
        LSLS     r2,r2,#12
        LDR      r3,[r0,#4]
        ORRS     r3,r3,r2
        STR      r3,[r0,#4]
        NOP      
        LSLS     r2,r2,#4
        LDR      r3,[r0,#8]
        MOVS     r4,#0xf
        LSLS     r4,r4,#16
        BICS     r3,r3,r4
        ORRS     r3,r3,r2
        STR      r3,[r0,#8]
        NOP      
        LDR      r2,[r1,#4]
        SUBS     r3,r2,#7
        SUBS     r3,r3,#0xff
        SUBS     r3,r3,#0xfa
        BNE      |L1.290|
        NOP      
        LDR      r2,[r0,#0x10]
        MOVS     r3,#1
        LSLS     r3,r3,#9
        ORRS     r2,r2,r3
        STR      r2,[r0,#0x10]
        NOP      
        B        |L1.306|
|L1.290|
        NOP      
        LDR      r2,[r0,#0x10]
        MOVS     r3,#1
        LSLS     r3,r3,#9
        BICS     r2,r2,r3
        STR      r2,[r0,#0x10]
        NOP      
        NOP      
|L1.306|
        LDR      r2,[r1,#8]
        SUBS     r3,r2,#7
        SUBS     r3,r3,#0xf9
        BNE      |L1.330|
        NOP      
        LDR      r2,[r0,#0x14]
        MOVS     r3,#0xff
        ADDS     r3,#1
        ORRS     r2,r2,r3
        STR      r2,[r0,#0x14]
        NOP      
        B        |L1.346|
|L1.330|
        NOP      
        LDR      r2,[r0,#0x14]
        MOVS     r3,#0xff
        ADDS     r3,#1
        BICS     r2,r2,r3
        STR      r2,[r0,#0x14]
        NOP      
        NOP      
|L1.346|
        POP      {r4,pc}
        ENDP

DrvUART_DisableFlowCtrl PROC
        MOVS     r1,#3
        LSLS     r1,r1,#12
        LDR      r2,[r0,#4]
        BICS     r2,r2,r1
        STR      r2,[r0,#4]
        NOP      
        BX       lr
        ENDP

DrvUART_DeInit PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        NOP      
|L1.368|
        NOP      
        LDR      r0,[r4,#0x18]
        MOVS     r1,#1
        LSLS     r1,r1,#28
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L1.368|
        LDR      r0,|L1.768|
        CMP      r4,r0
        BNE      |L1.402|
        ASRS     r0,r1,#11
        BL       APBCLK_DISABLE
        MOVS     r0,#0xd
        BL       NVIC_DisableIRQ
        B        |L1.416|
|L1.402|
        MOVS     r0,#1
        LSLS     r0,r0,#16
        BL       APBCLK_DISABLE
        MOVS     r0,#0xc
        BL       NVIC_DisableIRQ
|L1.416|
        POP      {r4,pc}
        ENDP

DrvUART_EnableInt PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        NOP      
        LDR      r0,[r4,#4]
        ORRS     r0,r0,r5
        STR      r0,[r4,#4]
        NOP      
        LDR      r0,|L1.764|
        CMP      r4,r0
        BNE      |L1.448|
        MOVS     r0,#0xc
        BL       NVIC_EnableIRQ
        B        |L1.454|
|L1.448|
        MOVS     r0,#0xd
        BL       NVIC_EnableIRQ
|L1.454|
        POP      {r4-r6,pc}
        ENDP

DrvUART_DisableInt PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        NOP      
        LDR      r0,[r4,#4]
        BICS     r0,r0,r5
        STR      r0,[r4,#4]
        NOP      
        LDR      r0,|L1.764|
        CMP      r4,r0
        BNE      |L1.486|
        MOVS     r0,#0xc
        BL       NVIC_DisableIRQ
        B        |L1.492|
|L1.486|
        MOVS     r0,#0xd
        BL       NVIC_DisableIRQ
|L1.492|
        POP      {r4-r6,pc}
        ENDP

DrvUART_GetCTSInfo PROC
        PUSH     {r4,lr}
        NOP      
        LDR      r3,[r0,#0x14]
        MOVS     r4,#0x10
        ANDS     r3,r3,r4
        CMP      r3,#0
        BEQ      |L1.512|
        MOVS     r3,#1
        B        |L1.514|
|L1.512|
        MOVS     r3,#0
|L1.514|
        STRB     r3,[r1,#0]
        NOP      
        LDR      r3,[r0,#0x14]
        LSLS     r3,r3,#31
        LSRS     r3,r3,#31
        CMP      r3,#0
        BEQ      |L1.532|
        MOVS     r3,#1
        B        |L1.534|
|L1.532|
        MOVS     r3,#0
|L1.534|
        STRB     r3,[r2,#0]
        POP      {r4,pc}
        ENDP

DrvUART_SetFnIRDA PROC
        MOVS     r2,#2
        STR      r2,[r0,#0x30]
        LDR      r2,[r0,#0x28]
        MOVS     r3,#0x62
        BICS     r2,r2,r3
        STR      r2,[r0,#0x28]
        LDR      r2,[r0,#0x28]
        LDRB     r3,[r1,#0]
        CMP      r3,#0
        BEQ      |L1.562|
        MOVS     r3,#2
        B        |L1.564|
|L1.562|
        MOVS     r3,#0
|L1.564|
        ORRS     r2,r2,r3
        STR      r2,[r0,#0x28]
        LDR      r2,[r0,#0x28]
        LDRB     r3,[r1,#1]
        CMP      r3,#0
        BEQ      |L1.580|
        MOVS     r3,#0x20
        B        |L1.582|
|L1.580|
        MOVS     r3,#0
|L1.582|
        ORRS     r2,r2,r3
        STR      r2,[r0,#0x28]
        LDR      r2,[r0,#0x28]
        LDRB     r3,[r1,#2]
        CMP      r3,#0
        BEQ      |L1.598|
        MOVS     r3,#0x40
        B        |L1.600|
|L1.598|
        MOVS     r3,#0
|L1.600|
        ORRS     r2,r2,r3
        STR      r2,[r0,#0x28]
        BX       lr
        ENDP

DrvUART_SetFnRS485 PROC
        PUSH     {r4,lr}
        MOVS     r2,#3
        STR      r2,[r0,#0x30]
        LDRB     r2,[r1,#5]
        LSLS     r2,r2,#24
        LDRB     r3,[r1,#4]
        LSLS     r3,r3,#15
        ORRS     r2,r2,r3
        LDR      r3,[r1,#0]
        ORRS     r2,r2,r3
        LDR      r3,[r0,#0x2c]
        ORRS     r2,r2,r3
        STR      r2,[r0,#0x2c]
        LDRB     r2,[r1,#6]
        LDR      r3,[r0,#0x20]
        MOVS     r4,#0xff
        LSLS     r4,r4,#8
        BICS     r3,r3,r4
        LSLS     r4,r2,#8
        ORRS     r3,r3,r4
        STR      r3,[r0,#0x20]
        NOP      
        LDR      r2,[r0,#8]
        MOVS     r3,#0xff
        ADDS     r3,#1
        BICS     r2,r2,r3
        STR      r2,[r0,#8]
        LDR      r2,[r0,#8]
        LDRB     r3,[r1,#7]
        CMP      r3,#0
        BEQ      |L1.674|
        MOVS     r3,#0xff
        ADDS     r3,#1
        B        |L1.676|
|L1.674|
        MOVS     r3,#0
|L1.676|
        ORRS     r2,r2,r3
        STR      r2,[r0,#8]
        POP      {r4,pc}
        ENDP

NVIC_EnableIRQ PROC
        LSLS     r2,r0,#27
        LSRS     r2,r2,#27
        MOVS     r1,#1
        LSLS     r1,r1,r2
        LDR      r2,|L1.772|
        STR      r1,[r2,#0]
        BX       lr
        ENDP

NVIC_DisableIRQ PROC
        LSLS     r2,r0,#27
        LSRS     r2,r2,#27
        MOVS     r1,#1
        LSLS     r1,r1,r2
        LDR      r2,|L1.772|
        ADDS     r2,r2,#0x80
        STR      r1,[r2,#0]
        BX       lr
        ENDP

APBCLK_ENABLE PROC
        LDR      r1,|L1.760|
        LDR      r1,[r1,#8]
        ORRS     r1,r1,r0
        LDR      r2,|L1.760|
        STR      r1,[r2,#8]
        BX       lr
        ENDP

APBCLK_DISABLE PROC
        LDR      r1,|L1.760|
        LDR      r1,[r1,#8]
        BICS     r1,r1,r0
        LDR      r2,|L1.760|
        STR      r1,[r2,#8]
        BX       lr
        ENDP

SYS_RESET_IP2 PROC
        MOVS     r1,#5
        LSLS     r1,r1,#28
        LDR      r1,[r1,#0xc]
        ORRS     r1,r1,r0
        MOVS     r2,#5
        LSLS     r2,r2,#28
        STR      r1,[r2,#0xc]
        MOV      r1,r2
        LDR      r1,[r1,#0xc]
        BICS     r1,r1,r0
        STR      r1,[r2,#0xc]
        BX       lr
        ENDP

|L1.760|
        DCD      0x50000200
|L1.764|
        DCD      0x40050000
|L1.768|
        DCD      0x40150000
|L1.772|
        DCD      0xe000e100

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        EXPORT DrvUART_DriveRTS [CODE]
        EXPORT DrvUART_Init [CODE]
        EXPORT DrvUART_EnableFlowCtrl [CODE]
        EXPORT DrvUART_DisableFlowCtrl [CODE]
        EXPORT DrvUART_DeInit [CODE]
        EXPORT DrvUART_EnableInt [CODE]
        EXPORT DrvUART_DisableInt [CODE]
        EXPORT DrvUART_GetCTSInfo [CODE]
        EXPORT DrvUART_SetFnIRDA [CODE]
        EXPORT DrvUART_SetFnRS485 [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT __aeabi_uidivmod [CODE]

        KEEP NVIC_EnableIRQ
        KEEP NVIC_DisableIRQ
        KEEP APBCLK_ENABLE
        KEEP APBCLK_DISABLE
        KEEP SYS_RESET_IP2

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
