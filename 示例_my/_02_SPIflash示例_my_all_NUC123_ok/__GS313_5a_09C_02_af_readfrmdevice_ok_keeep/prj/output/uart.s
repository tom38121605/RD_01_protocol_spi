; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--debug -c --asm --info=totals -o.\output\uart.o --depend=.\output\uart.d --cpu=Cortex-M0 --apcs=interwork -O0 -I..\CMSIS\CM0\DeviceSupport\Nuvoton\NUC123Series -I..\CMSIS\CM0\CoreSupport -I..\INC\DrvInc -I..\INC\SysInc -IC:\Keil_v472\ARM\RV31\INC -IC:\Keil_v472\ARM\CMSIS\Include -D__MICROLIB --omf_browse=.\output\uart.crf ..\AppSrc\uart.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

uartSendCmd PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r6,r1
        MOVS     r4,#0
        B        |L1.36|
|L1.10|
        LDRB     r0,[r6,r4]
        LDR      r1,|L1.1032|
        LDRH     r1,[r1,#0]  ; utx_in
        LSLS     r1,r1,#23
        LSRS     r1,r1,#23
        LDR      r2,|L1.1036|
        STRB     r0,[r2,r1]
        LDR      r0,|L1.1032|
        LDR      r0,[r0,#0]  ; utx_in
        ADDS     r0,r0,#1
        LDR      r1,|L1.1032|
        STR      r0,[r1,#0]  ; utx_in
        ADDS     r4,r4,#1
|L1.36|
        CMP      r4,r5
        BCC      |L1.10|
        LDR      r0,|L1.1040|
        LDR      r0,[r0,#0]  ; txidle
        CMP      r0,#1
        BNE      |L1.62|
        MOVS     r0,#0
        LDR      r1,|L1.1040|
        STR      r0,[r1,#0]  ; txidle
        MOVS     r1,#2
        LDR      r0,|L1.1044|
        BL       UART_ENABLE_INT
|L1.62|
        POP      {r4-r6,pc}
        ENDP

smscSendCmd PROC
        BX       lr
        ENDP

iputc PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDR      r0,|L1.1032|
        LDRH     r0,[r0,#0]  ; utx_in
        LSLS     r0,r0,#23
        LSRS     r0,r0,#23
        LDR      r1,|L1.1036|
        STRB     r4,[r1,r0]
        LDR      r0,|L1.1032|
        LDR      r0,[r0,#0]  ; utx_in
        ADDS     r0,r0,#1
        LDR      r1,|L1.1032|
        STR      r0,[r1,#0]  ; utx_in
        LDR      r0,|L1.1040|
        LDR      r0,[r0,#0]  ; txidle
        CMP      r0,#1
        BNE      |L1.114|
        MOVS     r0,#0
        LDR      r1,|L1.1040|
        STR      r0,[r1,#0]  ; txidle
        MOVS     r1,#2
        LDR      r0,|L1.1044|
        BL       UART_ENABLE_INT
|L1.114|
        POP      {r4,pc}
        ENDP

iputs PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOVS     r5,#0
        NOP      
        B        |L1.152|
|L1.126|
        LDRB     r0,[r4,r5]
        LDR      r1,|L1.1032|
        LDRH     r1,[r1,#0]  ; utx_in
        LSLS     r1,r1,#23
        LSRS     r1,r1,#23
        LDR      r2,|L1.1036|
        STRB     r0,[r2,r1]
        LDR      r0,|L1.1032|
        LDR      r0,[r0,#0]  ; utx_in
        ADDS     r0,r0,#1
        LDR      r1,|L1.1032|
        STR      r0,[r1,#0]  ; utx_in
        ADDS     r5,r5,#1
|L1.152|
        LDRB     r0,[r4,r5]
        CMP      r0,#0
        BNE      |L1.126|
        LDR      r0,|L1.1040|
        LDR      r0,[r0,#0]  ; txidle
        CMP      r0,#1
        BNE      |L1.180|
        MOVS     r0,#0
        LDR      r1,|L1.1040|
        STR      r0,[r1,#0]  ; txidle
        MOVS     r1,#2
        LDR      r0,|L1.1044|
        BL       UART_ENABLE_INT
|L1.180|
        POP      {r4-r6,pc}
        ENDP

iputchar PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDR      r0,|L1.1032|
        LDRH     r0,[r0,#0]  ; utx_in
        LSLS     r0,r0,#23
        LSRS     r0,r0,#23
        LDR      r1,|L1.1036|
        STRB     r4,[r1,r0]
        LDR      r0,|L1.1032|
        LDR      r0,[r0,#0]  ; utx_in
        ADDS     r0,r0,#1
        LDR      r1,|L1.1032|
        STR      r0,[r1,#0]  ; utx_in
        LDR      r0,|L1.1040|
        LDR      r0,[r0,#0]  ; txidle
        CMP      r0,#1
        BNE      |L1.230|
        MOVS     r0,#0
        LDR      r1,|L1.1040|
        STR      r0,[r1,#0]  ; txidle
        MOVS     r1,#2
        LDR      r0,|L1.1044|
        BL       UART_ENABLE_INT
|L1.230|
        POP      {r4,pc}
        ENDP

igetc PROC
        LDR      r0,|L1.1048|
        LDRB     r1,[r0,#0]  ; out_index
        LDR      r0,[r0,#0]  ; out_index
        ADDS     r0,r0,#1
        LDR      r2,|L1.1048|
        STR      r0,[r2,#0]  ; out_index
        UXTB     r0,r1
        LDR      r1,|L1.1052|
        LDRB     r0,[r1,r0]
        BX       lr
        ENDP

iungetc PROC
        BX       lr
        ENDP

||clr|| PROC
        PUSH     {r4,lr}
        MOVS     r4,#0
        B        |L1.268|
|L1.260|
        MOVS     r0,#0xa
        BL       iputc
        ADDS     r4,r4,#1
|L1.268|
        CMP      r4,#0x50
        BCC      |L1.260|
        MOVS     r0,#0xd
        BL       iputc
        POP      {r4,pc}
        ENDP

itoa PROC
        PUSH     {r3-r7,lr}
        MOV      r6,r0
        MOV      r4,r1
        MOVS     r5,#0
        B        |L1.316|
|L1.290|
        MOVS     r1,#0xa
        MOV      r0,r6
        BL       __aeabi_uidivmod
        ADDS     r1,r1,#0x30
        MOV      r0,r5
        ADDS     r5,r5,#1
        STRB     r1,[r4,r0]
        MOVS     r1,#0xa
        MOV      r0,r6
        BL       __aeabi_uidivmod
        MOV      r6,r0
|L1.316|
        CMP      r6,#0
        BNE      |L1.290|
        CMP      r5,#0
        BNE      |L1.330|
        MOVS     r5,#1
        MOVS     r0,#0x30
        STRB     r0,[r4,#0]
|L1.330|
        MOVS     r0,#0
        STRB     r0,[r4,r5]
        STR      r5,[sp,#0]
        B        |L1.354|
|L1.338|
        LDRB     r7,[r4,r6]
        SUBS     r0,r5,#1
        MOV      r5,r0
        LDRB     r2,[r4,r0]
        MOV      r0,r6
        ADDS     r6,r6,#1
        STRB     r2,[r4,r0]
        STRB     r7,[r4,r5]
|L1.354|
        CMP      r6,r5
        BCC      |L1.338|
        LDR      r0,[sp,#0]
        POP      {r3-r7,pc}
        ENDP

itoh PROC
        PUSH     {r4,lr}
        MOV      r2,r0
        MOV      r3,r2
        ASRS     r0,r2,#4
        LDR      r4,|L1.1056|
        LDRB     r0,[r4,r0]
        STRB     r0,[r1,#0]
        LSLS     r0,r3,#28
        LSRS     r3,r0,#24
        ASRS     r3,r3,#4
        MOV      r0,r4
        LDRB     r0,[r0,r3]
        STRB     r0,[r1,#1]
        MOVS     r0,#0
        STRB     r0,[r1,#2]
        MOV      r0,r1
        POP      {r4,pc}
        ENDP

||dps|| PROC
        PUSH     {r4,lr}
        ADR      r0,|L1.1060|
        BL       iputs
        MOVS     r0,#0
        LDR      r1,|L1.1068|
        STR      r0,[r1,#0]  ; column
        POP      {r4,pc}
        ENDP

strncmp PROC
        PUSH     {r4,lr}
        MOV      r3,r0
        B        |L1.430|
|L1.418|
        LDRB     r0,[r3,r2]
        LDRB     r4,[r1,r2]
        CMP      r0,r4
        BEQ      |L1.430|
        MOVS     r0,#0
|L1.428|
        POP      {r4,pc}
|L1.430|
        MOV      r0,r2
        SUBS     r2,r2,#1
        CMP      r0,#0
        BNE      |L1.418|
        MOVS     r0,#1
        B        |L1.428|
        ENDP

strcmp PROC
        PUSH     {r4,lr}
        MOV      r2,r0
        MOV      r3,r1
        MOVS     r1,#0
        B        |L1.466|
|L1.452|
        LDRB     r0,[r2,r1]
        LDRB     r4,[r3,r1]
        CMP      r0,r4
        BEQ      |L1.464|
        MOVS     r0,#0
|L1.462|
        POP      {r4,pc}
|L1.464|
        ADDS     r1,r1,#1
|L1.466|
        LDRB     r0,[r2,r1]
        CMP      r0,#0
        BNE      |L1.452|
        LDRB     r0,[r3,r1]
        CMP      r0,#0
        BNE      |L1.452|
        MOVS     r0,#1
        B        |L1.462|
        ENDP

strlen PROC
        MOV      r1,r0
        MOVS     r0,#0
        B        |L1.490|
|L1.488|
        ADDS     r0,r0,#1
|L1.490|
        LDRB     r3,[r1,#0]
        ADDS     r1,r1,#1
        CMP      r3,#0
        BNE      |L1.488|
        BX       lr
        ENDP

sendInfo PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        MOV      r0,r4
        BL       iputs
        BL       ||dps||
        POP      {r4,pc}
        ENDP

UART0_IRQHandler PROC
        PUSH     {r4,lr}
        NOP      
        LDR      r0,|L1.1044|
        LDR      r0,[r0,#0x1c]
        MOVS     r1,#0xff
        ADDS     r1,#1
        ANDS     r0,r0,r1
        CMP      r0,#0
        BNE      |L1.548|
        NOP      
        LDR      r0,|L1.1044|
        LDR      r0,[r0,#0x1c]
        LSLS     r1,r1,#4
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L1.800|
|L1.548|
        B        |L1.834|
|L1.550|
        LDR      r0,|L1.1044|
        LDR      r0,[r0,#0]
        UXTB     r4,r0
        CMP      r4,#8
        BNE      |L1.644|
        LDR      r0,|L1.1068|
        LDR      r0,[r0,#0]  ; column
        CMP      r0,#0
        BNE      |L1.576|
        MOVS     r0,#7
        BL       iputc
|L1.574|
        POP      {r4,pc}
|L1.576|
        ADR      r0,|L1.1072|
        BL       iputs
        LDR      r0,|L1.1076|
        LDR      r0,[r0,#0]  ; vc
        CMP      r0,#0
        BEQ      |L1.602|
        LDR      r0,|L1.1076|
        LDR      r0,[r0,#0]  ; vc
        SUBS     r0,r0,#1
        LDR      r1,|L1.1076|
        STR      r0,[r1,#0]  ; vc
        B        |L1.642|
|L1.602|
        LDR      r0,|L1.1068|
        LDR      r0,[r0,#0]  ; column
        SUBS     r0,r0,#1
        LDR      r1,|L1.1068|
        STR      r0,[r1,#0]  ; column
        LDR      r0,|L1.1080|
        LDR      r0,[r0,#0]  ; in_index
        SUBS     r0,r0,#1
        LDR      r1,|L1.1080|
        STR      r0,[r1,#0]  ; in_index
        LDR      r0,|L1.1048|
        LDR      r0,[r0,#0]  ; out_index
        LDR      r1,[r1,#0]  ; in_index
        CMP      r0,r1
        BCC      |L1.642|
        LDR      r0,|L1.1048|
        LDR      r0,[r0,#0]  ; out_index
        SUBS     r0,r0,#1
        LDR      r1,|L1.1048|
        STR      r0,[r1,#0]  ; out_index
|L1.642|
        B        |L1.574|
|L1.644|
        MOV      r0,r4
        LDR      r1,|L1.1084|
        LDR      r1,[r1,#0]  ; lastkey
        LSLS     r1,r1,#8
        LDR      r2,|L1.1084|
        STR      r1,[r2,#0]  ; lastkey
        MOV      r1,r2
        LDR      r1,[r1,#0]  ; lastkey
        ORRS     r1,r1,r0
        STR      r1,[r2,#0]  ; lastkey
        CMP      r0,#0x20
        BLT      |L1.672|
        CMP      r0,#0x7e
        BLE      |L1.680|
|L1.672|
        CMP      r0,#0xa
        BEQ      |L1.680|
        CMP      r0,#0xd
        BNE      |L1.684|
|L1.680|
        MOVS     r1,#1
        B        |L1.686|
|L1.684|
        MOVS     r1,#0
|L1.686|
        CMP      r1,#0
        BEQ      |L1.738|
        CMP      r4,#0x5b
        BNE      |L1.714|
        LDR      r0,|L1.1084|
        LDR      r0,[r0,#0]  ; lastkey
        MOVS     r1,#0xff
        LSLS     r1,r1,#8
        ANDS     r0,r0,r1
        MOVS     r1,#0x1b
        LSLS     r1,r1,#8
        CMP      r0,r1
        BNE      |L1.714|
        B        |L1.574|
|L1.714|
        LDR      r0,|L1.1084|
        LDR      r0,[r0,#0]  ; lastkey
        LDR      r1,|L1.1088|
        ANDS     r0,r0,r1
        LDR      r1,|L1.1092|
        CMP      r0,r1
        BNE      |L1.740|
        CMP      r4,#0x41
        BLT      |L1.740|
        CMP      r4,#0x44
        BGT      |L1.740|
        B        |L1.574|
|L1.738|
        B        |L1.574|
|L1.740|
        LDR      r0,|L1.1048|
        LDR      r0,[r0,#0]  ; out_index
        ADDS     r0,r0,#0xff
        ADDS     r0,#1
        LDR      r1,|L1.1080|
        LDR      r1,[r1,#0]  ; in_index
        CMP      r0,r1
        BCC      |L1.764|
        LDR      r0,|L1.1068|
        LDR      r0,[r0,#0]  ; column
        CMP      r0,#0xff
        BLS      |L1.816|
|L1.764|
        MOV      r0,r4
        BL       iputc
        LDR      r0,|L1.1076|
        LDR      r0,[r0,#0]  ; vc
        ADDS     r0,r0,#1
        LDR      r1,|L1.1076|
        STR      r0,[r1,#0]  ; vc
        CMP      r4,#0xd
        BNE      |L1.814|
        MOVS     r0,#0
        STR      r0,[r1,#0]  ; vc
        LDR      r0,|L1.1080|
        LDRB     r0,[r0,#0]  ; in_index
        SUBS     r0,r0,#1
        UXTB     r0,r0
        LDR      r1,|L1.1052|
        B        |L1.802|
|L1.800|
        B        |L1.854|
|L1.802|
        STRB     r4,[r1,r0]
        LDR      r0,|L1.1048|
        LDR      r0,[r0,#0]  ; out_index
        SUBS     r0,r0,#1
        LDR      r1,|L1.1048|
        STR      r0,[r1,#0]  ; out_index
|L1.814|
        B        |L1.574|
|L1.816|
        LDR      r0,|L1.1080|
        LDRB     r1,[r0,#0]  ; in_index
        LDR      r0,[r0,#0]  ; in_index
        ADDS     r0,r0,#1
        LDR      r2,|L1.1080|
        STR      r0,[r2,#0]  ; in_index
        UXTB     r0,r1
        LDR      r1,|L1.1052|
        STRB     r4,[r1,r0]
|L1.834|
        NOP      
        LDR      r0,|L1.1044|
        LDR      r0,[r0,#0x18]
        MOVS     r1,#1
        LSLS     r1,r1,#14
        ANDS     r0,r0,r1
        CMP      r0,#0
        BNE      |L1.852|
        B        |L1.550|
|L1.852|
        B        |L1.970|
|L1.854|
        NOP      
        LDR      r0,|L1.1044|
        LDR      r0,[r0,#0x1c]
        MOVS     r1,#1
        LSLS     r1,r1,#9
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L1.970|
        B        |L1.898|
|L1.872|
        LDR      r0,|L1.1096|
        LDRH     r0,[r0,#0]  ; utx_out
        LSLS     r0,r0,#23
        LSRS     r0,r0,#23
        LDR      r1,|L1.1036|
        LDRB     r0,[r1,r0]
        LDR      r1,|L1.1044|
        STR      r0,[r1,#0]
        LDR      r0,|L1.1096|
        LDR      r0,[r0,#0]  ; utx_out
        ADDS     r0,r0,#1
        LDR      r1,|L1.1096|
        STR      r0,[r1,#0]  ; utx_out
|L1.898|
        LDR      r0,|L1.1096|
        LDR      r0,[r0,#0]  ; utx_out
        LDR      r1,|L1.1032|
        LDR      r1,[r1,#0]  ; utx_in
        CMP      r0,r1
        BCS      |L1.926|
        NOP      
        LDR      r0,|L1.1044|
        LDR      r0,[r0,#0x18]
        MOVS     r1,#1
        LSLS     r1,r1,#23
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L1.872|
|L1.926|
        LDR      r0,|L1.1096|
        LDR      r0,[r0,#0]  ; utx_out
        LDR      r1,|L1.1032|
        LDR      r1,[r1,#0]  ; utx_in
        CMP      r0,r1
        BNE      |L1.970|
        MOVS     r0,#2
        LDR      r1,|L1.1044|
        LDR      r1,[r1,#4]
        BICS     r1,r1,r0
        LDR      r2,|L1.1044|
        STR      r1,[r2,#4]
        NOP      
        MOVS     r0,#1
        LDR      r1,|L1.1040|
        STR      r0,[r1,#0]  ; txidle
        LDR      r0,|L1.1032|
        LDRB     r0,[r0,#0]  ; utx_in
        LDR      r1,|L1.1032|
        STR      r0,[r1,#0]  ; utx_in
        LDR      r1,|L1.1096|
        STR      r0,[r1,#0]  ; utx_out
|L1.970|
        NOP      
        B        |L1.574|
        ENDP

uartInit PROC
        PUSH     {r4,lr}
        SUB      sp,sp,#0x28
        NOP      
        MOVS     r0,#5
        LSLS     r0,r0,#28
        LDR      r0,[r0,#0x38]
        MOVS     r1,#0x30
        ORRS     r0,r0,r1
        MOVS     r1,#5
        LSLS     r1,r1,#28
        STR      r0,[r1,#0x38]
        LDR      r0,|L1.1100|
        LDR      r0,[r0,#0x10]
        MOVS     r1,#3
        LSLS     r1,r1,#29
        ORRS     r0,r0,r1
        LDR      r1,|L1.1100|
        STR      r0,[r1,#0x10]
        NOP      
        MOVS     r0,#0
        STR      r0,[sp,#0]
        MOVS     r0,#1
        STR      r0,[sp,#4]
        LDR      r0,|L1.1104|
        STR      r0,[sp,#8]
        MOVS     r0,#0xe1
        LSLS     r0,r0,#9
        STR      r0,[sp,#0xc]
        B        |L1.1108|
|L1.1032|
        DCD      utx_in
|L1.1036|
        DCD      utx_buf
|L1.1040|
        DCD      txidle
|L1.1044|
        DCD      0x40050000
|L1.1048|
        DCD      out_index
|L1.1052|
        DCD      UI_buf
|L1.1056|
        DCD      HEXSTR
|L1.1060|
        DCB      "GLSN$$ ",0
        DCB      0
|L1.1068|
        DCD      column
|L1.1072|
        DCB      "\b \b",0
|L1.1076|
        DCD      ||vc||
|L1.1080|
        DCD      in_index
|L1.1084|
        DCD      lastkey
|L1.1088|
        DCD      0x00ffff00
|L1.1092|
        DCD      0x001b5b00
|L1.1096|
        DCD      utx_out
|L1.1100|
        DCD      0x50000040
|L1.1104|
        DCD      0x00b71b00
|L1.1108|
        MOVS     r0,#3
        STR      r0,[sp,#0x10]
        MOVS     r0,#0
        STR      r0,[sp,#0x14]
        STR      r0,[sp,#0x18]
        MOVS     r0,#0x10
        STR      r0,[sp,#0x1c]
        MOVS     r0,#3
        LSLS     r0,r0,#28
        STR      r0,[sp,#0x20]
        MOVS     r0,#0x64
        ADD      r1,sp,#0x20
        STRB     r0,[r1,#4]
        MOV      r1,sp
        LDR      r0,|L1.1848|
        BL       DrvUART_Init
        MOVS     r1,#2
        MOVS     r0,#0xc
        BL       NVIC_SetPriority
        LDR      r1,|L1.1852|
        LDR      r0,|L1.1848|
        BL       DrvUART_EnableInt
        MOVS     r4,#0
        B        |L1.1170|
|L1.1162|
        MOVS     r0,#0
        LDR      r1,|L1.1856|
        STRB     r0,[r1,r4]
        ADDS     r4,r4,#1
|L1.1170|
        CMP      r4,#0xff
        BLS      |L1.1162|
        MOVS     r4,#0
        B        |L1.1186|
|L1.1178|
        MOVS     r0,#0
        LDR      r1,|L1.1860|
        STRB     r0,[r1,r4]
        ADDS     r4,r4,#1
|L1.1186|
        MOVS     r0,#1
        LSLS     r0,r0,#9
        CMP      r4,r0
        BCC      |L1.1178|
        MOVS     r0,#0
        LDR      r1,|L1.1864|
        STR      r0,[r1,#0]  ; out_index
        LDR      r1,|L1.1868|
        STR      r0,[r1,#0]  ; in_index
        LDR      r1,|L1.1872|
        STR      r0,[r1,#0]  ; utx_out
        LDR      r1,|L1.1876|
        STR      r0,[r1,#0]  ; utx_in
        MOVS     r0,#1
        LDR      r1,|L1.1880|
        STR      r0,[r1,#0]  ; txidle
        ADD      sp,sp,#0x28
        POP      {r4,pc}
        ENDP

i32toh PROC
        PUSH     {r4,lr}
        MOV      r2,r0
        LSRS     r3,r2,#28
        LDR      r4,|L1.1884|
        LDRB     r3,[r4,r3]
        STRB     r3,[r1,#0]
        MOVS     r3,#0xf
        LSLS     r3,r3,#24
        ANDS     r3,r3,r2
        LSRS     r3,r3,#24
        LDRB     r3,[r4,r3]
        STRB     r3,[r1,#1]
        MOVS     r3,#0xf
        LSLS     r3,r3,#20
        ANDS     r3,r3,r2
        LSRS     r3,r3,#20
        LDRB     r3,[r4,r3]
        STRB     r3,[r1,#2]
        MOVS     r3,#0xf
        LSLS     r3,r3,#16
        ANDS     r3,r3,r2
        LSRS     r3,r3,#16
        LDRB     r3,[r4,r3]
        STRB     r3,[r1,#3]
        MOVS     r3,#0xf
        LSLS     r3,r3,#12
        ANDS     r3,r3,r2
        LSRS     r3,r3,#12
        LDRB     r3,[r4,r3]
        STRB     r3,[r1,#4]
        MOVS     r3,#0xf
        LSLS     r3,r3,#8
        ANDS     r3,r3,r2
        LSRS     r3,r3,#8
        LDRB     r3,[r4,r3]
        STRB     r3,[r1,#5]
        MOVS     r3,#0xf0
        ANDS     r3,r3,r2
        LSRS     r3,r3,#4
        LDRB     r3,[r4,r3]
        STRB     r3,[r1,#6]
        LSLS     r3,r2,#28
        LSRS     r3,r3,#28
        LDRB     r3,[r4,r3]
        STRB     r3,[r1,#7]
        MOVS     r3,#0x20
        STRB     r3,[r1,#8]
        MOVS     r3,#0
        STRB     r3,[r1,#9]
        POP      {r4,pc}
        ENDP

cpld_send_data PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOVS     r5,#0
        B        |L1.1388|
|L1.1330|
        MOVS     r0,#0x80
        TST      r4,r0
        BEQ      |L1.1348|
        NOP      
        MOVS     r0,#1
        LDR      r1,|L1.1888|
        STR      r0,[r1,#0]
        NOP      
        B        |L1.1360|
|L1.1348|
        NOP      
        MOVS     r0,#0
        LDR      r1,|L1.1888|
        STR      r0,[r1,#0]
        NOP      
        NOP      
|L1.1360|
        NOP      
        MOVS     r0,#0
        LDR      r1,|L1.1888|
        SUBS     r1,r1,#8
        STR      r0,[r1,#0]
        NOP      
        LSLS     r0,r4,#25
        LSRS     r4,r0,#24
        NOP      
        MOVS     r0,#1
        STR      r0,[r1,#0]
        NOP      
        ADDS     r0,r5,#1
        UXTB     r5,r0
|L1.1388|
        CMP      r5,#8
        BLT      |L1.1330|
        NOP      
        MOVS     r0,#1
        LDR      r1,|L1.1888|
        SUBS     r1,r1,#4
        STR      r0,[r1,#0]
        NOP      
        MOVS     r0,#0x64
        BL       sysDelayUs
        NOP      
        MOVS     r0,#0
        LDR      r1,|L1.1888|
        SUBS     r1,r1,#4
        STR      r0,[r1,#0]
        NOP      
        POP      {r4-r6,pc}
        ENDP

uartdecode PROC
        PUSH     {r0-r6,lr}
        MOV      r6,r0
        MOV      r5,r1
        MOV      r1,sp
        MOV      r0,r6
        BL       itoa
        MOV      r4,r0
        B        |L1.1450|
|L1.1442|
        MOVS     r0,#0x20
        MOV      r1,sp
        STRB     r0,[r1,r4]
        ADDS     r4,r4,#1
|L1.1450|
        CMP      r4,#6
        BCC      |L1.1442|
        MOVS     r2,#0
        MOV      r0,r4
        ADDS     r4,r4,#1
        MOV      r1,sp
        STRB     r2,[r1,r0]
        MOV      r0,r5
        BL       iputs
        MOV      r0,sp
        BL       iputs
        ADR      r0,|L1.1892|
        BL       iputs
        POP      {r0-r6,pc}
        ENDP

uartdecodeH PROC
        PUSH     {r0-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r0,r5
        BL       iputs
        MOVS     r0,#0xf0
        ANDS     r0,r0,r4
        LSRS     r6,r0,#4
        LDR      r0,|L1.1896|
        LDRB     r1,[r0,r6]
        MOV      r0,sp
        STRB     r1,[r0,#0]
        LSLS     r6,r4,#28
        LSRS     r6,r6,#28
        LDR      r0,|L1.1896|
        LDRB     r1,[r0,r6]
        MOV      r0,sp
        STRB     r1,[r0,#1]
        MOVS     r1,#0
        STRB     r1,[r0,#2]
        BL       iputs
        ADR      r0,|L1.1892|
        BL       iputs
        POP      {r0-r6,pc}
        ENDP

uartdecodeH2 PROC
        PUSH     {r0-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r0,r5
        BL       iputs
        MOVS     r0,#0xf0
        ANDS     r0,r0,r4
        LSRS     r6,r0,#4
        LDR      r0,|L1.1900|
        LDRB     r1,[r0,r6]
        MOV      r0,sp
        STRB     r1,[r0,#0]
        LSLS     r6,r4,#28
        LSRS     r6,r6,#28
        LDR      r0,|L1.1900|
        LDRB     r1,[r0,r6]
        MOV      r0,sp
        STRB     r1,[r0,#1]
        MOVS     r1,#0
        STRB     r1,[r0,#2]
        BL       iputs
        POP      {r0-r6,pc}
        ENDP

uartdecodeH32 PROC
        PUSH     {r0-r6,lr}
        MOV      r4,r0
        MOV      r6,r1
        MOV      r0,r6
        BL       iputs
        LSRS     r5,r4,#28
        LDR      r0,|L1.1904|
        LDRB     r1,[r0,r5]
        MOV      r0,sp
        STRB     r1,[r0,#0]
        MOVS     r0,#0xf
        LSLS     r0,r0,#24
        ANDS     r0,r0,r4
        LSRS     r5,r0,#24
        LDR      r0,|L1.1904|
        LDRB     r1,[r0,r5]
        MOV      r0,sp
        STRB     r1,[r0,#1]
        MOVS     r0,#0xf
        LSLS     r0,r0,#20
        ANDS     r0,r0,r4
        LSRS     r5,r0,#20
        LDR      r0,|L1.1904|
        LDRB     r1,[r0,r5]
        MOV      r0,sp
        STRB     r1,[r0,#2]
        MOVS     r0,#0xf
        LSLS     r0,r0,#16
        ANDS     r0,r0,r4
        LSRS     r5,r0,#16
        LDR      r0,|L1.1904|
        LDRB     r1,[r0,r5]
        MOV      r0,sp
        STRB     r1,[r0,#3]
        MOVS     r0,#0xf
        LSLS     r0,r0,#12
        ANDS     r0,r0,r4
        LSRS     r5,r0,#12
        LDR      r0,|L1.1904|
        LDRB     r1,[r0,r5]
        MOV      r0,sp
        STRB     r1,[r0,#4]
        MOVS     r0,#0xf
        LSLS     r0,r0,#8
        ANDS     r0,r0,r4
        LSRS     r5,r0,#8
        LDR      r0,|L1.1904|
        LDRB     r1,[r0,r5]
        MOV      r0,sp
        STRB     r1,[r0,#5]
        MOVS     r0,#0xf0
        ANDS     r0,r0,r4
        LSRS     r5,r0,#4
        LDR      r0,|L1.1904|
        LDRB     r1,[r0,r5]
        MOV      r0,sp
        STRB     r1,[r0,#6]
        LSLS     r5,r4,#28
        LSRS     r5,r5,#28
        LDR      r0,|L1.1904|
        LDRB     r1,[r0,r5]
        MOV      r0,sp
        STRB     r1,[r0,#7]
        MOVS     r1,#0
        STRB     r1,[r0,#8]
        BL       iputs
        ADR      r0,|L1.1892|
        BL       iputs
        POP      {r0-r6,pc}
        ENDP

NVIC_SetPriority PROC
        PUSH     {r4,lr}
        CMP      r0,#0
        BGE      |L1.1788|
        LDR      r2,|L1.1908|
        LSLS     r3,r0,#28
        LSRS     r3,r3,#28
        SUBS     r3,r3,#8
        LSRS     r3,r3,#2
        LSLS     r3,r3,#2
        LDR      r2,[r2,r3]
        LSLS     r3,r0,#30
        LSRS     r4,r3,#27
        MOVS     r3,#0xff
        LSLS     r3,r3,r4
        BICS     r2,r2,r3
        LSLS     r3,r1,#30
        LSRS     r3,r3,#24
        LSLS     r4,r0,#30
        LSRS     r4,r4,#27
        LSLS     r3,r3,r4
        ORRS     r2,r2,r3
        LDR      r3,|L1.1908|
        LSLS     r4,r0,#28
        LSRS     r4,r4,#28
        SUBS     r4,r4,#8
        LSRS     r4,r4,#2
        LSLS     r4,r4,#2
        STR      r2,[r3,r4]
        B        |L1.1838|
|L1.1788|
        LDR      r2,|L1.1912|
        MOVS     r3,#3
        LSLS     r3,r3,#8
        ADDS     r2,r2,r3
        LSRS     r3,r0,#2
        LSLS     r3,r3,#2
        LDR      r2,[r2,r3]
        LSLS     r3,r0,#30
        LSRS     r4,r3,#27
        MOVS     r3,#0xff
        LSLS     r3,r3,r4
        BICS     r2,r2,r3
        LSLS     r3,r1,#30
        LSRS     r3,r3,#24
        LSLS     r4,r0,#30
        LSRS     r4,r4,#27
        LSLS     r3,r3,r4
        ORRS     r2,r2,r3
        LDR      r3,|L1.1912|
        MOVS     r4,#3
        LSLS     r4,r4,#8
        ADDS     r3,r3,r4
        LSRS     r4,r0,#2
        LSLS     r4,r4,#2
        STR      r2,[r3,r4]
|L1.1838|
        POP      {r4,pc}
        ENDP

UART_ENABLE_INT PROC
        LDR      r2,[r0,#4]
        ORRS     r2,r2,r1
        STR      r2,[r0,#4]
        BX       lr
        ENDP

|L1.1848|
        DCD      0x40050000
|L1.1852|
        DCD      0x00000811
|L1.1856|
        DCD      UI_buf
|L1.1860|
        DCD      utx_buf
|L1.1864|
        DCD      out_index
|L1.1868|
        DCD      in_index
|L1.1872|
        DCD      utx_out
|L1.1876|
        DCD      utx_in
|L1.1880|
        DCD      txidle
|L1.1884|
        DCD      |symbol_number.14|
|L1.1888|
        DCD      0x500042cc
|L1.1892|
        DCB      "\r\n",0
        DCB      0
|L1.1896|
        DCD      |symbol_number.15|
|L1.1900|
        DCD      |symbol_number.16|
|L1.1904|
        DCD      |symbol_number.17|
|L1.1908|
        DCD      0xe000ed1c
|L1.1912|
        DCD      0xe000e100

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.bss||, DATA, NOINIT, ALIGN=0

UI_buf
        %        256
utx_buf
        %        512

        AREA ||.constdata||, DATA, READONLY, ALIGN=0

HEXSTR
        DCB      0x30,0x31,0x32,0x33
        DCB      0x34,0x35,0x36,0x37
        DCB      0x38,0x39,0x41,0x42
        DCB      0x43,0x44,0x45,0x46
|symbol_number.14|
        DCB      0x30,0x31,0x32,0x33
        DCB      0x34,0x35,0x36,0x37
        DCB      0x38,0x39,0x41,0x42
        DCB      0x43,0x44,0x45,0x46
|symbol_number.15|
        DCB      0x30,0x31,0x32,0x33
        DCB      0x34,0x35,0x36,0x37
        DCB      0x38,0x39,0x41,0x42
        DCB      0x43,0x44,0x45,0x46
|symbol_number.16|
        DCB      0x30,0x31,0x32,0x33
        DCB      0x34,0x35,0x36,0x37
        DCB      0x38,0x39,0x41,0x42
        DCB      0x43,0x44,0x45,0x46
|symbol_number.17|
        DCB      0x30,0x31,0x32,0x33
        DCB      0x34,0x35,0x36,0x37
        DCB      0x38,0x39,0x41,0x42
        DCB      0x43,0x44,0x45,0x46

        AREA ||.data||, DATA, ALIGN=2

in_index
        DCD      0x00000000
out_index
        DCD      0x00000000
utx_in
        DCD      0x00000000
utx_out
        DCD      0x00000000
txidle
        DCD      0x00000001
lastkey
        DCD      0xffffffff
column
        DCD      0x00000000
||vc||
        DCD      0x00000000

        EXPORT uartSendCmd [CODE]
        EXPORT smscSendCmd [CODE]
        EXPORT iputc [CODE]
        EXPORT iputs [CODE]
        EXPORT iputchar [CODE]
        EXPORT igetc [CODE]
        EXPORT iungetc [CODE]
        EXPORT ||clr|| [CODE]
        EXPORT itoa [CODE]
        EXPORT itoh [CODE]
        EXPORT ||dps|| [CODE]
        EXPORT strncmp [CODE]
        EXPORT strcmp [CODE]
        EXPORT strlen [CODE]
        EXPORT sendInfo [CODE]
        EXPORT UART0_IRQHandler [CODE]
        EXPORT uartInit [CODE]
        EXPORT i32toh [CODE]
        EXPORT cpld_send_data [CODE]
        EXPORT uartdecode [CODE]
        EXPORT uartdecodeH [CODE]
        EXPORT uartdecodeH2 [CODE]
        EXPORT uartdecodeH32 [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT __aeabi_uidivmod [CODE]
        IMPORT DrvUART_Init [CODE]
        IMPORT DrvUART_EnableInt [CODE]
        IMPORT sysDelayUs [CODE]

        KEEP NVIC_SetPriority
        KEEP UART_ENABLE_INT
        KEEP UI_buf
        KEEP utx_buf
        KEEP HEXSTR
        KEEP |symbol_number.14|
        EXPORTAS |symbol_number.14|, HEXSTR
        KEEP |symbol_number.15|
        EXPORTAS |symbol_number.15|, HEXSTR
        KEEP |symbol_number.16|
        EXPORTAS |symbol_number.16|, HEXSTR
        KEEP |symbol_number.17|
        EXPORTAS |symbol_number.17|, HEXSTR
        KEEP in_index
        KEEP out_index
        KEEP utx_in
        KEEP utx_out
        KEEP txidle
        KEEP lastkey
        KEEP column
        KEEP ||vc||

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
