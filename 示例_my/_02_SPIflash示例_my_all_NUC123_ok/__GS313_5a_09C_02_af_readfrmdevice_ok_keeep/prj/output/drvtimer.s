; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--debug -c --asm --info=totals -o.\output\drvtimer.o --depend=.\output\drvtimer.d --cpu=Cortex-M0 --apcs=interwork -O0 -I..\CMSIS\CM0\DeviceSupport\Nuvoton\NUC123Series -I..\CMSIS\CM0\CoreSupport -I..\INC\DrvInc -I..\INC\SysInc -IC:\Keil_v472\ARM\RV31\INC -IC:\Keil_v472\ARM\CMSIS\Include -D__MICROLIB --omf_browse=.\output\drvtimer.crf ..\DrvSrc\DrvTimer.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

DrvTIMER_Init PROC
        PUSH     {r3-r7,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        MOV      r7,r3
        LDR      r0,|L1.740|
        CMP      r4,r0
        BNE      |L1.24|
        MOVS     r0,#4
        BL       APBCLK_ENABLE
        B        |L1.60|
|L1.24|
        LDR      r0,|L1.740|
        ADDS     r0,r0,#0x20
        CMP      r4,r0
        BNE      |L1.40|
        MOVS     r0,#8
        BL       APBCLK_ENABLE
        B        |L1.60|
|L1.40|
        LDR      r0,|L1.744|
        CMP      r4,r0
        BNE      |L1.54|
        MOVS     r0,#0x10
        BL       APBCLK_ENABLE
        B        |L1.60|
|L1.54|
        MOVS     r0,#0x20
        BL       APBCLK_ENABLE
|L1.60|
        LDR      r0,[r4,#8]
        MOVS     r1,#3
        ORRS     r0,r0,r1
        STR      r0,[r4,#8]
        LDR      r0,[r4,#0x18]
        MOVS     r1,#1
        ORRS     r0,r0,r1
        STR      r0,[r4,#0x18]
        STR      r6,[r4,#4]
        LSLS     r0,r1,#16
        ADDS     r0,r7,r0
        LSLS     r1,r1,#25
        ADDS     r0,r0,r1
        ADDS     r0,r0,r5
        STR      r0,[r4,#0]
        POP      {r3-r7,pc}
        ENDP

DrvTIMER_DeInit PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        MOVS     r0,#0
        STR      r0,[r4,#0]
        LDR      r0,|L1.740|
        CMP      r4,r0
        BNE      |L1.120|
        MOVS     r0,#4
        BL       APBCLK_DISABLE
        MOVS     r0,#8
        BL       NVIC_DisableIRQ
        B        |L1.174|
|L1.120|
        LDR      r0,|L1.740|
        ADDS     r0,r0,#0x20
        CMP      r4,r0
        BNE      |L1.142|
        MOVS     r0,#8
        BL       APBCLK_DISABLE
        MOVS     r0,#9
        BL       NVIC_DisableIRQ
        B        |L1.174|
|L1.142|
        LDR      r0,|L1.744|
        CMP      r4,r0
        BNE      |L1.162|
        MOVS     r0,#0x10
        BL       APBCLK_DISABLE
        MOVS     r0,#0xa
        BL       NVIC_DisableIRQ
        B        |L1.174|
|L1.162|
        MOVS     r0,#0x20
        BL       APBCLK_DISABLE
        MOVS     r0,#0xb
        BL       NVIC_DisableIRQ
|L1.174|
        POP      {r4,pc}
        ENDP

DrvTIMER_EnableInt PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        LDR      r0,[r4,#8]
        STR      r0,[r4,#8]
        MOVS     r0,#1
        LSLS     r0,r0,#29
        TST      r5,r0
        BEQ      |L1.210|
        NOP      
        LDR      r0,[r4,#0]
        MOVS     r1,#1
        LSLS     r1,r1,#29
        ORRS     r0,r0,r1
        STR      r0,[r4,#0]
        NOP      
        NOP      
|L1.210|
        MOVS     r0,#0x20
        TST      r5,r0
        BEQ      |L1.230|
        NOP      
        LDR      r0,[r4,#0x14]
        MOVS     r1,#0x20
        ORRS     r0,r0,r1
        STR      r0,[r4,#0x14]
        NOP      
        NOP      
|L1.230|
        LDR      r0,|L1.740|
        CMP      r4,r0
        BNE      |L1.244|
        MOVS     r0,#8
        BL       NVIC_EnableIRQ
        B        |L1.280|
|L1.244|
        LDR      r0,|L1.740|
        ADDS     r0,r0,#0x20
        CMP      r4,r0
        BNE      |L1.260|
        MOVS     r0,#9
        BL       NVIC_EnableIRQ
        B        |L1.280|
|L1.260|
        LDR      r0,|L1.744|
        CMP      r4,r0
        BNE      |L1.274|
        MOVS     r0,#0xa
        BL       NVIC_EnableIRQ
        B        |L1.280|
|L1.274|
        MOVS     r0,#0xb
        BL       NVIC_EnableIRQ
|L1.280|
        POP      {r4-r6,pc}
        ENDP

DrvTIMER_DisableInt PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        NOP      
        LDR      r0,[r4,#0]
        MOVS     r1,#1
        LSLS     r1,r1,#29
        BICS     r0,r0,r1
        STR      r0,[r4,#0]
        NOP      
        NOP      
        LDR      r0,[r4,#0x14]
        MOVS     r1,#0x20
        BICS     r0,r0,r1
        STR      r0,[r4,#0x14]
        NOP      
        LDR      r0,|L1.740|
        CMP      r4,r0
        BNE      |L1.326|
        MOVS     r0,#8
        BL       NVIC_DisableIRQ
        B        |L1.362|
|L1.326|
        LDR      r0,|L1.740|
        ADDS     r0,r0,#0x20
        CMP      r4,r0
        BNE      |L1.342|
        MOVS     r0,#9
        BL       NVIC_DisableIRQ
        B        |L1.362|
|L1.342|
        LDR      r0,|L1.744|
        CMP      r4,r0
        BNE      |L1.356|
        MOVS     r0,#0xa
        BL       NVIC_DisableIRQ
        B        |L1.362|
|L1.356|
        MOVS     r0,#0xb
        BL       NVIC_DisableIRQ
|L1.362|
        POP      {r4,pc}
        ENDP

DrvWDT_Init PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r6,r2
        BL       SYS_UnlockReg
        MOVS     r0,#1
        BL       APBCLK_ENABLE
        NOP      
        LDR      r0,|L1.748|
        LDR      r0,[r0,#0x14]
        LSRS     r0,r0,#2
        LSLS     r0,r0,#2
        ORRS     r0,r0,r4
        LDR      r1,|L1.748|
        STR      r0,[r1,#0x14]
        NOP      
        UXTB     r0,r5
        LDR      r1,|L1.752|
        LDR      r1,[r1,#0]
        MOVS     r2,#7
        LSLS     r2,r2,#8
        BICS     r1,r1,r2
        LSLS     r2,r0,#8
        ORRS     r1,r1,r2
        LDR      r2,|L1.752|
        STR      r1,[r2,#0]
        NOP      
        UXTB     r0,r6
        MOV      r1,r2
        STR      r0,[r1,#4]
        NOP      
        BL       SYS_LockReg
        POP      {r4-r6,pc}
        ENDP

DrvWDT_DeInit PROC
        PUSH     {r4,lr}
        BL       SYS_UnlockReg
        NOP      
        LDR      r0,|L1.752|
        LDR      r0,[r0,#0]
        MOVS     r1,#0x80
        BICS     r0,r0,r1
        LDR      r1,|L1.752|
        STR      r0,[r1,#0]
        NOP      
        BL       WDT_DISABLE_INT
        MOVS     r0,#1
        BL       NVIC_DisableIRQ
        MOVS     r0,#1
        BL       APBCLK_DISABLE
        BL       SYS_LockReg
        POP      {r4,pc}
        ENDP

DrvWDT_EnableInt PROC
        PUSH     {r4,lr}
        BL       SYS_UnlockReg
        NOP      
        LDR      r0,|L1.752|
        LDR      r0,[r0,#0]
        MOVS     r1,#8
        ORRS     r0,r0,r1
        LDR      r1,|L1.752|
        STR      r0,[r1,#0]
        NOP      
        NOP      
        MOV      r0,r1
        LDR      r0,[r0,#0]
        MOVS     r1,#0x40
        ORRS     r0,r0,r1
        LDR      r1,|L1.752|
        STR      r0,[r1,#0]
        NOP      
        MOVS     r0,#1
        BL       NVIC_EnableIRQ
        BL       SYS_LockReg
        POP      {r4,pc}
        ENDP

DrvWDT_DisableInt PROC
        PUSH     {r4,lr}
        BL       SYS_UnlockReg
        BL       WDT_DISABLE_INT
        MOVS     r0,#1
        BL       NVIC_DisableIRQ
        BL       SYS_LockReg
        POP      {r4,pc}
        ENDP

DrvWWDT_Init PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r6,r1
        MOV      r4,r2
        BL       SYS_UnlockReg
        NOP      
        LDR      r0,|L1.748|
        LDR      r0,[r0,#0x1c]
        MOVS     r1,#3
        LSLS     r1,r1,#16
        BICS     r0,r0,r1
        ORRS     r0,r0,r4
        LDR      r1,|L1.748|
        STR      r0,[r1,#0x1c]
        NOP      
        LSLS     r1,r5,#16
        LSLS     r2,r6,#8
        ORRS     r1,r1,r2
        ADDS     r0,r1,#3
        LDR      r1,|L1.756|
        STR      r0,[r1,#4]
        NOP      
        MOVS     r0,#1
        BL       NVIC_EnableIRQ
        BL       SYS_LockReg
        POP      {r4-r6,pc}
        ENDP

WWDT_DeInit PROC
        BX       lr
        ENDP

DrvWWDT_IsResetSource PROC
        NOP      
        LDR      r0,|L1.756|
        LDR      r0,[r0,#8]
        MOVS     r2,#2
        ANDS     r0,r0,r2
        MOV      r1,r0
        CMP      r1,#0
        BEQ      |L1.644|
        NOP      
        LDR      r0,|L1.756|
        LDR      r0,[r0,#8]
        ORRS     r0,r0,r2
        LDR      r2,|L1.756|
        STR      r0,[r2,#8]
        NOP      
        NOP      
|L1.644|
        UXTB     r0,r1
        BX       lr
        ENDP

NVIC_EnableIRQ PROC
        LSLS     r2,r0,#27
        LSRS     r2,r2,#27
        MOVS     r1,#1
        LSLS     r1,r1,r2
        LDR      r2,|L1.760|
        STR      r1,[r2,#0]
        BX       lr
        ENDP

NVIC_DisableIRQ PROC
        LSLS     r2,r0,#27
        LSRS     r2,r2,#27
        MOVS     r1,#1
        LSLS     r1,r1,r2
        LDR      r2,|L1.760|
        ADDS     r2,r2,#0x80
        STR      r1,[r2,#0]
        BX       lr
        ENDP

APBCLK_ENABLE PROC
        LDR      r1,|L1.748|
        LDR      r1,[r1,#8]
        ORRS     r1,r1,r0
        LDR      r2,|L1.748|
        STR      r1,[r2,#8]
        BX       lr
        ENDP

APBCLK_DISABLE PROC
        LDR      r1,|L1.748|
        LDR      r1,[r1,#8]
        BICS     r1,r1,r0
        LDR      r2,|L1.748|
        STR      r1,[r2,#8]
        BX       lr
        ENDP

SYS_UnlockReg PROC
        MOVS     r0,#0x59
        LDR      r1,|L1.764|
        STR      r0,[r1,#0]
        MOVS     r0,#0x16
        STR      r0,[r1,#0]
        MOVS     r0,#0x88
        STR      r0,[r1,#0]
        BX       lr
        ENDP

SYS_LockReg PROC
        MOVS     r0,#0
        LDR      r1,|L1.764|
        STR      r0,[r1,#0]
        BX       lr
        ENDP

WDT_DISABLE_INT PROC
        LDR      r0,|L1.752|
        LDR      r0,[r0,#0]
        MOVS     r1,#0x40
        BICS     r0,r0,r1
        LDR      r1,|L1.752|
        STR      r0,[r1,#0]
        BX       lr
        ENDP

|L1.740|
        DCD      0x40010000
|L1.744|
        DCD      0x40110000
|L1.748|
        DCD      0x50000200
|L1.752|
        DCD      0x40004000
|L1.756|
        DCD      0x40004100
|L1.760|
        DCD      0xe000e100
|L1.764|
        DCD      0x50000100

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        EXPORT DrvTIMER_Init [CODE]
        EXPORT DrvTIMER_DeInit [CODE]
        EXPORT DrvTIMER_EnableInt [CODE]
        EXPORT DrvTIMER_DisableInt [CODE]
        EXPORT DrvWDT_Init [CODE]
        EXPORT DrvWDT_DeInit [CODE]
        EXPORT DrvWDT_EnableInt [CODE]
        EXPORT DrvWDT_DisableInt [CODE]
        EXPORT DrvWWDT_Init [CODE]
        EXPORT WWDT_DeInit [CODE]
        EXPORT DrvWWDT_IsResetSource [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]

        KEEP NVIC_EnableIRQ
        KEEP NVIC_DisableIRQ
        KEEP APBCLK_ENABLE
        KEEP APBCLK_DISABLE
        KEEP SYS_UnlockReg
        KEEP SYS_LockReg
        KEEP WDT_DISABLE_INT

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
