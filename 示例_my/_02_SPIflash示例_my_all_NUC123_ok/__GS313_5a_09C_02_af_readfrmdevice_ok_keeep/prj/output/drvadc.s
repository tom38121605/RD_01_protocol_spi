; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--debug -c --asm --info=totals -o.\output\drvadc.o --depend=.\output\drvadc.d --cpu=Cortex-M0 --apcs=interwork -O0 -I..\CMSIS\CM0\DeviceSupport\Nuvoton\NUC123Series -I..\CMSIS\CM0\CoreSupport -I..\INC\DrvInc -I..\INC\SysInc -IC:\Keil_v472\ARM\RV31\INC -IC:\Keil_v472\ARM\CMSIS\Include -D__MICROLIB --omf_browse=.\output\drvadc.crf ..\DrvSrc\DrvADC.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

ADC_SET_CMP PROC
        PUSH     {r4-r7,lr}
        LDR      r4,[sp,#0x14]
        LDR      r5,|L1.684|
        LSLS     r6,r0,#2
        LDR      r5,[r5,r6]
        LDR      r6,|L1.688|
        ANDS     r5,r5,r6
        LSLS     r6,r1,#16
        ORRS     r5,r5,r6
        LSLS     r6,r2,#8
        ORRS     r5,r5,r6
        ORRS     r5,r5,r3
        ORRS     r5,r5,r4
        LDR      r6,|L1.684|
        LSLS     r7,r0,#2
        STR      r5,[r6,r7]
        POP      {r4-r7,pc}
        ENDP

ADC_SET_CMP_DATA PROC
        PUSH     {r4,lr}
        LDR      r2,|L1.684|
        LSLS     r3,r0,#2
        LDR      r2,[r2,r3]
        LDR      r3,|L1.692|
        ANDS     r2,r2,r3
        LSLS     r3,r1,#16
        ORRS     r2,r2,r3
        LDR      r3,|L1.684|
        LSLS     r4,r0,#2
        STR      r2,[r3,r4]
        POP      {r4,pc}
        ENDP

DrvADC_Init PROC
        PUSH     {r4-r6,lr}
        MOVS     r4,#1
        LSLS     r4,r4,#28
        MOVS     r5,#5
        LSLS     r5,r5,#28
        LDR      r5,[r5,#0xc]
        ORRS     r5,r5,r4
        MOVS     r6,#5
        LSLS     r6,r6,#28
        STR      r5,[r6,#0xc]
        MOV      r5,r6
        LDR      r5,[r5,#0xc]
        BICS     r5,r5,r4
        STR      r5,[r6,#0xc]
        NOP      
        NOP      
        LDR      r4,|L1.696|
        LDR      r4,[r4,#0x14]
        MOVS     r5,#0xc
        BICS     r4,r4,r5
        ORRS     r4,r4,r2
        LDR      r5,|L1.696|
        STR      r4,[r5,#0x14]
        NOP      
        NOP      
        MOV      r4,r5
        LDR      r4,[r4,#0x18]
        MOVS     r5,#0xff
        LSLS     r5,r5,#16
        BICS     r4,r4,r5
        SUBS     r5,r3,#1
        LSLS     r5,r5,#16
        ORRS     r4,r4,r5
        LDR      r5,|L1.696|
        STR      r4,[r5,#0x18]
        NOP      
        LSLS     r4,r5,#19
        LDR      r5,[r5,#8]
        ORRS     r5,r5,r4
        LDR      r6,|L1.696|
        STR      r5,[r6,#8]
        NOP      
        NOP      
        LDR      r4,|L1.684|
        SUBS     r4,r4,#0x28
        LDR      r4,[r4,#0x20]
        MOVS     r5,#1
        ORRS     r4,r4,r5
        LDR      r5,|L1.684|
        SUBS     r5,r5,#0x28
        STR      r4,[r5,#0x20]
        NOP      
        NOP      
        MOV      r4,r5
        LDR      r4,[r4,#0x20]
        MOVS     r5,#0xc
        BICS     r4,r4,r5
        ORRS     r4,r4,r0
        LDR      r5,|L1.684|
        SUBS     r5,r5,#0x28
        STR      r4,[r5,#0x20]
        NOP      
        NOP      
        MOV      r4,r5
        LDR      r4,[r4,#0x24]
        ORRS     r4,r4,r1
        STR      r4,[r5,#0x24]
        NOP      
        POP      {r4-r6,pc}
        ENDP

DrvADC_DeInit PROC
        PUSH     {r4,lr}
        MOVS     r0,#0
        LDR      r1,|L1.684|
        SUBS     r1,r1,#0x28
        STR      r0,[r1,#0x24]
        STR      r0,[r1,#0x20]
        STR      r0,[r1,#0x28]
        MOVS     r1,#0
        LDR      r0,|L1.684|
        SUBS     r0,r0,#0x28
        STR      r1,[r0,#0x2c]
        MOVS     r0,#1
        LSLS     r0,r0,#28
        LDR      r1,|L1.696|
        LDR      r1,[r1,#8]
        BICS     r1,r1,r0
        LDR      r2,|L1.696|
        STR      r1,[r2,#8]
        NOP      
        MOVS     r1,#0
        MOV      r0,r1
        BL       ADC_SET_CMP_DATA
        MOVS     r1,#0
        MOVS     r0,#1
        BL       ADC_SET_CMP_DATA
        MOVS     r0,#0x1d
        BL       NVIC_DisableIRQ
        POP      {r4,pc}
        ENDP

DrvADC_EnableInt PROC
        PUSH     {r4,lr}
        MOVS     r0,#7
        BL       ADC_CLR_IF
        NOP      
        LDR      r0,|L1.684|
        SUBS     r0,r0,#0x28
        LDR      r0,[r0,#0x20]
        MOVS     r1,#2
        ORRS     r0,r0,r1
        LDR      r1,|L1.684|
        SUBS     r1,r1,#0x28
        STR      r0,[r1,#0x20]
        NOP      
        MOVS     r0,#0x1d
        BL       NVIC_EnableIRQ
        POP      {r4,pc}
        ENDP

DrvADC_DisableInt PROC
        PUSH     {r4,lr}
        NOP      
        LDR      r0,|L1.684|
        SUBS     r0,r0,#0x28
        LDR      r0,[r0,#0x20]
        MOVS     r1,#2
        BICS     r0,r0,r1
        LDR      r1,|L1.684|
        SUBS     r1,r1,#0x28
        STR      r0,[r1,#0x20]
        NOP      
        MOV      r0,r1
        LDR      r0,[r0,#0x28]
        MOVS     r1,#2
        TST      r0,r1
        BNE      |L1.342|
        LDR      r0,|L1.684|
        SUBS     r0,r0,#0x28
        LDR      r0,[r0,#0x2c]
        TST      r0,r1
        BNE      |L1.342|
        MOVS     r0,#0x1d
        BL       NVIC_DisableIRQ
|L1.342|
        POP      {r4,pc}
        ENDP

DrvADC_EnableComp0Int PROC
        PUSH     {r4,lr}
        MOVS     r0,#2
        BL       ADC_CLR_IF
        MOVS     r0,#0
        BL       ADC_CMP_INT_ENABLE
        MOVS     r0,#0x1d
        BL       NVIC_EnableIRQ
        POP      {r4,pc}
        ENDP

DrvADC_DisableComp0Int PROC
        PUSH     {r4,lr}
        MOVS     r0,#0
        BL       ADC_CMP_INT_DISABLE
        LDR      r0,|L1.684|
        SUBS     r0,r0,#0x28
        LDR      r0,[r0,#0x20]
        MOVS     r1,#2
        TST      r0,r1
        BNE      |L1.402|
        LDR      r0,|L1.684|
        SUBS     r0,r0,#0x28
        LDR      r0,[r0,#0x2c]
        TST      r0,r1
        BNE      |L1.402|
        MOVS     r0,#0x1d
        BL       NVIC_DisableIRQ
|L1.402|
        POP      {r4,pc}
        ENDP

DrvADC_EnableComp1Int PROC
        PUSH     {r4,lr}
        MOVS     r0,#4
        BL       ADC_CLR_IF
        MOVS     r0,#1
        BL       ADC_CMP_INT_ENABLE
        MOVS     r0,#0x1d
        BL       NVIC_EnableIRQ
        POP      {r4,pc}
        ENDP

DrvADC_DisableComp1Int PROC
        PUSH     {r4,lr}
        MOVS     r0,#1
        BL       ADC_CMP_INT_DISABLE
        LDR      r0,|L1.684|
        SUBS     r0,r0,#0x28
        LDR      r0,[r0,#0x20]
        MOVS     r1,#2
        TST      r0,r1
        BNE      |L1.462|
        LDR      r0,|L1.684|
        SUBS     r0,r0,#0x28
        LDR      r0,[r0,#0x28]
        TST      r0,r1
        BNE      |L1.462|
        MOVS     r0,#0x1d
        BL       NVIC_DisableIRQ
|L1.462|
        POP      {r4,pc}
        ENDP

DrvADC_EnableExtTrigger PROC
        NOP      
        LDR      r2,|L1.684|
        SUBS     r2,r2,#0x28
        LDR      r2,[r2,#0x20]
        MOVS     r3,#0x30
        BICS     r2,r2,r3
        ORRS     r2,r2,r0
        LDR      r3,|L1.684|
        SUBS     r3,r3,#0x28
        STR      r2,[r3,#0x20]
        NOP      
        NOP      
        MOV      r2,r3
        LDR      r2,[r2,#0x20]
        MOVS     r3,#0xc0
        BICS     r2,r2,r3
        ORRS     r2,r2,r1
        LDR      r3,|L1.684|
        SUBS     r3,r3,#0x28
        STR      r2,[r3,#0x20]
        NOP      
        NOP      
        MOV      r2,r3
        LDR      r2,[r2,#0x20]
        ASRS     r3,r3,#22
        ORRS     r2,r2,r3
        LDR      r3,|L1.684|
        SUBS     r3,r3,#0x28
        STR      r2,[r3,#0x20]
        NOP      
        BX       lr
        ENDP

DrvADC_EnableComp0 PROC
        PUSH     {r3-r7,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        MOV      r7,r3
        MOV      r3,r4
        MOV      r2,r7
        MOV      r1,r6
        MOVS     r0,#0
        STR      r5,[sp,#0]
        BL       ADC_SET_CMP
        MOVS     r0,#0
        BL       ADC_CMP_ENABLE
        POP      {r3-r7,pc}
        ENDP

DrvADC_EnableComp1 PROC
        PUSH     {r3-r7,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        MOV      r7,r3
        MOV      r3,r4
        MOV      r2,r7
        MOV      r1,r6
        MOVS     r0,#1
        STR      r5,[sp,#0]
        BL       ADC_SET_CMP
        MOVS     r0,#1
        BL       ADC_CMP_ENABLE
        POP      {r3-r7,pc}
        ENDP

NVIC_EnableIRQ PROC
        LSLS     r2,r0,#27
        LSRS     r2,r2,#27
        MOVS     r1,#1
        LSLS     r1,r1,r2
        LDR      r2,|L1.700|
        STR      r1,[r2,#0]
        BX       lr
        ENDP

NVIC_DisableIRQ PROC
        LSLS     r2,r0,#27
        LSRS     r2,r2,#27
        MOVS     r1,#1
        LSLS     r1,r1,r2
        LDR      r2,|L1.700|
        ADDS     r2,r2,#0x80
        STR      r1,[r2,#0]
        BX       lr
        ENDP

ADC_CMP_INT_ENABLE PROC
        LDR      r1,|L1.684|
        LSLS     r2,r0,#2
        LDR      r1,[r1,r2]
        MOVS     r2,#2
        ORRS     r1,r1,r2
        LDR      r2,|L1.684|
        LSLS     r3,r0,#2
        STR      r1,[r2,r3]
        BX       lr
        ENDP

ADC_CMP_INT_DISABLE PROC
        LDR      r1,|L1.684|
        LSLS     r2,r0,#2
        LDR      r1,[r1,r2]
        MOVS     r2,#2
        BICS     r1,r1,r2
        LDR      r2,|L1.684|
        LSLS     r3,r0,#2
        STR      r1,[r2,r3]
        BX       lr
        ENDP

ADC_CMP_ENABLE PROC
        LDR      r1,|L1.684|
        LSLS     r2,r0,#2
        LDR      r1,[r1,r2]
        MOVS     r2,#1
        ORRS     r1,r1,r2
        LDR      r2,|L1.684|
        LSLS     r3,r0,#2
        STR      r1,[r2,r3]
        BX       lr
        ENDP

ADC_CLR_IF PROC
        LDR      r1,|L1.684|
        SUBS     r1,r1,#0x28
        STR      r0,[r1,#0x30]
        BX       lr
        ENDP

        DCW      0x0000
|L1.684|
        DCD      0x400e0028
|L1.688|
        DCD      0xf0000003
|L1.692|
        DCD      0xf000ffff
|L1.696|
        DCD      0x50000200
|L1.700|
        DCD      0xe000e100

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        EXPORT DrvADC_Init [CODE]
        EXPORT DrvADC_DeInit [CODE]
        EXPORT DrvADC_EnableInt [CODE]
        EXPORT DrvADC_DisableInt [CODE]
        EXPORT DrvADC_EnableComp0Int [CODE]
        EXPORT DrvADC_DisableComp0Int [CODE]
        EXPORT DrvADC_EnableComp1Int [CODE]
        EXPORT DrvADC_DisableComp1Int [CODE]
        EXPORT DrvADC_EnableExtTrigger [CODE]
        EXPORT DrvADC_EnableComp0 [CODE]
        EXPORT DrvADC_EnableComp1 [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]

        KEEP ADC_SET_CMP
        KEEP ADC_SET_CMP_DATA
        KEEP NVIC_EnableIRQ
        KEEP NVIC_DisableIRQ
        KEEP ADC_CMP_INT_ENABLE
        KEEP ADC_CMP_INT_DISABLE
        KEEP ADC_CMP_ENABLE
        KEEP ADC_CLR_IF

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
