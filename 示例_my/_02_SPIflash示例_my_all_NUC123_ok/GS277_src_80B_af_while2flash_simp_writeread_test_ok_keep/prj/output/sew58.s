; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--min_array_alignment=4 --split_sections --debug -c --asm --info=totals -o.\output\sew58.o --depend=.\output\sew58.d --cpu=Cortex-M0 --apcs=interwork -I..\CMSIS\CM0\DeviceSupport\Nuvoton\NUC123Series -I..\CMSIS\CM0\CoreSupport -I..\INC\DrvInc -I..\INC\SysInc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -D__MICROLIB --omf_browse=.\output\sew58.crf ..\AppSrc\seW58.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i._seW58SendAllstatus||, CODE, READONLY, ALIGN=2

_seW58SendAllstatus PROC
        PUSH     {r4,lr}
        LDR      r3,|L1.88|
        LDR      r4,|L1.92|
        LDRB     r0,[r3,#0]  ; se_w3d_status
        CMP      r0,#0xa2
        BEQ      |L1.30|
        LDRB     r0,[r4,#4]  ; w3d_cmd
        ADDS     r0,r0,#1
        UXTB     r0,r0
        STRB     r0,[r4,#4]
        CMP      r0,#0xb
        BLS      |L1.40|
        MOVS     r0,#0
        STRB     r0,[r4,#1]
|L1.28|
        POP      {r4,pc}
|L1.30|
        MOVS     r2,#0
        LDR      r3,|L1.96|
        MOVS     r1,#2
        LDRB     r0,[r4,#2]  ; w58_id
        B        |L1.82|
|L1.40|
        LSLS     r2,r0,#1
        LDR      r1,|L1.88|
        ADDS     r0,r2,#1
        ADDS     r1,r1,#0x1c
        STRB     r0,[r1,#3]
        STRB     r0,[r1,#4]
        ADDS     r2,r2,#2
        STRB     r2,[r1,#2]
        MOVS     r0,#0xa2
        STRB     r0,[r3,#0]
        LDR      r0,|L1.88|
        MOVS     r1,#0
        ADDS     r0,r0,#0x1c
        BL       addI2cChain
        LDRB     r0,[r4,#2]  ; w58_id
        CMP      r0,#0xff
        BEQ      |L1.28|
        LDR      r3,|L1.96|
        MOVS     r2,#0
        MOVS     r1,#1
|L1.82|
        BL       startATask
        POP      {r4,pc}
        ENDP

|L1.88|
        DCD      ||.bss||
|L1.92|
        DCD      ||.data||
|L1.96|
        DCD      _seW58SendAllstatus

        AREA ||i.changeInputVolumeDown||, CODE, READONLY, ALIGN=2

changeInputVolumeDown PROC
        PUSH     {r2-r4,lr}
        LDR      r1,|L2.48|
        STRB     r0,[r1,#3]
        BL       getChangeVolume
        LDR      r1,|L2.48|
        MOVS     r0,#1
        ADDS     r1,r1,#5
        STR      r1,[sp,#4]
        STR      r0,[sp,#0]
        MOVS     r3,#2
        MOVS     r2,#0
        MOVS     r1,#0x90
        LDR      r0,|L2.52|
        BL       initI2cDataBlock
        LDR      r0,|L2.60|
        LDR      r3,|L2.56|
        MOVS     r2,#0
        MOVS     r1,#2
        LDRB     r0,[r0,#0]  ; sew58_id_CIC
        BL       startATask
        POP      {r2-r4,pc}
        ENDP

|L2.48|
        DCD      ||.data||
|L2.52|
        DCD      ||.bss||+0x2c
|L2.56|
        DCD      seW58ChangInputVolumeCheck
|L2.60|
        DCD      sew58_id_CIC

        AREA ||i.changeInputVolumeUp||, CODE, READONLY, ALIGN=2

changeInputVolumeUp PROC
        PUSH     {r2-r4,lr}
        LDR      r1,|L3.36|
        MOVS     r0,#2
        STRB     r0,[r1,#3]
        ADDS     r1,r1,#5
        MOVS     r0,#1
        STR      r1,[sp,#4]
        STR      r0,[sp,#0]
        MOVS     r3,#2
        MOVS     r2,#0
        MOVS     r1,#0x90
        LDR      r0,|L3.40|
        BL       initI2cDataBlock
        BL       seW58ChangInputVolumeCheck
        POP      {r2-r4,pc}
        ENDP

        DCW      0x0000
|L3.36|
        DCD      ||.data||
|L3.40|
        DCD      ||.bss||+0x2c

        AREA ||i.getChangeVolume||, CODE, READONLY, ALIGN=2

getChangeVolume PROC
        PUSH     {lr}
        LDR      r0,|L4.52|
        LDRB     r1,[r0,#3]  ; change_input_state
        MOVS     r3,r1
        BL       __ARM_common_switch8
        DCB      0x0a,0x12,0x06,0x12
        DCB      0x06,0x06,0x12,0x06
        DCB      0x06,0x12,0x06,0x12
        LDR      r1,|L4.52|
        ADDS     r1,r1,#5
        LDRB     r2,[r1,#2]  ; w3d_volume_change
        CMP      r2,#0
        BNE      |L4.48|
        MOV      r2,r1
        LDR      r3,[r0,#8]  ; w3d_volume
        ADDS     r2,r2,#0xf
        LDRB     r2,[r2,r3]
        STRB     r2,[r1,#2]
        MOVS     r1,#1
        STRB     r1,[r0,#0]
|L4.48|
        POP      {pc}
        ENDP

        DCW      0x0000
|L4.52|
        DCD      ||.data||

        AREA ||i.isMute||, CODE, READONLY, ALIGN=2

isMute PROC
        LDR      r0,|L5.8|
        LDRB     r0,[r0,#0x10]  ; se_w3d_status
        BX       lr
        ENDP

        DCW      0x0000
|L5.8|
        DCD      ||.bss||

        AREA ||i.ismute||, CODE, READONLY, ALIGN=2

ismute PROC
        LDR      r0,|L6.8|
        LDRB     r0,[r0,#0x10]  ; se_w3d_status
        BX       lr
        ENDP

        DCW      0x0000
|L6.8|
        DCD      ||.bss||

        AREA ||i.mute||, CODE, READONLY, ALIGN=1

mute PROC
        PUSH     {r4,lr}
        MOVS     r0,#1
        BL       seW58SetMute
        BL       seW58sendCmd
        MOVS     r0,#3
        BL       sysDelayMs
        POP      {r4,pc}
        ENDP


        AREA ||i.seW58AddVolume||, CODE, READONLY, ALIGN=2

seW58AddVolume PROC
        PUSH     {r2-r6,lr}
        LDR      r4,|L8.124|
        LDRB     r0,[r4,#0]  ; w3d_volume_lock
        LDRB     r1,[r4,#1]  ; w3d_lock
        ORRS     r0,r0,r1
        BNE      |L8.100|
        LDR      r5,|L8.128|
        LDRB     r0,[r5,#0]  ; se_w3d_status
        CMP      r0,#0xa2
        BEQ      |L8.102|
        LDRB     r0,[r5,#0x10]  ; se_w3d_status
        MOV      r6,r4
        ADDS     r6,r6,#0x14
        CMP      r0,#1
        BEQ      |L8.112|
        LDR      r0,[r4,#8]  ; w3d_volume
        CMP      r0,#0x1f
        BCS      |L8.100|
        LDRB     r6,[r6,r0]
        ADDS     r0,r0,#1
        STR      r0,[r4,#8]  ; w3d_volume
        MOVS     r0,#1
        STR      r0,[sp,#0]
        MOV      r0,r5
        MOVS     r3,#2
        MOVS     r2,#0
        MOVS     r1,#0x90
        STR      r5,[sp,#4]
        ADDS     r0,r0,#0x1c
        BL       initI2cDataBlock
        MOVS     r0,#0xa2
        STRB     r0,[r5,#0]
        MOVS     r0,#0
        STRB     r0,[r5,#1]
        MOV      r1,r0
        ADDS     r6,r6,#1
        MOV      r0,r5
        STRB     r6,[r5,#2]
        ADDS     r0,r0,#0x1c
        BL       addI2cChain
        LDRB     r0,[r4,#2]  ; w58_id
        CMP      r0,#0xff
        BEQ      |L8.100|
        LDR      r3,|L8.132|
        MOVS     r2,#0
        MOVS     r1,#1
|L8.96|
        BL       startATask
|L8.100|
        POP      {r2-r6,pc}
|L8.102|
        MOVS     r2,#0
        LDR      r3,|L8.136|
        MOVS     r1,#2
        LDRB     r0,[r4,#2]  ; w58_id
        B        |L8.96|
|L8.112|
        BL       w3d_mute
        LDR      r0,[r4,#8]  ; w3d_volume
        LDRB     r0,[r6,r0]
        STRB     r0,[r5,#2]
        POP      {r2-r6,pc}
        ENDP

|L8.124|
        DCD      ||.data||
|L8.128|
        DCD      ||.bss||
|L8.132|
        DCD      seW58VolumeCheck
|L8.136|
        DCD      seW58AddVolume

        AREA ||i.seW58ChangInputVolumeCheck||, CODE, READONLY, ALIGN=2

seW58ChangInputVolumeCheck PROC
        PUSH     {r1-r7,lr}
        LDR      r6,|L9.432|
        LDR      r0,|L9.436|
        LDRB     r1,[r6,#0]  ; w3d_volume_change
        LDRB     r0,[r0,#0]
        CMP      r1,#0xa0
        BEQ      |L9.52|
        CMP      r1,#0xa2
        BEQ      |L9.266|
        MOVS     r0,#1
        STR      r0,[sp,#0]
        MOVS     r3,#2
        MOVS     r2,#0
        MOVS     r1,#0x90
        STR      r6,[sp,#4]
        LDR      r0,|L9.440|
        BL       initI2cDataBlock
        MOVS     r1,#0
        LDR      r0,|L9.440|
        BL       addI2cChain
        LDR      r3,|L9.444|
|L9.46|
        MOVS     r2,#0
        MOVS     r1,#2
        B        |L9.414|
|L9.52|
        LDR      r5,|L9.432|
        LDR      r1,|L9.440|
        SUBS     r5,r5,#5
        LDRB     r7,[r5,#3]  ; change_input_state
        SUBS     r1,r1,#0x2c
        LDR      r2,|L9.448|
        LDRB     r1,[r1,#0x10]
        STR      r1,[sp,#4]
        LDR      r1,[r2,#0]
        STR      r1,[sp,#0]
        MOV      r1,r5
        LDR      r2,[r1,#8]
        ADDS     r1,r1,#5
        MOVS     r4,#0
        LDRB     r1,[r1,#2]
        MOVS     r3,r7
        BL       __ARM_common_switch8
        DCB      0x0a,0x33,0x06,0x11
        DCB      0x27,0x3f,0x5a,0x83
        DCB      0x27,0x21,0x27,0x33
        CMP      r1,#0
        BEQ      |L9.110|
        LDR      r0,[sp,#4]
        CMP      r0,#1
        BNE      |L9.208|
|L9.110|
        LDR      r0,[sp,#0]
        BL       ampSetVolume
        STRB     r4,[r6,#2]
        LDR      r3,|L9.452|
        B        |L9.46|
        LDR      r3,|L9.432|
        ADDS     r3,r3,#0xf
        LDRB     r2,[r3,r2]
        CMP      r1,r2
        BCC      |L9.282|
|L9.132|
        BL       stopATask
        LDR      r0,|L9.432|
        LDR      r1,[r5,#8]  ; w3d_volume
        ADDS     r0,r0,#0x2f
        LDRB     r0,[r0,r1]
        BL       seW58SetSubOutGain
        BL       seW58sendCmd
        B        |L9.342|
        LDR      r3,|L9.432|
        ADDS     r3,r3,#0xf
        LDRB     r2,[r3,r2]
        CMP      r1,r2
        BHI      |L9.208|
        B        |L9.132|
        CMP      r1,#0
        BNE      |L9.208|
        CMP      r7,#3
        BEQ      |L9.192|
        LDR      r0,[sp,#0]
        BL       ampSetVolume
        MOVS     r0,#2
        STRB     r0,[r5,#3]
        BL       turnUpVolume
|L9.188|
        STRB     r4,[r5,#0]
        POP      {r1-r7,pc}
|L9.192|
        MOVS     r0,#1
        BL       seW58SetMute
        BL       seW58sendCmd
        BL       powerOff
        B        |L9.188|
|L9.208|
        BL       turnDownVolume
        POP      {r1-r7,pc}
        CMP      r1,#0
        BNE      |L9.360|
        LDR      r0,|L9.432|
        STRB     r4,[r5,#1]
        ADDS     r0,r0,#0x2f
        LDRB     r0,[r0,#0]  ; w3d_sub_tbl
        BL       seW58SetSubOutGain
        BL       seW58sendCmd
        MOVS     r0,#3
        BL       sysDelayMs
        MOVS     r0,#1
        BL       seW58SetMute
        BL       seW58sendCmd
        STRB     r4,[r5,#0]
        LDR      r3,|L9.456|
        MOVS     r2,#0
        MOVS     r1,#2
        LDRB     r0,[r5,#2]  ; w58_id
        BL       startATask
        B        |L9.346|
|L9.266|
        B        |L9.424|
        CMP      r1,#0
        BEQ      |L9.288|
        LDR      r0,|L9.432|
        ADDS     r0,r0,#0xf
        LDRB     r0,[r0,r2]
        CMP      r1,r0
        BCS      |L9.312|
|L9.282|
        BL       turnUpVolume
        POP      {r1-r7,pc}
|L9.288|
        STRB     r4,[r5,#1]
        MOVS     r0,#0
        BL       seW58SetMute
        BL       seW58sendCmd
        MOVS     r0,#1
        STRB     r0,[r5,#1]
        MOVS     r0,#2
        BL       sysDelayMs
        B        |L9.282|
|L9.312|
        LDRB     r0,[r5,#2]  ; w58_id
        BL       stopATask
        STRB     r4,[r5,#1]
        LDR      r0,|L9.432|
        LDR      r1,[r5,#8]  ; w3d_volume
        ADDS     r0,r0,#0x2f
        LDRB     r0,[r0,r1]
        BL       seW58SetSubOutGain
        BL       seW58sendCmd
        MOVS     r0,#3
        BL       sysDelayMs
|L9.342|
        STRB     r4,[r6,#2]
        STRB     r4,[r5,#0]
|L9.346|
        STRB     r4,[r5,#3]
|L9.348|
        POP      {r1-r7,pc}
        CMP      r1,#0
        BEQ      |L9.366|
        LDR      r0,[sp,#4]
        CMP      r0,#1
        BEQ      |L9.366|
|L9.360|
        MOVS     r0,#1
        STRB     r0,[r5,#1]
        B        |L9.208|
|L9.366|
        STRB     r4,[r5,#1]
        STRB     r4,[r6,#2]
        LDR      r4,|L9.440|
        SUBS     r4,r4,#0x2c
        LDRB     r0,[r4,#0xc]  ; se_w3d_status
        MVNS     r0,r0
        UXTB     r0,r0
        BL       seW58SetBypass
        BL       seW58sendCmd
        MOVS     r0,#3
        BL       sysDelayMs
        BL       unMute
        LDRB     r0,[r4,#0x10]  ; se_w3d_status
        CMP      r0,#0
        BNE      |L9.348|
        MOVS     r0,#2
        LDR      r3,|L9.444|
        MOVS     r2,#0
        STRB     r0,[r5,#3]
        MOVS     r1,#3
|L9.414|
        LDR      r0,|L9.436|
        LDRB     r0,[r0,#0]  ; sew58_id_CIC
|L9.418|
        BL       startATask
        POP      {r1-r7,pc}
|L9.424|
        MOVS     r2,#0
        LDR      r3,|L9.444|
        MOVS     r1,#1
        B        |L9.418|
        ENDP

|L9.432|
        DCD      ||.data||+0x5
|L9.436|
        DCD      sew58_id_CIC
|L9.440|
        DCD      ||.bss||+0x2c
|L9.444|
        DCD      seW58ChangInputVolumeCheck
|L9.448|
        DCD      amp_volume
|L9.452|
        DCD      changeInputChannel
|L9.456|
        DCD      seW58FlasfLed

        AREA ||i.seW58DecVolume||, CODE, READONLY, ALIGN=2

seW58DecVolume PROC
        PUSH     {r2-r6,lr}
        LDR      r4,|L10.124|
        LDRB     r0,[r4,#0]  ; w3d_volume_lock
        LDRB     r1,[r4,#1]  ; w3d_lock
        ORRS     r0,r0,r1
        BNE      |L10.100|
        LDR      r5,|L10.128|
        LDRB     r0,[r5,#0]  ; se_w3d_status
        CMP      r0,#0xa2
        BEQ      |L10.102|
        LDRB     r0,[r5,#0x10]  ; se_w3d_status
        MOV      r6,r4
        ADDS     r6,r6,#0x14
        CMP      r0,#1
        BEQ      |L10.112|
        LDR      r0,[r4,#8]  ; w3d_volume
        CMP      r0,#0
        BEQ      |L10.100|
        LDRB     r6,[r6,r0]
        SUBS     r0,r0,#1
        STR      r0,[r4,#8]  ; w3d_volume
        MOVS     r0,#1
        STR      r0,[sp,#0]
        MOV      r0,r5
        MOVS     r3,#2
        MOVS     r2,#0
        MOVS     r1,#0x90
        STR      r5,[sp,#4]
        ADDS     r0,r0,#0x1c
        BL       initI2cDataBlock
        MOVS     r0,#0xa2
        STRB     r0,[r5,#0]
        MOVS     r0,#0
        STRB     r0,[r5,#1]
        MOV      r1,r0
        SUBS     r6,r6,#1
        MOV      r0,r5
        STRB     r6,[r5,#2]
        ADDS     r0,r0,#0x1c
        BL       addI2cChain
        LDRB     r0,[r4,#2]  ; w58_id
        CMP      r0,#0xff
        BEQ      |L10.100|
        LDR      r3,|L10.132|
        MOVS     r2,#0
        MOVS     r1,#2
|L10.96|
        BL       startATask
|L10.100|
        POP      {r2-r6,pc}
|L10.102|
        MOVS     r2,#0
        LDR      r3,|L10.136|
        MOVS     r1,#2
        LDRB     r0,[r4,#2]  ; w58_id
        B        |L10.96|
|L10.112|
        BL       w3d_mute
        LDR      r0,[r4,#8]  ; w3d_volume
        LDRB     r0,[r6,r0]
        STRB     r0,[r5,#2]
        POP      {r2-r6,pc}
        ENDP

|L10.124|
        DCD      ||.data||
|L10.128|
        DCD      ||.bss||
|L10.132|
        DCD      seW58VolumeCheck
|L10.136|
        DCD      seW58DecVolume

        AREA ||i.seW58DefaultVolume||, CODE, READONLY, ALIGN=2

seW58DefaultVolume PROC
        LDR      r1,|L11.16|
        MOVS     r0,#0xcd
        STRB     r0,[r1,#2]
        LDR      r1,|L11.20|
        MOVS     r0,#0
        STRB     r0,[r1,#4]
        BX       lr
        ENDP

        DCW      0x0000
|L11.16|
        DCD      ||.bss||
|L11.20|
        DCD      ||.data||

        AREA ||i.seW58FlasfLed||, CODE, READONLY, ALIGN=2

seW58FlasfLed PROC
        PUSH     {r4,lr}
        LDR      r1,|L12.28|
        MOVS     r0,#0xc
        STR      r0,[r1,#0]  ; led_flash
        LDR      r0,|L12.36|
        MOVS     r1,#0x2d
        LDR      r3,|L12.32|
        MOVS     r2,#0
        LSLS     r1,r1,#4
        LDRB     r0,[r0,#2]  ; w58_id
        BL       startATask
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L12.28|
        DCD      led_flash
|L12.32|
        DCD      seW58FlasfLed
|L12.36|
        DCD      ||.data||

        AREA ||i.seW58Getstatus||, CODE, READONLY, ALIGN=2

seW58Getstatus PROC
        PUSH     {r2-r6,lr}
        LDR      r5,|L13.80|
        LDR      r4,|L13.84|
        LDRB     r0,[r5,#0]  ; se_w3d_status
        CMP      r0,#0xa2
        BEQ      |L13.68|
        MOVS     r0,#1
        MOV      r2,r0
        STR      r0,[sp,#0]
        MOV      r0,r5
        MOVS     r3,#0x18
        MOVS     r1,#0x90
        STR      r5,[sp,#4]
        ADDS     r0,r0,#0x1c
        BL       initI2cDataBlock
        MOVS     r0,#0xa2
        STRB     r0,[r5,#0]
        MOV      r0,r5
        MOVS     r1,#0
        ADDS     r0,r0,#0x1c
        BL       addI2cChain
        LDR      r0,|L13.88|
        STR      r0,[r4,#0x10]  ; seW58send
        LDRB     r0,[r4,#2]  ; w58_id
        CMP      r0,#0xff
        BEQ      |L13.66|
        LDR      r3,|L13.92|
        MOVS     r2,#0
        MOVS     r1,#3
|L13.62|
        BL       startATask
|L13.66|
        POP      {r2-r6,pc}
|L13.68|
        MOVS     r2,#0
        LDR      r3,|L13.88|
        MOVS     r1,#2
        LDRB     r0,[r4,#2]  ; w58_id
        B        |L13.62|
        ENDP

        DCW      0x0000
|L13.80|
        DCD      ||.bss||
|L13.84|
        DCD      ||.data||
|L13.88|
        DCD      seW58Getstatus
|L13.92|
        DCD      seW58SendCheck

        AREA ||i.seW58Init||, CODE, READONLY, ALIGN=2

seW58Init PROC
        PUSH     {r4,lr}
        BL       getATask
        LDR      r1,|L14.68|
        STRB     r0,[r1,#2]
        LDR      r0,|L14.72|
        MOVS     r1,#0xa0
        STRB     r1,[r0,#0]
        MOVS     r1,#0
        STRB     r1,[r0,#1]
        MOVS     r1,#1
        STRB     r1,[r0,#3]
        MOVS     r1,#2
        STRB     r1,[r0,#5]
        MOVS     r1,#3
        STRB     r1,[r0,#7]
        MOVS     r1,#4
        STRB     r1,[r0,#9]
        MOVS     r1,#5
        STRB     r1,[r0,#0xb]
        MOVS     r1,#6
        STRB     r1,[r0,#0xd]
        MOVS     r1,#7
        STRB     r1,[r0,#0xf]
        MOVS     r1,#8
        STRB     r1,[r0,#0x11]
        MOVS     r1,#9
        STRB     r1,[r0,#0x13]
        MOVS     r1,#0xa
        STRB     r1,[r0,#0x15]
        MOVS     r1,#0xb
        STRB     r1,[r0,#0x17]
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L14.68|
        DCD      ||.data||
|L14.72|
        DCD      ||.bss||

        AREA ||i.seW58ResumeI2c||, CODE, READONLY, ALIGN=2

seW58ResumeI2c PROC
        LDR      r0,|L15.24|
        LDRB     r1,[r0,#4]  ; se_w58_i2c_block
        STRB     r1,[r0,#3]
        LDR      r1,|L15.24|
        MOVS     r0,#0xa0
        SUBS     r1,r1,#0x1c
        STRB     r0,[r1,#0]
        LDR      r0,|L15.28|
        MOVS     r1,#0
        STRB     r1,[r0,#0]
        STRB     r1,[r0,#1]
        BX       lr
        ENDP

|L15.24|
        DCD      ||.bss||+0x1c
|L15.28|
        DCD      ||.data||

        AREA ||i.seW58SendAllStatus||, CODE, READONLY, ALIGN=2

seW58SendAllStatus PROC
        PUSH     {r2-r4,lr}
        LDR      r1,|L16.48|
        MOVS     r0,#0
        STRB     r0,[r1,#4]
        MOVS     r0,#1
        STRB     r0,[r1,#1]
        STR      r0,[sp,#0]
        LDR      r1,|L16.52|
        LDR      r0,|L16.52|
        STR      r1,[sp,#4]
        MOVS     r3,#2
        MOVS     r2,#0
        MOVS     r1,#0x90
        ADDS     r0,r0,#0x1c
        BL       initI2cDataBlock
        LDR      r0,|L16.52|
        MOVS     r1,#0
        ADDS     r0,r0,#0x1c
        BL       addI2cChain
        BL       _seW58SendAllstatus
        POP      {r2-r4,pc}
        ENDP

|L16.48|
        DCD      ||.data||
|L16.52|
        DCD      ||.bss||

        AREA ||i.seW58SendCheck||, CODE, READONLY, ALIGN=2

seW58SendCheck PROC
        PUSH     {r4,lr}
        LDR      r0,|L17.52|
        LDR      r2,|L17.56|
        LDRB     r1,[r0,#0]  ; se_w3d_status
        LDRB     r0,[r2,#2]
        CMP      r1,#0xa0
        BEQ      |L17.32|
        CMP      r1,#0xa2
        BEQ      |L17.38|
        CMP      r1,#0xa3
        BNE      |L17.30|
        LDR      r0,[r2,#0x10]  ; seW58send
        CMP      r0,#0
        BEQ      |L17.30|
        BLX      r0
|L17.30|
        POP      {r4,pc}
|L17.32|
        BL       stopATask
        POP      {r4,pc}
|L17.38|
        LDR      r3,|L17.60|
        MOVS     r2,#0
        MOVS     r1,#2
        BL       startATask
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L17.52|
        DCD      ||.bss||
|L17.56|
        DCD      ||.data||
|L17.60|
        DCD      seW58SendCheck

        AREA ||i.seW58SetAmbiance||, CODE, READONLY, ALIGN=2

seW58SetAmbiance PROC
        LDR      r1,|L18.12|
        STRB     r0,[r1,#4]
        LDR      r1,|L18.16|
        MOVS     r0,#1
        STRB     r0,[r1,#4]
        BX       lr
        ENDP

|L18.12|
        DCD      ||.bss||
|L18.16|
        DCD      ||.data||

        AREA ||i.seW58SetBalance||, CODE, READONLY, ALIGN=2

seW58SetBalance PROC
        LDR      r1,|L19.12|
        STRB     r0,[r1,#6]
        LDR      r1,|L19.16|
        MOVS     r0,#2
        STRB     r0,[r1,#4]
        BX       lr
        ENDP

|L19.12|
        DCD      ||.bss||
|L19.16|
        DCD      ||.data||

        AREA ||i.seW58SetBypass||, CODE, READONLY, ALIGN=2

seW58SetBypass PROC
        LSLS     r0,r0,#31
        LDR      r1,|L20.16|
        LSRS     r0,r0,#31
        STRB     r0,[r1,#0xc]
        LDR      r1,|L20.20|
        MOVS     r0,#5
        STRB     r0,[r1,#4]
        BX       lr
        ENDP

|L20.16|
        DCD      ||.bss||
|L20.20|
        DCD      ||.data||

        AREA ||i.seW58SetBypassGain||, CODE, READONLY, ALIGN=2

seW58SetBypassGain PROC
        LDR      r1,|L21.12|
        STRB     r0,[r1,#0xe]
        LDR      r1,|L21.16|
        MOVS     r0,#6
        STRB     r0,[r1,#4]
        BX       lr
        ENDP

|L21.12|
        DCD      ||.bss||
|L21.16|
        DCD      ||.data||

        AREA ||i.seW58SetChannelCheck||, CODE, READONLY, ALIGN=2

seW58SetChannelCheck PROC
        LDR      r1,|L22.12|
        STRB     r0,[r1,#0x12]
        LDR      r1,|L22.16|
        MOVS     r0,#8
        STRB     r0,[r1,#4]
        BX       lr
        ENDP

|L22.12|
        DCD      ||.bss||
|L22.16|
        DCD      ||.data||

        AREA ||i.seW58SetClarity||, CODE, READONLY, ALIGN=2

seW58SetClarity PROC
        LDR      r1,|L23.12|
        STRB     r0,[r1,#8]
        LDR      r1,|L23.16|
        MOVS     r0,#3
        STRB     r0,[r1,#4]
        BX       lr
        ENDP

|L23.12|
        DCD      ||.bss||
|L23.16|
        DCD      ||.data||

        AREA ||i.seW58SetMute||, CODE, READONLY, ALIGN=2

seW58SetMute PROC
        LDR      r1,|L24.12|
        STRB     r0,[r1,#0x10]
        LDR      r1,|L24.16|
        MOVS     r0,#7
        STRB     r0,[r1,#4]
        BX       lr
        ENDP

|L24.12|
        DCD      ||.bss||
|L24.16|
        DCD      ||.data||

        AREA ||i.seW58SetStatus1func||, CODE, READONLY, ALIGN=2

seW58SetStatus1func PROC
        LDR      r1,|L25.12|
        STRB     r0,[r1,#0x14]
        LDR      r1,|L25.16|
        MOVS     r0,#9
        STRB     r0,[r1,#4]
        BX       lr
        ENDP

|L25.12|
        DCD      ||.bss||
|L25.16|
        DCD      ||.data||

        AREA ||i.seW58SetSubOutGain||, CODE, READONLY, ALIGN=2

seW58SetSubOutGain PROC
        LDR      r1,|L26.12|
        STRB     r0,[r1,#0xa]
        LDR      r1,|L26.16|
        MOVS     r0,#4
        STRB     r0,[r1,#4]
        BX       lr
        ENDP

|L26.12|
        DCD      ||.bss||
|L26.16|
        DCD      ||.data||

        AREA ||i.seW58SetSurroundGain||, CODE, READONLY, ALIGN=2

seW58SetSurroundGain PROC
        LDR      r1,|L27.12|
        STRB     r0,[r1,#0x16]
        LDR      r1,|L27.16|
        MOVS     r0,#0xa
        STRB     r0,[r1,#4]
        BX       lr
        ENDP

|L27.12|
        DCD      ||.bss||
|L27.16|
        DCD      ||.data||

        AREA ||i.seW58SetVolume||, CODE, READONLY, ALIGN=2

seW58SetVolume PROC
        LDR      r1,|L28.20|
        LDRB     r0,[r1,r0]
        LDR      r1,|L28.24|
        STRB     r0,[r1,#2]
        LDR      r1,|L28.20|
        MOVS     r0,#0
        SUBS     r1,r1,#0x14
        STRB     r0,[r1,#4]
        BX       lr
        ENDP

        DCW      0x0000
|L28.20|
        DCD      ||.data||+0x14
|L28.24|
        DCD      ||.bss||

        AREA ||i.seW58VolumeCheck||, CODE, READONLY, ALIGN=2

seW58VolumeCheck PROC
        PUSH     {r4-r6,lr}
        LDR      r3,|L29.124|
        LDR      r5,|L29.128|
        LDRB     r2,[r3,#0]  ; se_w3d_status
        MOV      r4,r5
        MOV      r0,r3
        SUBS     r4,r4,#0x14
        LDRB     r0,[r0,#2]
        LDR      r1,[r4,#8]
        CMP      r2,#0xa0
        BEQ      |L29.58|
        CMP      r2,#0xa2
        BEQ      |L29.50|
        CMP      r2,#0xa3
        BNE      |L29.98|
        LDRB     r1,[r5,r1]
        CMP      r0,r1
        BHI      |L29.40|
        CMP      r0,r1
        BCS      |L29.98|
|L29.40|
        LDR      r0,|L29.124|
        MOVS     r1,#0
        ADDS     r0,r0,#0x1c
        BL       addI2cChain
|L29.50|
        MOVS     r2,#0
        LDR      r3,|L29.132|
        MOVS     r1,#1
        B        |L29.92|
|L29.58|
        LDRB     r2,[r5,r1]
        CMP      r0,r2
        BLS      |L29.68|
        SUBS     r0,r0,#1
        B        |L29.74|
|L29.68|
        CMP      r0,r2
        BCS      |L29.100|
        ADDS     r0,r0,#1
|L29.74|
        STRB     r0,[r3,#2]
        LDR      r0,|L29.124|
        MOVS     r1,#0
        ADDS     r0,r0,#0x1c
        BL       addI2cChain
        LDR      r3,|L29.132|
        MOVS     r2,#0
        MOVS     r1,#2
|L29.92|
        LDRB     r0,[r4,#2]  ; w58_id
        BL       startATask
|L29.98|
        POP      {r4-r6,pc}
|L29.100|
        LDR      r0,|L29.128|
        ADDS     r0,r0,#0x20
        LDRB     r0,[r0,r1]
        BL       seW58SetSubOutGain
        BL       seW58sendCmd
        LDR      r1,|L29.136|
        MOVS     r0,#4
        STR      r0,[r1,#0]  ; led_flash
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L29.124|
        DCD      ||.bss||
|L29.128|
        DCD      ||.data||+0x14
|L29.132|
        DCD      seW58VolumeCheck
|L29.136|
        DCD      led_flash

        AREA ||i.seW58sendCmd||, CODE, READONLY, ALIGN=2

seW58sendCmd PROC
        PUSH     {r2-r4,lr}
        LDR      r0,|L30.76|
        LDRB     r1,[r0,#1]  ; w3d_lock
        CMP      r1,#1
        BEQ      |L30.60|
        LDR      r4,|L30.80|
        LDRB     r1,[r4,#0]  ; se_w3d_status
        CMP      r1,#0xa2
        BEQ      |L30.62|
        LDRB     r0,[r0,#4]  ; w3d_cmd
        MOVS     r2,#0
        LSLS     r0,r0,#1
        ADDS     r1,r0,#1
        ADDS     r0,r0,#2
        UXTB     r1,r1
        UXTB     r3,r0
        STR      r1,[sp,#0]
        MOV      r0,r4
        STR      r4,[sp,#4]
        MOVS     r1,#0x90
        ADDS     r0,r0,#0x1c
        BL       initI2cDataBlock
        MOVS     r0,#0xa2
        STRB     r0,[r4,#0]
        MOV      r0,r4
        MOVS     r1,#0
        ADDS     r0,r0,#0x1c
        BL       addI2cChain
|L30.60|
        POP      {r2-r4,pc}
|L30.62|
        LDR      r3,|L30.84|
        MOVS     r2,#0
        MOVS     r1,#2
        LDRB     r0,[r0,#2]  ; w58_id
        BL       startATask
        POP      {r2-r4,pc}
        ENDP

|L30.76|
        DCD      ||.data||
|L30.80|
        DCD      ||.bss||
|L30.84|
        DCD      seW58sendCmd

        AREA ||i.stopATask||, CODE, READONLY, ALIGN=2

stopATask PROC
        MOVS     r2,#0xc
        MULS     r0,r2,r0
        LDR      r2,|L31.16|
        MOVS     r1,#0
        ADDS     r0,r0,r2
        STRB     r1,[r0,#1]
        STR      r1,[r0,#8]
        BX       lr
        ENDP

|L31.16|
        DCD      mytask

        AREA ||i.stopFlashLed||, CODE, READONLY, ALIGN=2

stopFlashLed PROC
        PUSH     {r4,lr}
        LDR      r0,|L32.12|
        LDRB     r0,[r0,#2]  ; w58_id
        BL       stopATask
        POP      {r4,pc}
        ENDP

|L32.12|
        DCD      ||.data||

        AREA ||i.testOutputSpeakers||, CODE, READONLY, ALIGN=2

testOutputSpeakers PROC
        PUSH     {r4,lr}
        LDR      r0,|L33.28|
        LDRB     r0,[r0,#1]  ; w3d_lock
        CMP      r0,#0
        BNE      |L33.26|
        LDR      r1,|L33.36|
        LDR      r0,|L33.32|
        LDRB     r1,[r1,#0]  ; test_channel
        LDRB     r0,[r0,r1]
        BL       seW58SetChannelCheck
        BL       seW58sendCmd
|L33.26|
        POP      {r4,pc}
        ENDP

|L33.28|
        DCD      ||.data||
|L33.32|
        DCD      channelspeaker
|L33.36|
        DCD      test_channel

        AREA ||i.turnDownVolume||, CODE, READONLY, ALIGN=2

turnDownVolume PROC
        PUSH     {r4-r6,lr}
        LDR      r5,|L34.100|
        LDRB     r0,[r5,#0]  ; w3d_volume_change
        CMP      r0,#0xa0
        BNE      |L34.82|
        SUBS     r3,r5,#5
        LDR      r0,[r3,#0xc]  ; vlmtbl_index
        CMP      r0,#0
        BEQ      |L34.70|
        MOV      r4,r3
        ADDS     r4,r4,#0x14
        LDRB     r1,[r5,#2]
        MOVS     r6,#0x20
|L34.26|
        ADDS     r2,r4,r0
        SUBS     r2,r2,#0x20
        LDRB     r2,[r2,#0x1f]
        CMP      r1,r2
        BLS      |L34.56|
        LDRB     r2,[r4,r0]
        CMP      r1,r2
        BHI      |L34.56|
        ADDS     r1,r4,r0
        SUBS     r1,r1,#0x20
        LDRB     r1,[r1,#0x1f]
        STRB     r1,[r5,#2]
        CMP      r0,#1
        BLS      |L34.70|
        B        |L34.74|
|L34.56|
        CMP      r0,#1
        BNE      |L34.62|
        STR      r6,[r3,#0xc]  ; vlmtbl_index
|L34.62|
        LDR      r0,[r3,#0xc]  ; vlmtbl_index
        SUBS     r0,r0,#1
        STR      r0,[r3,#0xc]  ; vlmtbl_index
        BNE      |L34.26|
|L34.70|
        MOVS     r0,#0x1f
        STR      r0,[r3,#0xc]  ; vlmtbl_index
|L34.74|
        MOVS     r1,#1
        LDR      r0,|L34.104|
        BL       addI2cChain
|L34.82|
        LDR      r0,|L34.112|
        LDR      r3,|L34.108|
        MOVS     r2,#0
        MOVS     r1,#5
        LDRB     r0,[r0,#0]  ; sew58_id_CIC
        BL       startATask
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L34.100|
        DCD      ||.data||+0x5
|L34.104|
        DCD      ||.bss||+0x2c
|L34.108|
        DCD      seW58ChangInputVolumeCheck
|L34.112|
        DCD      sew58_id_CIC

        AREA ||i.turnUpVolume||, CODE, READONLY, ALIGN=2

turnUpVolume PROC
        PUSH     {r4-r6,lr}
        LDR      r5,|L35.84|
        LDRB     r0,[r5,#0]  ; w3d_volume_change
        CMP      r0,#0xa0
        BNE      |L35.66|
        SUBS     r3,r5,#5
        LDR      r0,[r3,#0xc]  ; vlmtbl_index
        CMP      r0,#0x1f
        BCC      |L35.22|
        MOVS     r0,#0
        STR      r0,[r3,#0xc]  ; vlmtbl_index
|L35.22|
        LDR      r4,|L35.84|
        LDRB     r1,[r5,#2]
        ADDS     r4,r4,#0xf
|L35.28|
        LDRB     r2,[r4,r0]
        CMP      r1,r2
        BCC      |L35.50|
        ADDS     r2,r4,r0
        LDRB     r2,[r2,#1]
        CMP      r1,r2
        BCS      |L35.50|
        ADDS     r0,r4,r0
        LDRB     r0,[r0,#1]
        STRB     r0,[r5,#2]
        B        |L35.58|
|L35.50|
        ADDS     r0,r0,#1
        STR      r0,[r3,#0xc]  ; vlmtbl_index
        CMP      r0,#0x1f
        BCC      |L35.28|
|L35.58|
        MOVS     r1,#1
        LDR      r0,|L35.88|
        BL       addI2cChain
|L35.66|
        LDR      r0,|L35.96|
        LDR      r3,|L35.92|
        MOVS     r2,#0
        MOVS     r1,#5
        LDRB     r0,[r0,#0]  ; sew58_id_CIC
        BL       startATask
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L35.84|
        DCD      ||.data||+0x5
|L35.88|
        DCD      ||.bss||+0x2c
|L35.92|
        DCD      seW58ChangInputVolumeCheck
|L35.96|
        DCD      sew58_id_CIC

        AREA ||i.unMute||, CODE, READONLY, ALIGN=1

unMute PROC
        PUSH     {r4,lr}
        MOVS     r0,#0
        BL       seW58SetMute
        BL       seW58sendCmd
        MOVS     r0,#3
        BL       sysDelayMs
        BL       stopFlashLed
        POP      {r4,pc}
        ENDP


        AREA ||i.w3dSwitch||, CODE, READONLY, ALIGN=2

w3dSwitch PROC
        PUSH     {r4,lr}
        LDR      r0,|L37.36|
        LDRB     r0,[r0,#1]  ; w3d_lock
        CMP      r0,#0
        BNE      |L37.30|
        MOVS     r0,#6
        BL       changeInputVolumeDown
        LDR      r0,|L37.40|
        LDRB     r1,[r0,#0xc]  ; se_w3d_status
        LDR      r0,|L37.44|
        CMP      r1,#0
        BEQ      |L37.32|
        MOVS     r1,#0
|L37.28|
        STR      r1,[r0,#0]
|L37.30|
        POP      {r4,pc}
|L37.32|
        MOVS     r1,#1
        B        |L37.28|
        ENDP

|L37.36|
        DCD      ||.data||
|L37.40|
        DCD      ||.bss||
|L37.44|
        DCD      0x500042a0

        AREA ||i.w3d_mute||, CODE, READONLY, ALIGN=2

w3d_mute PROC
        PUSH     {r4,lr}
        LDR      r0,|L38.32|
        LDRB     r0,[r0,#1]  ; w3d_lock
        CMP      r0,#0
        BNE      |L38.24|
        LDR      r0,|L38.36|
        LDRB     r0,[r0,#0x10]  ; se_w3d_status
        CMP      r0,#0
        BEQ      |L38.26|
        MOVS     r0,#5
|L38.20|
        BL       changeInputVolumeDown
|L38.24|
        POP      {r4,pc}
|L38.26|
        MOVS     r0,#4
        B        |L38.20|
        ENDP

        DCW      0x0000
|L38.32|
        DCD      ||.data||
|L38.36|
        DCD      ||.bss||

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.bss||, DATA, NOINIT, ALIGN=2

se_w3d_status
        %        28
se_w58_i2c_block
        %        16
se_w58_i2c_block_change_input
        %        16

        AREA ||.data||, DATA, ALIGN=2

w3d_volume_lock
        DCB      0x00
w3d_lock
        DCB      0x00
w58_id
        DCB      0xff
change_input_state
        DCB      0x02
w3d_cmd
        DCB      0x00
w3d_volume_change
        DCB      0xa0,0x00,0x00
w3d_volume
        DCD      0x0000001f
vlmtbl_index
        DCD      0x00000000
seW58send
        DCD      0x00000000
w3d_volume_tbl
        DCB      0x00,0x01,0x02,0x03
        DCB      0x04,0x05,0x06,0x07
        DCB      0x08,0x09,0x0a,0x0c
        DCB      0x0d,0x0e,0x0f,0x10
        DCB      0x13,0x17,0x1b,0x20
        DCB      0x26,0x2d,0x36,0x40
        DCB      0x4c,0x5a,0x6c,0x80
        DCB      0x98,0xb5,0xd7,0xff
w3d_sub_tbl
        DCB      0xff,0xff,0xff,0xff
        DCB      0xff,0xff,0xff,0xff
        DCB      0xff,0xff,0xff,0xff
        DCB      0xff,0xff,0xff,0xff
        DCB      0xff,0xff,0xff,0xff
        DCB      0xff,0xff,0xff,0xff
        DCB      0xff,0xff,0xff,0xef
        DCB      0xdf,0xcf,0xbf,0x80

        AREA ||area_number.43||, DATA, ALIGN=2

        EXPORTAS ||area_number.43||, ||.data||
w3d_volume_back
        DCD      0x00000000

        AREA ||i.__ARM_common_switch8||, COMGROUP=__ARM_common_switch8, CODE, READONLY, ALIGN=1

__ARM_common_switch8 PROC
        PUSH     {r4,r5}
        MOV      r4,lr
        SUBS     r4,r4,#1
        LDRB     r5,[r4,#0]
        ADDS     r4,r4,#1
        CMP      r3,r5
        BCS      |L229.16|
        MOV      r5,r3
|L229.16|
        LDRB     r3,[r4,r5]
        LSLS     r3,r3,#1
        ADDS     r3,r4,r3
        POP      {r4,r5}
        BX       r3
        ENDP


        EXPORT changeInputVolumeDown [CODE]
        EXPORT changeInputVolumeUp [CODE]
        EXPORT getChangeVolume [CODE]
        EXPORT isMute [CODE]
        EXPORT ismute [CODE]
        EXPORT mute [CODE]
        EXPORT seW58AddVolume [CODE]
        EXPORT seW58ChangInputVolumeCheck [CODE]
        EXPORT seW58DecVolume [CODE]
        EXPORT seW58DefaultVolume [CODE]
        EXPORT seW58FlasfLed [CODE]
        EXPORT seW58Getstatus [CODE]
        EXPORT seW58Init [CODE]
        EXPORT seW58ResumeI2c [CODE]
        EXPORT seW58SendAllStatus [CODE]
        EXPORT seW58SendCheck [CODE]
        EXPORT seW58SetAmbiance [CODE]
        EXPORT seW58SetBalance [CODE]
        EXPORT seW58SetBypass [CODE]
        EXPORT seW58SetBypassGain [CODE]
        EXPORT seW58SetChannelCheck [CODE]
        EXPORT seW58SetClarity [CODE]
        EXPORT seW58SetMute [CODE]
        EXPORT seW58SetStatus1func [CODE]
        EXPORT seW58SetSubOutGain [CODE]
        EXPORT seW58SetSurroundGain [CODE]
        EXPORT seW58SetVolume [CODE]
        EXPORT seW58VolumeCheck [CODE]
        EXPORT seW58sendCmd [CODE]
        EXPORT stopFlashLed [CODE]
        EXPORT testOutputSpeakers [CODE]
        EXPORT unMute [CODE]
        EXPORT w3dSwitch [CODE]
        EXPORT w3d_mute [CODE]
        EXPORT se_w3d_status [DATA,SIZE=25]
        EXPORT se_w58_i2c_block_change_input [DATA,SIZE=16]
        EXPORT w3d_volume_lock [DATA,SIZE=1]
        EXPORT w3d_lock [DATA,SIZE=1]
        EXPORT w58_id [DATA,SIZE=1]
        EXPORT change_input_state [DATA,SIZE=1]
        EXPORT w3d_volume_change [DATA,SIZE=3]
        EXPORT w3d_volume [DATA,SIZE=4]
        EXPORT w3d_volume_tbl [DATA,SIZE=32]
        EXPORT w3d_sub_tbl [DATA,SIZE=32]
        EXPORT w3d_volume_back [DATA,SIZE=4]
        EXPORT __ARM_common_switch8 [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT startATask [CODE]
        IMPORT initI2cDataBlock [CODE]
        IMPORT addI2cChain [CODE]
        IMPORT sew58_id_CIC [DATA]
        IMPORT sysDelayMs [CODE]
        IMPORT led_flash [DATA]
        IMPORT ampSetVolume [CODE]
        IMPORT powerOff [CODE]
        IMPORT amp_volume [DATA]
        IMPORT changeInputChannel [CODE]
        IMPORT channelspeaker [DATA]
        IMPORT test_channel [DATA]
        IMPORT getATask [CODE]
        IMPORT mytask [DATA]

        KEEP _seW58SendAllstatus
        KEEP stopATask
        KEEP turnDownVolume
        KEEP turnUpVolume
        KEEP se_w58_i2c_block
        KEEP w3d_cmd
        KEEP vlmtbl_index
        KEEP seW58send

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,3
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
