; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--min_array_alignment=4 --split_sections --debug -c --asm --info=totals -o.\output\cs8422.o --depend=.\output\cs8422.d --cpu=Cortex-M0 --apcs=interwork -I..\CMSIS\CM0\DeviceSupport\Nuvoton\NUC123Series -I..\CMSIS\CM0\CoreSupport -I..\INC\DrvInc -I..\INC\SysInc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -D__MICROLIB --omf_browse=.\output\cs8422.crf ..\AppSrc\cs8422.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.CHOOSE_AUX_INPUT||, CODE, READONLY, ALIGN=2

CHOOSE_AUX_INPUT PROC
        LDR      r1,|L1.20|
        MOVS     r0,#0
        STR      r0,[r1,#0]
        LDR      r1,|L1.20|
        SUBS     r1,r1,#0x24
        STR      r0,[r1,#0]
        MOVS     r0,#1
        SUBS     r1,r1,#4
        STR      r0,[r1,#0]
        BX       lr
        ENDP

|L1.20|
        DCD      0x50004278

        AREA ||i.CHOOSE_BT_INPUT||, CODE, READONLY, ALIGN=2

CHOOSE_BT_INPUT PROC
        LDR      r1,|L2.20|
        MOVS     r0,#0
        STR      r0,[r1,#0]
        LDR      r1,|L2.20|
        MOVS     r0,#1
        SUBS     r1,r1,#0x24
        STR      r0,[r1,#0]
        SUBS     r1,r1,#4
        STR      r0,[r1,#0]
        BX       lr
        ENDP

|L2.20|
        DCD      0x50004278

        AREA ||i.DETECT_USER_MODULE||, CODE, READONLY, ALIGN=1

DETECT_USER_MODULE PROC
        PUSH     {r4,lr}
        BL       Dwhp83CuMuDetect
        CMP      r0,#0
        BEQ      |L3.12|
        MOVS     r0,#1
|L3.12|
        POP      {r4,pc}
        ENDP


        AREA ||i.InputChannelCheck||, CODE, READONLY, ALIGN=2

InputChannelCheck PROC
        PUSH     {r4,lr}
        LDR      r0,|L4.40|
        LDR      r0,[r0,#8]  ; cs8422_i2c_block
        LDRB     r0,[r0,#0]
        CMP      r0,#0xa0
        BEQ      |L4.20|
        CMP      r0,#0xa2
        BEQ      |L4.22|
        BL       changeInputChannel
|L4.20|
        POP      {r4,pc}
|L4.22|
        LDR      r0,|L4.48|
        LDR      r3,|L4.44|
        MOVS     r2,#0
        MOVS     r1,#2
        LDRB     r0,[r0,#1]  ; sew58_id_CIC
        BL       startATask
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L4.40|
        DCD      ||.bss||
|L4.44|
        DCD      InputChannelCheck
|L4.48|
        DCD      ||area_number.24||

        AREA ||i.SYS_UnlockReg||, CODE, READONLY, ALIGN=2

SYS_UnlockReg PROC
        LDR      r0,|L5.16|
        MOVS     r1,#0x59
        STR      r1,[r0,#0]
        MOVS     r1,#0x16
        STR      r1,[r0,#0]
        MOVS     r1,#0x88
        STR      r1,[r0,#0]
        BX       lr
        ENDP

|L5.16|
        DCD      0x50000100

        AREA ||i.WDT_TIMER_RESET||, CODE, READONLY, ALIGN=2

WDT_TIMER_RESET PROC
        LDR      r0,|L6.12|
        LDR      r1,[r0,#0]
        MOVS     r2,#1
        ORRS     r1,r1,r2
        STR      r1,[r0,#0]
        BX       lr
        ENDP

|L6.12|
        DCD      0x40004000

        AREA ||i.changeInputChannel||, CODE, READONLY, ALIGN=2

changeInputChannel PROC
        PUSH     {r3-r7,lr}
        BL       mute
        MOVS     r0,#0x32
        BL       sysDelayMs
        LDR      r0,|L7.216|
        MOVS     r7,#1
        LDRB     r0,[r0,#0]  ; dev_input
        LDR      r1,|L7.220|
        LDR      r5,|L7.224|
        MOVS     r4,#0
        CMP      r0,#0
        BEQ      |L7.44|
        LDR      r6,|L7.228|
        CMP      r0,#2
        BEQ      |L7.70|
        CMP      r0,#3
        BEQ      |L7.110|
        CMP      r0,#1
        BEQ      |L7.122|
        B        |L7.184|
|L7.44|
        LDR      r0,|L7.232|
        STRB     r4,[r0,#0]
        LDR      r0,|L7.236|
        STRB     r4,[r0,#0]
        STR      r7,[r1,#0]
        BL       btStartUp
        BL       CHOOSE_BT_INPUT
        BL       cs8422SRCSourceSDIN
        STRB     r4,[r5,#0]
        B        |L7.184|
|L7.70|
        LDRB     r0,[r5,#0]  ; bt_power_flag
        CMP      r0,#0
        BNE      |L7.88|
        STR      r4,[r1,#0]
        BL       btShutDown
        MOVS     r0,#0x14
        BL       sysDelayMs
|L7.88|
        STR      r4,[r6,#0]  ; BT_MATCH_FLAG
        BL       CHOOSE_AUX_INPUT
        BL       cs8422SRCSourceSDIN
        LDR      r0,|L7.240|
        LDRB     r1,[r0,#0]  ; bt_change_name_mode
        CMP      r1,#0
        BEQ      |L7.184|
        STRB     r4,[r0,#0]
        B        |L7.184|
|L7.110|
        STR      r4,[r6,#0]  ; BT_MATCH_FLAG
        BL       cs8422AESRX2
        BL       cs8422SRCSourceAES3
        B        |L7.184|
|L7.122|
        LDRB     r0,[r5,#0]  ; bt_power_flag
        CMP      r0,#0
        BNE      |L7.142|
        STR      r4,[r1,#0]
        BL       btShutDown
        MOVS     r0,#0x64
        BL       sysDelayMs
        STRB     r7,[r5,#0]
|L7.142|
        STR      r4,[r6,#0]  ; BT_MATCH_FLAG
        BL       Dwhp83CuMuDetect
        LDR      r0,|L7.244|
        LDR      r0,[r0,#0]  ; Dwhp83_CuMu
        LDR      r1,|L7.248|
        CMP      r0,r1
        BNE      |L7.170|
        LDR      r0,|L7.252|
        LDRB     r0,[r0,#0]  ; SB_flag
        CMP      r0,#0
        BNE      |L7.170|
        BL       Dwhp83Slave
|L7.170|
        BL       CHOOSE_AUX_INPUT
        LDR      r0,|L7.220|
        ADDS     r0,r0,#0x1c
        STR      r4,[r0,#0]
        BL       cs8422SRCSourceSDIN
|L7.184|
        LDR      r0,|L7.216|
        LDR      r1,|L7.256|
        LDRB     r0,[r0,#0]  ; dev_input
        LDRB     r0,[r1,r0]
        LDR      r1,|L7.260|
        STRB     r0,[r1,#0]
        BL       ledColorSet
        BL       unMute
        BL       changeInputVolumeUp
        BL       DWHP83UnMute
        POP      {r3-r7,pc}
        ENDP

        DCW      0x0000
|L7.216|
        DCD      dev_input
|L7.220|
        DCD      0x50004234
|L7.224|
        DCD      bt_power_flag
|L7.228|
        DCD      BT_MATCH_FLAG
|L7.232|
        DCD      bt_paring_flag
|L7.236|
        DCD      NFC_flag
|L7.240|
        DCD      bt_change_name_mode
|L7.244|
        DCD      Dwhp83_CuMu
|L7.248|
        DCD      0x000055aa
|L7.252|
        DCD      SB_flag
|L7.256|
        DCD      input_channel_color
|L7.260|
        DCD      state_color

        AREA ||i.cs8422AESRX2||, CODE, READONLY, ALIGN=1

cs8422AESRX2 PROC
        PUSH     {r4,lr}
        MOVS     r1,#0xd4
        MOVS     r0,#3
        BL       cs8422SendCmd
        POP      {r4,pc}
        ENDP


        AREA ||i.cs8422AESRX3||, CODE, READONLY, ALIGN=1

cs8422AESRX3 PROC
        PUSH     {r4,lr}
        MOVS     r1,#0xfc
        MOVS     r0,#3
        BL       cs8422SendCmd
        POP      {r4,pc}
        ENDP


        AREA ||i.cs8422GetCmd||, CODE, READONLY, ALIGN=2

cs8422GetCmd PROC
        PUSH     {r2-r6,lr}
        MOV      r5,r0
        MOVS     r0,#1
        LDR      r4,|L10.64|
        MOV      r2,r0
        STR      r0,[sp,#0]
        MOVS     r3,#2
        MOVS     r1,#0x2e
        STR      r4,[sp,#4]
        LDR      r0,|L10.68|
        BL       initI2cDataBlock
        STRB     r5,[r4,#1]
        MOVS     r5,#0
        STRB     r5,[r4,#2]
        MOVS     r0,#0xa2
        STRB     r0,[r4,#0]
        MOV      r1,r5
        LDR      r0,|L10.68|
        BL       addI2cChain
|L10.42|
        LDRB     r0,[r4,#0]  ; cs8422_status
        CMP      r0,#0xa2
        BEQ      |L10.42|
        BL       SYS_UnlockReg
        BL       WDT_TIMER_RESET
        LDR      r0,|L10.72|
        STR      r5,[r0,#0]
        LDRB     r0,[r4,#2]  ; cs8422_status
        POP      {r2-r6,pc}
        ENDP

|L10.64|
        DCD      ||area_number.24||+0x3
|L10.68|
        DCD      ||.bss||
|L10.72|
        DCD      0x50000100

        AREA ||i.cs8422I2sLeftJust||, CODE, READONLY, ALIGN=1

cs8422I2sLeftJust PROC
        PUSH     {r4,lr}
        MOVS     r1,#0
        MOVS     r0,#0xb
        BL       cs8422SendCmd
        POP      {r4,pc}
        ENDP


        AREA ||i.cs8422I2sStand||, CODE, READONLY, ALIGN=1

cs8422I2sStand PROC
        PUSH     {r4,lr}
        MOVS     r1,#8
        MOVS     r0,#0xb
        BL       cs8422SendCmd
        POP      {r4,pc}
        ENDP


        AREA ||i.cs8422Init||, CODE, READONLY, ALIGN=2

cs8422Init PROC
        PUSH     {r4,lr}
        BL       getATask
        LDR      r4,|L13.20|
        STRB     r0,[r4,#0]
        BL       getATask
        STRB     r0,[r4,#1]
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L13.20|
        DCD      ||area_number.24||

        AREA ||i.cs8422InitAllConf||, CODE, READONLY, ALIGN=2

cs8422InitAllConf PROC
        PUSH     {r4-r6,lr}
        MOVS     r1,#0
        MOVS     r0,#2
        BL       cs8422SendCmd
        MOVS     r1,#0xc4
        MOVS     r0,#3
        BL       cs8422SendCmd
        MOVS     r1,#4
        MOV      r0,r1
        BL       cs8422SendCmd
        MOVS     r1,#0x40
        MOVS     r0,#8
        BL       cs8422SendCmd
        MOVS     r1,#8
        MOVS     r0,#9
        BL       cs8422SendCmd
        MOVS     r1,#0
        MOVS     r0,#0xa
        BL       cs8422SendCmd
        MOVS     r1,#8
        MOVS     r0,#0xb
        BL       cs8422SendCmd
        MOVS     r1,#4
        MOVS     r0,#0xc
        BL       cs8422SendCmd
        BL       getMuAddr
        LDR      r5,|L14.208|
        LDRB     r0,[r5,#0]  ; dev_input
        CMP      r0,#0
        BEQ      |L14.96|
        LDR      r6,|L14.212|
        MOVS     r4,#0
        CMP      r0,#2
        BEQ      |L14.108|
        CMP      r0,#3
        BEQ      |L14.126|
        CMP      r0,#1
        BEQ      |L14.148|
        B        |L14.190|
|L14.96|
        MOVS     r0,#0x14
        BL       sysDelayMs
        BL       CHOOSE_BT_INPUT
        B        |L14.186|
|L14.108|
        BL       btShutDown
        MOVS     r0,#0x14
        BL       sysDelayMs
        STR      r4,[r6,#0]  ; BT_MATCH_FLAG
        BL       CHOOSE_AUX_INPUT
        B        |L14.186|
|L14.126|
        BL       btShutDown
        MOVS     r0,#0x14
        BL       sysDelayMs
        STR      r4,[r6,#0]  ; BT_MATCH_FLAG
        BL       cs8422AESRX2
        BL       cs8422SRCSourceAES3
        B        |L14.190|
|L14.148|
        BL       btShutDown
        MOVS     r0,#0x14
        BL       sysDelayMs
        STR      r4,[r6,#0]  ; BT_MATCH_FLAG
        BL       Dwhp83CuMuDetect
        LDR      r0,|L14.216|
        LDR      r0,[r0,#0]  ; Dwhp83_CuMu
        LDR      r1,|L14.220|
        CMP      r0,r1
        BNE      |L14.178|
        BL       Dwhp83Slave
|L14.178|
        BL       CHOOSE_AUX_INPUT
        LDR      r0,|L14.224|
        STR      r4,[r0,#0]
|L14.186|
        BL       cs8422SRCSourceSDIN
|L14.190|
        LDR      r0,|L14.228|
        LDRB     r1,[r5,#0]  ; dev_input
        LDRB     r0,[r0,r1]
        LDR      r1,|L14.232|
        STRB     r0,[r1,#0]
        BL       ledColorSet
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L14.208|
        DCD      dev_input
|L14.212|
        DCD      BT_MATCH_FLAG
|L14.216|
        DCD      Dwhp83_CuMu
|L14.220|
        DCD      0x000055aa
|L14.224|
        DCD      0x50004250
|L14.228|
        DCD      input_channel_color
|L14.232|
        DCD      state_color

        AREA ||i.cs8422SRCSourceAES3||, CODE, READONLY, ALIGN=1

cs8422SRCSourceAES3 PROC
        PUSH     {r4,lr}
        MOVS     r1,#2
        MOVS     r0,#0xa
        BL       cs8422SendCmd
        POP      {r4,pc}
        ENDP


        AREA ||i.cs8422SRCSourceSDIN||, CODE, READONLY, ALIGN=1

cs8422SRCSourceSDIN PROC
        PUSH     {r4,lr}
        MOVS     r1,#0
        MOVS     r0,#0xa
        BL       cs8422SendCmd
        POP      {r4,pc}
        ENDP


        AREA ||i.cs8422SendCmd||, CODE, READONLY, ALIGN=2

cs8422SendCmd PROC
        PUSH     {r2-r6,lr}
        MOV      r5,r0
        MOVS     r0,#1
        MOV      r6,r1
        LDR      r4,|L17.64|
        STR      r0,[sp,#0]
        MOVS     r3,#2
        MOVS     r2,#0
        MOVS     r1,#0x2e
        STR      r4,[sp,#4]
        LDR      r0,|L17.68|
        BL       initI2cDataBlock
        STRB     r5,[r4,#1]
        STRB     r6,[r4,#2]
        MOVS     r0,#0xa2
        STRB     r0,[r4,#0]
        MOVS     r1,#0
        LDR      r0,|L17.68|
        BL       addI2cChain
|L17.42|
        LDRB     r0,[r4,#0]  ; cs8422_status
        CMP      r0,#0xa2
        BEQ      |L17.42|
        BL       SYS_UnlockReg
        BL       WDT_TIMER_RESET
        LDR      r1,|L17.72|
        MOVS     r0,#0
        STR      r0,[r1,#0]
        POP      {r2-r6,pc}
        ENDP

|L17.64|
        DCD      ||area_number.24||+0x3
|L17.68|
        DCD      ||.bss||
|L17.72|
        DCD      0x50000100

        AREA ||i.getMuAddr||, CODE, READONLY, ALIGN=2

getMuAddr PROC
        PUSH     {r4,lr}
        BL       CHOOSE_AUX_INPUT
        BL       cs8422SRCSourceSDIN
        LDR      r0,|L18.44|
        BL       sysDelayMs
        LDR      r0,|L18.48|
        LDR      r1,|L18.52|
        LDR      r0,[r0,#0]  ; sum_H
        LSLS     r0,r0,#8
        LSRS     r0,r0,#16
        STRH     r0,[r1,#0]
        CMP      r0,#8
        BCS      |L18.42|
        MOVS     r2,#3
        LSLS     r0,r0,#8
        LSLS     r2,r2,#8
        ADDS     r0,r0,r2
        STRH     r0,[r1,#0]
|L18.42|
        POP      {r4,pc}
        ENDP

|L18.44|
        DCD      0x000005dc
|L18.48|
        DCD      sum_H
|L18.52|
        DCD      mu_addr

        AREA ||i.getNextInput||, CODE, READONLY, ALIGN=2

getNextInput PROC
        PUSH     {r4-r6,lr}
        BL       DETECT_USER_MODULE
        MOVS     r4,#0
        MOVS     r3,#2
        LDR      r1,|L19.96|
        MOVS     r5,#3
        LDR      r6,|L19.100|
        CMP      r0,#0
        LDR      r2,|L19.104|
        LDRB     r0,[r1,#0]  ; total_input_channel
        STRB     r0,[r6,#2]
        BEQ      |L19.66|
        MOVS     r0,#4
        STR      r0,[r1,#0]  ; total_input_channel
        LDRB     r0,[r2,#0]  ; dev_input
        CMP      r0,#0
        BEQ      |L19.50|
        CMP      r0,#1
        BEQ      |L19.54|
        CMP      r0,#2
        BEQ      |L19.58|
        CMP      r0,#3
        BNE      |L19.86|
        B        |L19.62|
|L19.50|
        MOVS     r0,#1
        B        |L19.90|
|L19.54|
        MOV      r0,r3
        B        |L19.90|
|L19.58|
        MOV      r0,r5
        B        |L19.90|
|L19.62|
        MOV      r0,r4
        B        |L19.90|
|L19.66|
        STR      r5,[r1,#0]  ; total_input_channel
        LDRB     r1,[r2,#0]  ; dev_input
        MOV      r0,r5
        CMP      r1,#0
        BEQ      |L19.54|
        CMP      r1,#2
        BEQ      |L19.90|
        CMP      r1,#3
        BEQ      |L19.62|
        STRB     r3,[r2,#0]
|L19.86|
        MOVS     r0,#0
        POP      {r4-r6,pc}
|L19.90|
        STRB     r0,[r2,#0]
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L19.96|
        DCD      total_input_channel
|L19.100|
        DCD      ||area_number.24||
|L19.104|
        DCD      dev_input

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.bss||, DATA, NOINIT, ALIGN=2

cs8422_i2c_block
        %        16

        AREA ||.data||, DATA, ALIGN=2

cs8422_input_table
        DCB      0x00,0x02,0x03,0x01

        AREA ||area_number.24||, DATA, ALIGN=0

        EXPORTAS ||area_number.24||, ||.data||
cs8422_id
        DCB      0xff
sew58_id_CIC
        DCB      0xff
last_user_module
        DCB      0x04
cs8422_status
        DCB      0x00
        DCB      0x00,0x00

        AREA ||area_number.25||, DATA, ALIGN=0

        EXPORTAS ||area_number.25||, ||.data||
cs8422_input
        DCB      0x00

        EXPORT DETECT_USER_MODULE [CODE]
        EXPORT InputChannelCheck [CODE]
        EXPORT changeInputChannel [CODE]
        EXPORT cs8422AESRX2 [CODE]
        EXPORT cs8422AESRX3 [CODE]
        EXPORT cs8422GetCmd [CODE]
        EXPORT cs8422I2sLeftJust [CODE]
        EXPORT cs8422I2sStand [CODE]
        EXPORT cs8422Init [CODE]
        EXPORT cs8422InitAllConf [CODE]
        EXPORT cs8422SRCSourceAES3 [CODE]
        EXPORT cs8422SRCSourceSDIN [CODE]
        EXPORT cs8422SendCmd [CODE]
        EXPORT getMuAddr [CODE]
        EXPORT getNextInput [CODE]
        EXPORT cs8422_input_table [DATA,SIZE=4]
        EXPORT cs8422_id [DATA,SIZE=1]
        EXPORT sew58_id_CIC [DATA,SIZE=1]
        EXPORT last_user_module [DATA,SIZE=1]
        EXPORT cs8422_status [DATA,SIZE=3]
        EXPORT cs8422_input [DATA,SIZE=1]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT initI2cDataBlock [CODE]
        IMPORT addI2cChain [CODE]
        IMPORT sysDelayMs [CODE]
        IMPORT sum_H [DATA]
        IMPORT mu_addr [DATA]
        IMPORT btShutDown [CODE]
        IMPORT Dwhp83CuMuDetect [CODE]
        IMPORT Dwhp83Slave [CODE]
        IMPORT ledColorSet [CODE]
        IMPORT dev_input [DATA]
        IMPORT BT_MATCH_FLAG [DATA]
        IMPORT Dwhp83_CuMu [DATA]
        IMPORT input_channel_color [DATA]
        IMPORT state_color [DATA]
        IMPORT total_input_channel [DATA]
        IMPORT mute [CODE]
        IMPORT btStartUp [CODE]
        IMPORT unMute [CODE]
        IMPORT changeInputVolumeUp [CODE]
        IMPORT DWHP83UnMute [CODE]
        IMPORT bt_power_flag [DATA]
        IMPORT bt_paring_flag [DATA]
        IMPORT NFC_flag [DATA]
        IMPORT bt_change_name_mode [DATA]
        IMPORT SB_flag [DATA]
        IMPORT startATask [CODE]
        IMPORT getATask [CODE]

        KEEP CHOOSE_AUX_INPUT
        KEEP CHOOSE_BT_INPUT
        KEEP SYS_UnlockReg
        KEEP WDT_TIMER_RESET
        KEEP cs8422_i2c_block

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,3
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
