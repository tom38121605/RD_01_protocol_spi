; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--min_array_alignment=4 --split_sections --debug -c --asm --info=totals -o.\output\systimertask.o --depend=.\output\systimertask.d --cpu=Cortex-M0 --apcs=interwork -I..\CMSIS\CM0\DeviceSupport\Nuvoton\NUC123Series -I..\CMSIS\CM0\CoreSupport -I..\INC\DrvInc -I..\INC\SysInc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -D__MICROLIB --omf_browse=.\output\systimertask.crf ..\AppSrc\SysTimerTask.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.SYS_UnlockReg||, CODE, READONLY, ALIGN=2

SYS_UnlockReg PROC
        LDR      r0,|L1.16|
        MOVS     r1,#0x59
        STR      r1,[r0,#0]
        MOVS     r1,#0x16
        STR      r1,[r0,#0]
        MOVS     r1,#0x88
        STR      r1,[r0,#0]
        BX       lr
        ENDP

|L1.16|
        DCD      0x50000100

        AREA ||i.SysTick_Handler||, CODE, READONLY, ALIGN=2

SysTick_Handler PROC
        PUSH     {r4-r6,lr}
        LDR      r5,|L2.108|
        LDR      r0,[r5,#0]  ; systick_counter
        ADDS     r0,r0,#1
        STR      r0,[r5,#0]  ; systick_counter
        LDR      r6,|L2.112|
        MOVS     r4,#0
|L2.14|
        MOV      r0,r4
        MOVS     r1,#0xc
        MULS     r0,r1,r0
        MOV      r2,r0
        ADDS     r0,r0,r6
        LDRB     r1,[r0,#1]
        CMP      r1,#0
        BEQ      |L2.56|
        LDR      r1,[r0,#4]
        CMP      r1,#0
        BEQ      |L2.42|
        SUBS     r1,r1,#1
        STR      r1,[r0,#4]
        BNE      |L2.56|
|L2.42|
        LDRB     r1,[r6,r2]
        CMP      r1,#0
        BEQ      |L2.56|
        LDR      r0,[r0,#8]
        CMP      r0,#0
        BEQ      |L2.56|
        BLX      r0
|L2.56|
        ADDS     r4,r4,#1
        CMP      r4,#0xa
        BCC      |L2.14|
        LDR      r0,|L2.116|
        LDR      r1,[r0,#0x20]
        MOVS     r2,#1
        LSLS     r2,r2,#11
        ORRS     r1,r1,r2
        STR      r1,[r0,#0x20]
        BL       i2cSpirit
        LDR      r1,|L2.120|
        LDR      r0,[r5,#0xc]  ; audio_L
        LDR      r2,[r1,#0]  ; audio_detect_L
        ADDS     r0,r0,r2
        STR      r0,[r5,#0xc]  ; audio_L
        LDR      r2,|L2.124|
        LDR      r0,[r5,#0x10]  ; audio_R
        LDR      r3,[r2,#0]  ; audio_detect_R
        ADDS     r0,r0,r3
        STR      r0,[r5,#0x10]  ; audio_R
        MOVS     r0,#0
        STR      r0,[r2,#0]  ; audio_detect_R
        STR      r0,[r1,#0]  ; audio_detect_L
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L2.108|
        DCD      ||.data||
|L2.112|
        DCD      ||.bss||
|L2.116|
        DCD      0x400e0000
|L2.120|
        DCD      audio_detect_L
|L2.124|
        DCD      audio_detect_R

        AREA ||i.WDT_TIMER_RESET||, CODE, READONLY, ALIGN=2

WDT_TIMER_RESET PROC
        LDR      r0,|L3.12|
        LDR      r1,[r0,#0]
        MOVS     r2,#1
        ORRS     r1,r1,r2
        STR      r1,[r0,#0]
        BX       lr
        ENDP

|L3.12|
        DCD      0x40004000

        AREA ||i.getATask||, CODE, READONLY, ALIGN=2

getATask PROC
        LDR      r1,|L4.40|
        MOVS     r0,#0
|L4.4|
        MOVS     r2,#0xc
        MULS     r2,r0,r2
        ADDS     r2,r2,r1
        LDRB     r2,[r2,#2]
        CMP      r2,#0
        BEQ      |L4.28|
        ADDS     r0,r0,#1
        UXTB     r0,r0
        CMP      r0,#0xa
        BCC      |L4.4|
        MOVS     r0,#0xff
        BX       lr
|L4.28|
        MOVS     r2,#0xc
        MOVS     r3,#1
        MULS     r2,r0,r2
        ADDS     r1,r2,r1
        STRB     r3,[r1,#2]
        BX       lr
        ENDP

|L4.40|
        DCD      ||.bss||

        AREA ||i.runTimedTasks||, CODE, READONLY, ALIGN=2

runTimedTasks PROC
        PUSH     {r4-r6,lr}
        MOVS     r4,#0
        LDR      r5,|L5.52|
        MOV      r6,r4
|L5.8|
        MOVS     r1,#0xc
        MULS     r1,r4,r1
        ADDS     r0,r1,r5
        LDRB     r2,[r0,#1]
        CMP      r2,#0
        BEQ      |L5.42|
        LDR      r2,[r0,#4]
        CMP      r2,#0
        BNE      |L5.42|
        LDRB     r1,[r5,r1]
        CMP      r1,#0
        BNE      |L5.42|
        STRB     r6,[r0,#1]
        LDR      r0,[r0,#8]
        CMP      r0,#0
        BEQ      |L5.42|
        BLX      r0
|L5.42|
        ADDS     r4,r4,#1
        CMP      r4,#0xa
        BCC      |L5.8|
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L5.52|
        DCD      ||.bss||

        AREA ||i.startATask||, CODE, READONLY, ALIGN=2

startATask PROC
        PUSH     {r4-r6,lr}
        LDR      r4,|L6.44|
        LDR      r6,[r4,#0x10]
        MOVS     r5,#2
        BICS     r6,r6,r5
        STR      r6,[r4,#0x10]
        NOP      
        NOP      
        MOVS     r6,#0xc
        MULS     r0,r6,r0
        LDR      r6,|L6.48|
        STRB     r2,[r6,r0]
        ADDS     r0,r0,r6
        STR      r3,[r0,#8]
        STR      r1,[r0,#4]
        MOVS     r1,#1
        STRB     r1,[r0,#1]
        LDR      r0,[r4,#0x10]
        ORRS     r0,r0,r5
        STR      r0,[r4,#0x10]
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L6.44|
        DCD      0xe000e000
|L6.48|
        DCD      ||.bss||

        AREA ||i.sysDelayAMs||, CODE, READONLY, ALIGN=2

sysDelayAMs PROC
        PUSH     {r4-r6,lr}
        LDR      r1,|L7.56|
        MOVS     r5,#0
        STR      r5,[r1,#0x18]
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        LDR      r4,|L7.60|
        LDR      r1,[r4,#0]  ; systick_counter
        LDR      r6,|L7.64|
        ADDS     r0,r1,r0
        STR      r0,[r4,#4]  ; sys_delay_counter
        B        |L7.46|
|L7.36|
        BL       SYS_UnlockReg
        BL       WDT_TIMER_RESET
        STR      r5,[r6,#0]
|L7.46|
        LDR      r1,[r4,#0]  ; systick_counter
        LDR      r0,[r4,#4]  ; sys_delay_counter
        CMP      r0,r1
        BHI      |L7.36|
        POP      {r4-r6,pc}
        ENDP

|L7.56|
        DCD      0xe000e000
|L7.60|
        DCD      ||.data||
|L7.64|
        DCD      0x50000100

        AREA ||i.sysDelayMs||, CODE, READONLY, ALIGN=2

sysDelayMs PROC
        PUSH     {r4-r6,lr}
        LDR      r4,|L8.36|
        LDR      r1,[r4,#0]  ; systick_counter
        LDR      r6,|L8.40|
        ADDS     r0,r1,r0
        MOVS     r5,#0
        STR      r0,[r4,#4]  ; sys_delay_counter
        B        |L8.26|
|L8.16|
        BL       SYS_UnlockReg
        BL       WDT_TIMER_RESET
        STR      r5,[r6,#0]
|L8.26|
        LDR      r1,[r4,#0]  ; systick_counter
        LDR      r0,[r4,#4]  ; sys_delay_counter
        CMP      r0,r1
        BCS      |L8.16|
        POP      {r4-r6,pc}
        ENDP

|L8.36|
        DCD      ||.data||
|L8.40|
        DCD      0x50000100

        AREA ||i.sysDelayUs||, CODE, READONLY, ALIGN=2

sysDelayUs PROC
        LDR      r1,|L9.32|
        MOVS     r3,#0
        B        |L9.24|
|L9.6|
        SUBS     r0,r0,#1
        STR      r3,[r1,#8]  ; delay_us
        B        |L9.18|
|L9.12|
        LDR      r2,[r1,#8]  ; delay_us
        ADDS     r2,r2,#1
        STR      r2,[r1,#8]  ; delay_us
|L9.18|
        LDR      r2,[r1,#8]  ; delay_us
        CMP      r2,#5
        BCC      |L9.12|
|L9.24|
        CMP      r0,#0
        BNE      |L9.6|
        BX       lr
        ENDP

        DCW      0x0000
|L9.32|
        DCD      ||.data||

        AREA ||i.sysTaskInit||, CODE, READONLY, ALIGN=2

sysTaskInit PROC
        MOVS     r0,#0
        LDR      r3,|L10.32|
        MOV      r2,r0
|L10.6|
        MOVS     r1,#0xc
        MULS     r1,r0,r1
        STRB     r2,[r3,r1]
        ADDS     r1,r1,r3
        STRB     r2,[r1,#1]
        STRB     r2,[r1,#2]
        STR      r2,[r1,#4]
        ADDS     r0,r0,#1
        STR      r2,[r1,#8]
        CMP      r0,#0xa
        BCC      |L10.6|
        BX       lr
        ENDP

        DCW      0x0000
|L10.32|
        DCD      ||.bss||

        AREA ||i.taskFlush||, CODE, READONLY, ALIGN=2

taskFlush PROC
        MOVS     r0,#0
        LDR      r3,|L11.28|
        MOV      r2,r0
|L11.6|
        MOVS     r1,#0xc
        MULS     r1,r0,r1
        ADDS     r1,r1,r3
        STRB     r2,[r1,#1]
        ADDS     r0,r0,#1
        STR      r2,[r1,#8]
        UXTB     r0,r0
        STRB     r2,[r1,#2]
        CMP      r0,#0xa
        BCC      |L11.6|
        BX       lr
        ENDP

|L11.28|
        DCD      ||.bss||

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.bss||, DATA, NOINIT, ALIGN=2

mytask
        %        120

        AREA ||.data||, DATA, ALIGN=2

systick_counter
        DCD      0x00000000
sys_delay_counter
        DCD      0x00000000
delay_us
        DCD      0x00000000
audio_L
        DCD      0x00000000
audio_R
        DCD      0x00000000

        EXPORT SysTick_Handler [CODE]
        EXPORT getATask [CODE]
        EXPORT runTimedTasks [CODE]
        EXPORT startATask [CODE]
        EXPORT sysDelayAMs [CODE]
        EXPORT sysDelayMs [CODE]
        EXPORT sysDelayUs [CODE]
        EXPORT sysTaskInit [CODE]
        EXPORT taskFlush [CODE]
        EXPORT mytask [DATA,SIZE=120]
        EXPORT systick_counter [DATA,SIZE=4]
        EXPORT delay_us [DATA,SIZE=4]
        EXPORT audio_L [DATA,SIZE=4]
        EXPORT audio_R [DATA,SIZE=4]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT i2cSpirit [CODE]
        IMPORT audio_detect_L [DATA]
        IMPORT audio_detect_R [DATA]

        KEEP SYS_UnlockReg
        KEEP WDT_TIMER_RESET
        KEEP sys_delay_counter

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,3
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
