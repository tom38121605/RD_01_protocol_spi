; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--min_array_alignment=4 --split_sections --debug -c --asm --info=totals -o.\output\pcm5121.o --depend=.\output\pcm5121.d --cpu=Cortex-M0 --apcs=interwork -I..\CMSIS\CM0\DeviceSupport\Nuvoton\NUC123Series -I..\CMSIS\CM0\CoreSupport -I..\INC\DrvInc -I..\INC\SysInc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -D__MICROLIB --omf_browse=.\output\pcm5121.crf ..\AppSrc\pcm5121.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.pcm5121Init||, CODE, READONLY, ALIGN=1

pcm5121Init PROC
        PUSH     {r4,lr}
        MOVS     r1,#0
        MOVS     r0,#0x3c
        BL       pcmSendCmd
        MOVS     r1,#0xbb
        MOVS     r0,#0x3f
        BL       pcmSendCmd
        MOVS     r1,#0xb0
        MOVS     r0,#0x40
        BL       pcmSendCmd
        MOVS     r1,#0
        MOVS     r0,#0x41
        BL       pcmSendCmd
        POP      {r4,pc}
        ENDP


        AREA ||i.pcm5121SetVolume||, CODE, READONLY, ALIGN=2

pcm5121SetVolume PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOVS     r1,#0
        MOV      r0,r1
        BL       pcmSendCmd
        LDR      r5,|L2.40|
        LDRB     r0,[r5,r4]
        ADDS     r0,r0,#2
        UXTB     r1,r0
        MOVS     r0,#0x3d
        BL       pcmSendCmd
        LDRB     r0,[r5,r4]
        ADDS     r0,r0,#2
        UXTB     r1,r0
        MOVS     r0,#0x3e
        BL       pcmSendCmd
        POP      {r4-r6,pc}
        ENDP

|L2.40|
        DCD      ||.data||

        AREA ||i.pcmGetData||, CODE, READONLY, ALIGN=2

pcmGetData PROC
        PUSH     {r2-r6,lr}
        MOV      r5,r0
        MOVS     r0,#1
        LDR      r4,|L3.68|
        MOV      r2,r0
        STR      r0,[sp,#0]
        MOV      r0,r4
        MOVS     r3,#2
        MOVS     r1,#0x9e
        STR      r4,[sp,#4]
        SUBS     r0,r0,#0x10
        BL       initI2cDataBlock
        STRB     r5,[r4,#1]
        MOVS     r0,#0
        STRB     r0,[r4,#2]
        MOVS     r0,#0xa2
        STRB     r0,[r4,#0]
        MOV      r0,r4
        MOVS     r1,#0
        SUBS     r0,r0,#0x10
        BL       addI2cChain
|L3.46|
        LDRB     r0,[r4,#0]  ; pcm_status
        CMP      r0,#0xa2
        BEQ      |L3.46|
        LDRB     r0,[r4,#0]  ; pcm_status
        CMP      r0,#0xa0
        BEQ      |L3.62|
        MOVS     r0,#0
        POP      {r2-r6,pc}
|L3.62|
        MOVS     r0,#1
        POP      {r2-r6,pc}
        ENDP

        DCW      0x0000
|L3.68|
        DCD      ||.bss||+0x10

        AREA ||i.pcmReadBuf||, CODE, READONLY, ALIGN=2

pcmReadBuf PROC
        PUSH     {r2-r6,lr}
        MOV      r5,r0
        MOVS     r0,#1
        LDR      r4,|L4.68|
        ADDS     r1,r1,#1
        MOV      r2,r0
        STR      r0,[sp,#0]
        UXTB     r3,r1
        MOV      r0,r4
        MOVS     r1,#0x9e
        STR      r4,[sp,#4]
        SUBS     r0,r0,#0x10
        BL       initI2cDataBlock
        MOVS     r0,#0x80
        ORRS     r5,r5,r0
        STRB     r5,[r4,#1]
        MOVS     r0,#0xa2
        STRB     r0,[r4,#0]
        MOV      r0,r4
        MOVS     r1,#0
        SUBS     r0,r0,#0x10
        BL       addI2cChain
|L4.48|
        LDRB     r0,[r4,#0]  ; pcm_status
        CMP      r0,#0xa2
        BEQ      |L4.48|
        LDRB     r0,[r4,#0]  ; pcm_status
        CMP      r0,#0xa0
        BEQ      |L4.64|
        MOVS     r0,#0
        POP      {r2-r6,pc}
|L4.64|
        MOVS     r0,#1
        POP      {r2-r6,pc}
        ENDP

|L4.68|
        DCD      ||.bss||+0x10

        AREA ||i.pcmSendCmd||, CODE, READONLY, ALIGN=2

pcmSendCmd PROC
        PUSH     {r2-r6,lr}
        MOV      r5,r0
        LDR      r4,|L5.56|
        MOVS     r0,#1
        STR      r0,[sp,#0]
        MOV      r6,r1
        MOV      r0,r4
        MOVS     r3,#2
        MOVS     r2,#0
        MOVS     r1,#0x9e
        STR      r4,[sp,#4]
        SUBS     r0,r0,#0x10
        BL       initI2cDataBlock
        STRB     r5,[r4,#1]
        STRB     r6,[r4,#2]
        MOVS     r0,#0xa2
        STRB     r0,[r4,#0]
        MOV      r0,r4
        MOVS     r1,#0
        SUBS     r0,r0,#0x10
        BL       addI2cChain
|L5.46|
        LDRB     r0,[r4,#0]  ; pcm_status
        CMP      r0,#0xa2
        BEQ      |L5.46|
        POP      {r2-r6,pc}
        ENDP

        DCW      0x0000
|L5.56|
        DCD      ||.bss||+0x10

        AREA ||i.pcmWriteBuf||, CODE, READONLY, ALIGN=2

pcmWriteBuf PROC
        PUSH     {r1-r7,lr}
        MOV      r7,r0
        MOVS     r0,#1
        STR      r0,[sp,#0]
        ADDS     r0,r1,#1
        LDR      r5,|L6.88|
        UXTB     r3,r0
        MOV      r6,r2
        MOV      r4,r1
        MOV      r0,r5
        STR      r5,[sp,#4]
        MOVS     r2,#0
        MOVS     r1,#0x9e
        SUBS     r0,r0,#0x10
        BL       initI2cDataBlock
        MOVS     r0,#0x80
        ORRS     r7,r7,r0
        STRB     r7,[r5,#1]
        MOVS     r0,#0xa2
        STRB     r0,[r5,#0]
        B        |L6.52|
|L6.44|
        SUBS     r4,r4,#1
        LDRB     r0,[r6,r4]
        ADDS     r1,r5,r4
        STRB     r0,[r1,#2]
|L6.52|
        CMP      r4,#0
        BNE      |L6.44|
        LDR      r0,|L6.88|
        MOVS     r1,#0
        SUBS     r0,r0,#0x10
        BL       addI2cChain
|L6.66|
        LDRB     r0,[r5,#0]  ; pcm_status
        CMP      r0,#0xa2
        BEQ      |L6.66|
        LDRB     r0,[r5,#0]  ; pcm_status
        CMP      r0,#0xa0
        BEQ      |L6.82|
        MOVS     r0,#0
        POP      {r1-r7,pc}
|L6.82|
        MOVS     r0,#1
        POP      {r1-r7,pc}
        ENDP

        DCW      0x0000
|L6.88|
        DCD      ||.bss||+0x10

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.bss||, DATA, NOINIT, ALIGN=2

pcm_i2c_block
        %        16
pcm_status
        %        18

        AREA ||.data||, DATA, ALIGN=2

pcm5121_volume_tbl
        DCB      0xfd,0x99,0x96,0x93
        DCB      0x8f,0x8c,0x89,0x86
        DCB      0x84,0x81,0x7f,0x7c
        DCB      0x79,0x77,0x74,0x71
        DCB      0x6e,0x6c,0x68,0x64
        DCB      0x60,0x5c,0x58,0x54
        DCB      0x50,0x4c,0x48,0x44
        DCB      0x40,0x3c,0x38,0x34

        EXPORT pcm5121Init [CODE]
        EXPORT pcm5121SetVolume [CODE]
        EXPORT pcmGetData [CODE]
        EXPORT pcmReadBuf [CODE]
        EXPORT pcmSendCmd [CODE]
        EXPORT pcmWriteBuf [CODE]
        EXPORT pcm5121_volume_tbl [DATA,SIZE=32]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT initI2cDataBlock [CODE]
        IMPORT addI2cChain [CODE]

        KEEP pcm_i2c_block
        KEEP pcm_status

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,3
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
