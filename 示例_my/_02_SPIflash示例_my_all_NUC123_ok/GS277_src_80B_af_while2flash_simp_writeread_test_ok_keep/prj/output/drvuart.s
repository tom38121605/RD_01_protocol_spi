; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--min_array_alignment=4 --split_sections --debug -c --asm --info=totals -o.\output\drvuart.o --depend=.\output\drvuart.d --cpu=Cortex-M0 --apcs=interwork -I..\CMSIS\CM0\DeviceSupport\Nuvoton\NUC123Series -I..\CMSIS\CM0\CoreSupport -I..\INC\DrvInc -I..\INC\SysInc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -D__MICROLIB --omf_browse=.\output\drvuart.crf ..\DrvSrc\DrvUART.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.DrvUART_DeInit||, CODE, READONLY, ALIGN=2

DrvUART_DeInit PROC
        PUSH     {r4,lr}
        MOVS     r2,#1
        LSLS     r2,r2,#28
|L1.6|
        LDR      r1,[r0,#0x18]
        TST      r1,r2
        BEQ      |L1.6|
        LDR      r2,|L1.52|
        LDR      r1,|L1.56|
        CMP      r0,r2
        BNE      |L1.32|
        LDR      r2,[r1,#8]
        LSLS     r0,r1,#8
        BICS     r2,r2,r0
        STR      r2,[r1,#8]
        MOVS     r0,#0xd
        B        |L1.44|
|L1.32|
        MOVS     r0,#1
        LDR      r2,[r1,#8]
        LSLS     r0,r0,#16
        BICS     r2,r2,r0
        STR      r2,[r1,#8]
        MOVS     r0,#0xc
|L1.44|
        BL       NVIC_DisableIRQ
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L1.52|
        DCD      0x40150000
|L1.56|
        DCD      0x50000200

        AREA ||i.DrvUART_DisableFlowCtrl||, CODE, READONLY, ALIGN=1

DrvUART_DisableFlowCtrl PROC
        MOVS     r1,#3
        LDR      r2,[r0,#4]
        LSLS     r1,r1,#12
        BICS     r2,r2,r1
        STR      r2,[r0,#4]
        BX       lr
        ENDP


        AREA ||i.DrvUART_DisableInt||, CODE, READONLY, ALIGN=2

DrvUART_DisableInt PROC
        PUSH     {r4,lr}
        LDR      r2,[r0,#4]
        BICS     r2,r2,r1
        STR      r2,[r0,#4]
        LDR      r1,|L3.28|
        CMP      r0,r1
        BNE      |L3.18|
        MOVS     r0,#0xc
        B        |L3.20|
|L3.18|
        MOVS     r0,#0xd
|L3.20|
        BL       NVIC_DisableIRQ
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L3.28|
        DCD      0x40050000

        AREA ||i.DrvUART_DriveRTS||, CODE, READONLY, ALIGN=1

DrvUART_DriveRTS PROC
        LDR      r2,[r0,#0x10]
        MOVS     r3,#1
        LSLS     r3,r3,#9
        BICS     r2,r2,r3
        STR      r2,[r0,#0x10]
        LDR      r2,[r0,#0x10]
        LSLS     r1,r1,#1
        ORRS     r2,r2,r1
        STR      r2,[r0,#0x10]
        BX       lr
        ENDP


        AREA ||i.DrvUART_EnableFlowCtrl||, CODE, READONLY, ALIGN=1

DrvUART_EnableFlowCtrl PROC
        PUSH     {r4,lr}
        MOVS     r3,#3
        LDR      r2,[r0,#4]
        LSLS     r3,r3,#12
        ORRS     r2,r2,r3
        STR      r2,[r0,#4]
        LDR      r2,[r0,#8]
        LSLS     r3,r3,#4
        MOVS     r4,#0xf
        LSLS     r4,r4,#16
        BICS     r2,r2,r4
        ORRS     r2,r2,r3
        STR      r2,[r0,#8]
        MOVS     r2,#1
        LDR      r3,[r1,#4]
        LSLS     r2,r2,#9
        CMP      r3,r2
        LDR      r3,[r0,#0x10]
        BNE      |L5.42|
        ORRS     r3,r3,r2
        B        |L5.44|
|L5.42|
        BICS     r3,r3,r2
|L5.44|
        STR      r3,[r0,#0x10]
        LDR      r2,[r1,#8]
        MOVS     r1,#0xff
        ADDS     r1,#1
        CMP      r2,r1
        LDR      r2,[r0,#0x14]
        BNE      |L5.62|
        ORRS     r2,r2,r1
        B        |L5.64|
|L5.62|
        BICS     r2,r2,r1
|L5.64|
        STR      r2,[r0,#0x14]
        POP      {r4,pc}
        ENDP


        AREA ||i.DrvUART_EnableInt||, CODE, READONLY, ALIGN=2

DrvUART_EnableInt PROC
        LDR      r2,[r0,#4]
        ORRS     r2,r2,r1
        STR      r2,[r0,#4]
        LDR      r2,|L6.28|
        LDR      r1,|L6.32|
        CMP      r0,r2
        BNE      |L6.20|
        MOVS     r0,#1
        LSLS     r0,r0,#12
        B        |L6.24|
|L6.20|
        MOVS     r0,#1
        LSLS     r0,r0,#13
|L6.24|
        STR      r0,[r1,#0]
        BX       lr
        ENDP

|L6.28|
        DCD      0x40050000
|L6.32|
        DCD      0xe000e100

        AREA ||i.DrvUART_GetCTSInfo||, CODE, READONLY, ALIGN=1

DrvUART_GetCTSInfo PROC
        PUSH     {r4,lr}
        LDR      r3,[r0,#0x14]
        MOVS     r4,#0x10
        ANDS     r3,r3,r4
        BEQ      |L7.12|
        MOVS     r3,#1
|L7.12|
        STRB     r3,[r1,#0]
        LDR      r0,[r0,#0x14]
        LSLS     r0,r0,#31
        LSRS     r0,r0,#31
        BEQ      |L7.24|
        MOVS     r0,#1
|L7.24|
        STRB     r0,[r2,#0]
        POP      {r4,pc}
        ENDP


        AREA ||i.DrvUART_Init||, CODE, READONLY, ALIGN=2

DrvUART_Init PROC
        PUSH     {r3-r7,lr}
        MOV      r5,r0
        LDR      r6,|L8.160|
        MOV      r4,r1
        LDR      r0,[r1,#0]
        LDR      r1,[r6,#0x14]
        MOVS     r2,#3
        LSLS     r2,r2,#24
        BICS     r1,r1,r2
        ORRS     r1,r1,r0
        STR      r1,[r6,#0x14]
        LDR      r0,[r4,#4]
        LDR      r1,[r6,#0x18]
        MOVS     r2,#0xf
        LSLS     r2,r2,#8
        LSLS     r0,r0,#8
        SUBS     r0,r0,#0xff
        BICS     r1,r1,r2
        SUBS     r0,#1
        ORRS     r1,r1,r0
        STR      r1,[r6,#0x18]
        LDR      r0,|L8.164|
        CMP      r5,r0
        BNE      |L8.52|
        LSLS     r7,r6,#7
        B        |L8.56|
|L8.52|
        MOVS     r7,#1
        LSLS     r7,r7,#17
|L8.56|
        MOV      r0,r7
        BL       SYS_RESET_IP2
        LDR      r0,[r6,#8]
        ORRS     r0,r0,r7
        STR      r0,[r6,#8]
        LDR      r1,[r5,#8]
        MOVS     r0,#6
        ORRS     r1,r1,r0
        STR      r1,[r5,#8]
        LDR      r0,[r4,#0x1c]
        LDR      r1,[r5,#8]
        MOVS     r2,#0xf0
        BICS     r1,r1,r2
        ORRS     r1,r1,r0
        STR      r1,[r5,#8]
        LDR      r1,[r4,#0x18]
        LDR      r0,[r4,#0x10]
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0x14]
        ORRS     r0,r0,r1
        LDR      r1,[r5,#0xc]
        MOVS     r2,#0x40
        ANDS     r1,r1,r2
        ORRS     r1,r1,r0
        STR      r1,[r5,#0xc]
        MOVS     r0,#0x24
        LDRB     r0,[r0,r4]
        LDR      r1,[r5,#0x20]
        LSRS     r1,r1,#8
        LSLS     r1,r1,#8
        ORRS     r1,r1,r0
        STR      r1,[r5,#0x20]
        MOVS     r6,#3
        LDR      r0,[r4,#0x20]
        LSLS     r6,r6,#28
        CMP      r0,r6
        LDR      r1,[r4,#0xc]
        LDR      r0,[r4,#8]
        BNE      |L8.146|
        BL       __aeabi_uidivmod
        SUBS     r0,r0,#2
        ORRS     r0,r0,r6
        B        |L8.154|
|L8.146|
        BL       __aeabi_uidivmod
        LSRS     r0,r0,#4
        SUBS     r0,r0,#2
|L8.154|
        STR      r0,[r5,#0x24]
        MOVS     r0,#1
        POP      {r3-r7,pc}
        ENDP

|L8.160|
        DCD      0x50000200
|L8.164|
        DCD      0x40050000

        AREA ||i.DrvUART_SetFnIRDA||, CODE, READONLY, ALIGN=1

DrvUART_SetFnIRDA PROC
        MOVS     r2,#2
        STR      r2,[r0,#0x30]
        LDR      r2,[r0,#0x28]
        MOVS     r3,#0x62
        BICS     r2,r2,r3
        STR      r2,[r0,#0x28]
        LDR      r3,[r0,#0x28]
        LDRB     r2,[r1,#0]
        CMP      r2,#0
        BEQ      |L9.22|
        MOVS     r2,#2
|L9.22|
        ORRS     r3,r3,r2
        STR      r3,[r0,#0x28]
        LDR      r3,[r0,#0x28]
        LDRB     r2,[r1,#1]
        CMP      r2,#0
        BEQ      |L9.36|
        MOVS     r2,#0x20
|L9.36|
        ORRS     r3,r3,r2
        STR      r3,[r0,#0x28]
        LDR      r2,[r0,#0x28]
        LDRB     r1,[r1,#2]
        CMP      r1,#0
        BEQ      |L9.50|
        MOVS     r1,#0x40
|L9.50|
        ORRS     r2,r2,r1
        STR      r2,[r0,#0x28]
        BX       lr
        ENDP


        AREA ||i.DrvUART_SetFnRS485||, CODE, READONLY, ALIGN=1

DrvUART_SetFnRS485 PROC
        PUSH     {r4,lr}
        MOVS     r2,#3
        STR      r2,[r0,#0x30]
        LDR      r2,[r0,#0x2c]
        LDR      r3,[r1,#0]
        LDRB     r4,[r1,#4]
        ORRS     r2,r2,r3
        LDRB     r3,[r1,#5]
        LSLS     r3,r3,#24
        LSLS     r4,r4,#15
        ORRS     r3,r3,r4
        ORRS     r2,r2,r3
        STR      r2,[r0,#0x2c]
        LDRB     r2,[r1,#6]
        LDR      r3,[r0,#0x20]
        MOVS     r4,#0xff
        LSLS     r4,r4,#8
        BICS     r3,r3,r4
        LSLS     r2,r2,#8
        ORRS     r3,r3,r2
        STR      r3,[r0,#0x20]
        LDR      r3,[r0,#8]
        MOVS     r2,#0xff
        ADDS     r2,#1
        BICS     r3,r3,r2
        STR      r3,[r0,#8]
        LDR      r3,[r0,#8]
        LDRB     r1,[r1,#7]
        CMP      r1,#0
        BNE      |L10.62|
        MOVS     r2,#0
|L10.62|
        ORRS     r3,r3,r2
        STR      r3,[r0,#8]
        POP      {r4,pc}
        ENDP


        AREA ||i.NVIC_DisableIRQ||, CODE, READONLY, ALIGN=2

NVIC_DisableIRQ PROC
        LSLS     r1,r0,#27
        LSRS     r1,r1,#27
        MOVS     r0,#1
        LSLS     r0,r0,r1
        LDR      r1,|L11.16|
        STR      r0,[r1,#0]
        BX       lr
        ENDP

        DCW      0x0000
|L11.16|
        DCD      0xe000e180

        AREA ||i.SYS_RESET_IP2||, CODE, READONLY, ALIGN=1

SYS_RESET_IP2 PROC
        MOVS     r1,#5
        LSLS     r1,r1,#28
        LDR      r2,[r1,#0xc]
        ORRS     r2,r2,r0
        STR      r2,[r1,#0xc]
        LDR      r2,[r1,#0xc]
        BICS     r2,r2,r0
        STR      r2,[r1,#0xc]
        BX       lr
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        EXPORT DrvUART_DeInit [CODE]
        EXPORT DrvUART_DisableFlowCtrl [CODE]
        EXPORT DrvUART_DisableInt [CODE]
        EXPORT DrvUART_DriveRTS [CODE]
        EXPORT DrvUART_EnableFlowCtrl [CODE]
        EXPORT DrvUART_EnableInt [CODE]
        EXPORT DrvUART_GetCTSInfo [CODE]
        EXPORT DrvUART_Init [CODE]
        EXPORT DrvUART_SetFnIRDA [CODE]
        EXPORT DrvUART_SetFnRS485 [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT __aeabi_uidivmod [CODE]

        KEEP NVIC_DisableIRQ
        KEEP SYS_RESET_IP2

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,3
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
