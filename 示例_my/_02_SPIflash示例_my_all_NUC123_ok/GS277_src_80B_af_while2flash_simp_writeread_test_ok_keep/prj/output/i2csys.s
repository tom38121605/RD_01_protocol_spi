; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--min_array_alignment=4 --split_sections --debug -c --asm --info=totals -o.\output\i2csys.o --depend=.\output\i2csys.d --cpu=Cortex-M0 --apcs=interwork -I..\CMSIS\CM0\DeviceSupport\Nuvoton\NUC123Series -I..\CMSIS\CM0\CoreSupport -I..\INC\DrvInc -I..\INC\SysInc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -D__MICROLIB --omf_browse=.\output\i2csys.crf ..\AppSrc\i2cSys.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.GPIO_SET_MODE||, CODE, READONLY, ALIGN=1

GPIO_SET_MODE PROC
        PUSH     {r4,lr}
        LDR      r3,[r0,#0]
        LSLS     r1,r1,#1
        MOVS     r4,#3
        LSLS     r4,r4,r1
        BICS     r3,r3,r4
        LSLS     r2,r2,r1
        ORRS     r3,r3,r2
        STR      r3,[r0,#0]
        POP      {r4,pc}
        ENDP


        AREA ||i.I2C0_IRQHandler||, CODE, READONLY, ALIGN=2

I2C0_IRQHandler PROC
        PUSH     {r3-r7,lr}
        LDR      r0,|L2.312|
        LDR      r1,[r0,#0x14]
        MOVS     r2,#4
        LSLS     r1,r1,#31
        LSRS     r1,r1,#31
        MOVS     r5,#0x18
        MOVS     r6,#0xa3
        LDR      r3,|L2.316|
        CMP      r1,#0
        BEQ      |L2.38|
        LDR      r1,[r0,#0x14]
        BICS     r1,r1,r2
        STR      r1,[r0,#0x14]
        LDR      r1,[r0,#0x14]
        MOVS     r2,#1
        ORRS     r1,r1,r2
        STR      r1,[r0,#0x14]
        B        |L2.206|
|L2.38|
        LDR      r1,[r0,#0xc]
        MOV      r12,r1
        LDR      r1,[r3,#0xc]  ; i2c_current_block
        LDRB     r4,[r1,#0]
        LSLS     r7,r4,#31
        MOV      r7,r12
        BEQ      |L2.72|
        CMP      r7,#0x48
        BEQ      |L2.206|
        BGT      |L2.198|
        CMP      r7,#8
        BEQ      |L2.216|
        CMP      r7,#0x10
        BEQ      |L2.216|
        CMP      r7,#0x40
        BNE      |L2.206|
        B        |L2.222|
|L2.72|
        CMP      r7,#8
        BEQ      |L2.102|
        CMP      r7,#0x18
        BEQ      |L2.106|
        CMP      r7,#0x28
        BEQ      |L2.118|
        LDR      r1,[r0,#0]
        CMP      r7,#0x38
        BEQ      |L2.182|
        ORRS     r1,r1,r5
        STR      r1,[r0,#0]
        LDR      r1,[r0,#0x14]
        BICS     r1,r1,r2
        STR      r1,[r0,#0x14]
        B        |L2.212|
|L2.102|
        STR      r4,[r0,#8]
        B        |L2.236|
|L2.106|
        LDRB     r2,[r1,#3]
        LDR      r4,[r1,#8]
        ADDS     r3,r2,#1
        STRB     r3,[r1,#3]
        LDRB     r1,[r4,r2]
        B        |L2.178|
|L2.118|
        LDRB     r6,[r1,#1]
        CMP      r6,#1
        BEQ      |L2.158|
        LDRB     r6,[r1,#2]
        LDRB     r4,[r1,#3]
        CMP      r6,r4
        BCS      |L2.170|
        LDR      r4,[r0,#0]
        ORRS     r4,r4,r5
        STR      r4,[r0,#0]
        LDR      r4,[r0,#0x14]
        BICS     r4,r4,r2
        STR      r4,[r0,#0x14]
        MOVS     r0,#0xa0
        STRB     r0,[r3,#0]
        LDR      r1,[r1,#8]
        STRB     r0,[r1,#0]
        MOVS     r0,#0
        STR      r0,[r3,#0xc]  ; i2c_current_block
        POP      {r3-r7,pc}
|L2.158|
        MOVS     r2,#1
        ORRS     r4,r4,r2
        STRB     r4,[r1,#0]
        BL       I2C_START
        POP      {r3-r7,pc}
|L2.170|
        ADDS     r2,r4,#1
        LDR      r3,[r1,#8]
        STRB     r2,[r1,#3]
        LDRB     r1,[r3,r4]
|L2.178|
        STR      r1,[r0,#8]
        B        |L2.236|
|L2.182|
        ORRS     r1,r1,r5
        STR      r1,[r0,#0]
        LDR      r1,[r0,#0x14]
        BICS     r1,r1,r2
        STR      r1,[r0,#0x14]
        MOVS     r0,#0xa1
        STRB     r0,[r3,#0]
        POP      {r3-r7,pc}
|L2.198|
        CMP      r7,#0x50
        BEQ      |L2.294|
        CMP      r7,#0x58
        BEQ      |L2.242|
|L2.206|
        LDR      r1,[r0,#0]
        ORRS     r1,r1,r5
        STR      r1,[r0,#0]
|L2.212|
        STRB     r6,[r3,#0]
        POP      {r3-r7,pc}
|L2.216|
        MOVS     r1,#1
        ORRS     r4,r4,r1
        B        |L2.102|
|L2.222|
        LDRB     r3,[r1,#2]
        LDRB     r1,[r1,#3]
        CMP      r3,r1
        LDR      r1,[r0,#0]
        BLS      |L2.308|
        ORRS     r1,r1,r2
|L2.234|
        STR      r1,[r0,#0]
|L2.236|
        BL       I2C_CLEAR_SI
        POP      {r3-r7,pc}
|L2.242|
        LDR      r4,[r0,#8]
        LDRB     r2,[r1,#3]
        LDR      r3,[r1,#8]
        ADDS     r7,r2,#1
        STRB     r7,[r1,#3]
        STRB     r4,[r3,r2]
        LDR      r2,[r0,#0]
        ORRS     r2,r2,r5
        STR      r2,[r0,#0]
        LDRB     r0,[r1,#2]
        LDRB     r2,[r1,#3]
        CMP      r0,r2
        BCS      |L2.284|
        LDR      r0,|L2.316|
        MOVS     r2,#0xa0
        STRB     r2,[r0,#0]
        LDR      r1,[r1,#8]
        STRB     r2,[r1,#0]
        MOVS     r1,#0
        STR      r1,[r0,#0xc]  ; i2c_current_block
        POP      {r3-r7,pc}
|L2.284|
        LDR      r1,|L2.316|
        MOVS     r0,#0
        STRB     r6,[r1,#0]
        STR      r0,[r1,#0xc]  ; i2c_current_block
        POP      {r3-r7,pc}
|L2.294|
        LDR      r4,[r0,#8]
        LDRB     r3,[r1,#3]
        LDR      r5,[r1,#8]
        ADDS     r6,r3,#1
        STRB     r6,[r1,#3]
        STRB     r4,[r5,r3]
        B        |L2.222|
|L2.308|
        BICS     r1,r1,r2
        B        |L2.234|
        ENDP

|L2.312|
        DCD      0x40020000
|L2.316|
        DCD      ||area_number.14||

        AREA ||i.I2C_CLEAR_SI||, CODE, READONLY, ALIGN=1

I2C_CLEAR_SI PROC
        LDR      r1,[r0,#0]
        MOVS     r2,#0x30
        BICS     r1,r1,r2
        MOVS     r2,#8
        ORRS     r1,r1,r2
        STR      r1,[r0,#0]
        BX       lr
        ENDP


        AREA ||i.I2C_START||, CODE, READONLY, ALIGN=1

I2C_START PROC
        LDR      r1,[r0,#0]
        MOVS     r2,#0x10
        BICS     r1,r1,r2
        MOVS     r2,#0x28
        ORRS     r1,r1,r2
        STR      r1,[r0,#0]
        BX       lr
        ENDP


        AREA ||i.addI2cChain||, CODE, READONLY, ALIGN=2

addI2cChain PROC
        PUSH     {r4,lr}
        LDR      r3,|L5.80|
        LDR      r2,[r3,#0xc]  ; i2c_current_block
        CMP      r0,r2
        BNE      |L5.18|
        LDR      r2,[r2,#8]
        LDRB     r2,[r2,#0]
        CMP      r2,#0xa0
        BNE      |L5.40|
|L5.18|
        LDRB     r2,[r0,#4]
        STRB     r2,[r0,#3]
        LDR      r2,[r3,#8]  ; i2c_block_chain_tail
        MOVS     r4,#0
        CMP      r2,#0
        BEQ      |L5.68|
        CMP      r1,#0
        BEQ      |L5.54|
        LDR      r1,[r3,#4]  ; i2c_block_chain_header
        CMP      r0,r1
        BNE      |L5.44|
|L5.40|
        MOVS     r0,#0
        POP      {r4,pc}
|L5.44|
        STR      r1,[r0,#0xc]
        STR      r0,[r3,#4]  ; i2c_block_chain_header
        BL       i2cSpirit
        B        |L5.74|
|L5.54|
        CMP      r0,r2
        BNE      |L5.64|
        LDR      r1,[r3,#4]  ; i2c_block_chain_header
        CMP      r1,#0
        BEQ      |L5.68|
|L5.64|
        STR      r0,[r2,#0xc]
        B        |L5.70|
|L5.68|
        STR      r0,[r3,#4]  ; i2c_block_chain_header
|L5.70|
        STR      r0,[r3,#8]  ; i2c_block_chain_tail
        STR      r4,[r0,#0xc]
|L5.74|
        MOVS     r0,#1
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L5.80|
        DCD      ||area_number.14||

        AREA ||i.i2cSpirit||, CODE, READONLY, ALIGN=2

i2cSpirit PROC
        PUSH     {r3-r7,lr}
        LDR      r5,|L6.220|
        MOVS     r3,#0xa2
        LDRB     r1,[r5,#0]  ; i2c_state
        LDR      r4,|L6.224|
        CMP      r1,#0xa0
        BEQ      |L6.30|
        MOVS     r7,#0xa3
        CMP      r1,#0xa1
        BEQ      |L6.116|
        CMP      r1,#0xa2
        BEQ      |L6.200|
        CMP      r1,#0xa3
        BNE      |L6.214|
        B        |L6.62|
|L6.30|
        BL       readI2cChain
        LDR      r0,[r5,#0xc]  ; i2c_current_block
        CMP      r0,#0
        BEQ      |L6.214|
        STRB     r3,[r5,#0]
        MOV      r0,r4
        BL       I2C_START
        LDR      r1,[r4,#0x14]
        MOVS     r0,#4
        ORRS     r1,r1,r0
        STR      r1,[r4,#0x14]
        MOVS     r0,#0
        STR      r0,[r5,#0x10]  ; repeat_time
        B        |L6.214|
|L6.62|
        LDR      r0,[r5,#0x10]  ; repeat_time
        ADDS     r0,r0,#1
        STR      r0,[r5,#0x10]  ; repeat_time
        CMP      r0,#1
        LDR      r0,[r5,#0xc]  ; i2c_current_block
        BLS      |L6.106|
        CMP      r0,#0
        BEQ      |L6.82|
        LDR      r0,[r0,#8]
        STRB     r7,[r0,#0]
|L6.82|
        BL       readI2cChain
        MOVS     r0,#0xa0
        STRB     r0,[r5,#0]
        LDR      r0,[r5,#0xc]  ; i2c_current_block
        CMP      r0,#0
        BEQ      |L6.214|
|L6.96|
        STRB     r3,[r5,#0]
        MOV      r0,r4
        BL       I2C_START
        B        |L6.214|
|L6.106|
        CMP      r0,#0
        BEQ      |L6.214|
        LDRB     r1,[r0,#4]
        STRB     r1,[r0,#3]
        B        |L6.96|
|L6.116|
        LDR      r0,[r4,#0]
        MOVS     r6,#0x40
        BICS     r0,r0,r6
        STR      r0,[r4,#0]
        LDR      r1,|L6.228|
        LSLS     r0,r6,#2
        LDR      r2,[r1,#8]
        BICS     r2,r2,r0
        STR      r2,[r1,#8]
        MOVS     r2,#5
        LSLS     r2,r2,#28
        LDR      r3,[r2,#0xc]
        ORRS     r3,r3,r0
        STR      r3,[r2,#0xc]
        LDR      r3,[r2,#0xc]
        BICS     r3,r3,r0
        STR      r3,[r2,#0xc]
        LDR      r2,[r1,#8]
        ORRS     r2,r2,r0
        STR      r2,[r1,#8]
        MOVS     r2,#1
        LDR      r1,|L6.232|
        MOV      r0,r4
        BL       DrvI2C_Init
        LDR      r0,[r4,#0]
        ORRS     r0,r0,r6
        STR      r0,[r4,#0]
        LDR      r0,[r4,#0]
        MOVS     r1,#0x80
        ORRS     r0,r0,r1
        STR      r0,[r4,#0]
        LDR      r0,[r4,#0x14]
        MOVS     r1,#2
        ORRS     r0,r0,r1
        STR      r0,[r4,#0x14]
        LDR      r1,[r4,#0x14]
        MOVS     r0,#4
        ORRS     r1,r1,r0
        STR      r1,[r4,#0x14]
        STRB     r7,[r5,#0]
        B        |L6.214|
|L6.200|
        LDR      r0,[r5,#0x14]  ; busy_time
        ADDS     r0,r0,#1
        STR      r0,[r5,#0x14]  ; busy_time
        CMP      r0,#0x14
        BLS      |L6.218|
        MOVS     r0,#0xa1
        STRB     r0,[r5,#0]
|L6.214|
        MOVS     r0,#0
        STR      r0,[r5,#0x14]  ; busy_time
|L6.218|
        POP      {r3-r7,pc}
        ENDP

|L6.220|
        DCD      ||area_number.14||
|L6.224|
        DCD      0x40020000
|L6.228|
        DCD      0x50000200
|L6.232|
        DCD      0x000249f0

        AREA ||i.i2cSysInit||, CODE, READONLY, ALIGN=2

i2cSysInit PROC
        PUSH     {r4-r6,lr}
        LDR      r4,|L7.96|
        MOVS     r2,#2
        MOVS     r1,#3
        MOV      r0,r4
        BL       GPIO_SET_MODE
        MOVS     r2,#2
        MOV      r1,r2
        MOV      r0,r4
        BL       GPIO_SET_MODE
        LDR      r0,|L7.100|
        LDR      r1,[r0,#4]
        MOVS     r2,#0xc
        ORRS     r1,r1,r2
        STR      r1,[r0,#4]
        LDR      r1,[r0,#0x14]
        MOVS     r2,#0xf
        LSLS     r2,r2,#24
        BICS     r1,r1,r2
        LSLS     r2,r4,#19
        ADDS     r1,r1,r2
        STR      r1,[r0,#0x14]
        LDR      r1,|L7.104|
        LDR      r0,[r1,#0]
        MOVS     r2,#0xff
        LSLS     r2,r2,#16
        MOVS     r5,#2
        BICS     r0,r0,r2
        LSLS     r2,r5,#22
        ORRS     r0,r0,r2
        STR      r0,[r1,#0]
        LDR      r4,|L7.112|
        MOVS     r2,#1
        LDR      r1,|L7.108|
        MOV      r0,r4
        BL       DrvI2C_Init
        LDR      r0,[r4,#0x14]
        ORRS     r0,r0,r5
        STR      r0,[r4,#0x14]
        LDR      r0,[r4,#0x14]
        MOVS     r1,#4
        ORRS     r0,r0,r1
        STR      r0,[r4,#0x14]
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L7.96|
        DCD      0x50004140
|L7.100|
        DCD      0x50000040
|L7.104|
        DCD      0xe000e410
|L7.108|
        DCD      0x000249f0
|L7.112|
        DCD      0x40020000

        AREA ||i.initI2cDataBlock||, CODE, READONLY, ALIGN=1

initI2cDataBlock PROC
        PUSH     {r4,r5,lr}
        LDR      r5,[sp,#0x10]
        LDR      r4,[sp,#0xc]
        STRB     r1,[r0,#0]
        STRB     r2,[r0,#1]
        STRB     r3,[r0,#2]
        STRB     r4,[r0,#3]
        STRB     r4,[r0,#4]
        MOVS     r1,#0
        STR      r5,[r0,#8]
        STR      r1,[r0,#0xc]
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.readI2cChain||, CODE, READONLY, ALIGN=2

readI2cChain PROC
        LDR      r1,|L9.28|
        MOVS     r2,#0
        LDR      r0,[r1,#4]  ; i2c_block_chain_header
        CMP      r0,#0
        BEQ      |L9.24|
        STR      r0,[r1,#0xc]  ; i2c_current_block
        LDR      r0,[r0,#0xc]
        STR      r0,[r1,#4]  ; i2c_block_chain_header
        CMP      r0,#0
        BNE      |L9.22|
|L9.20|
        STR      r2,[r1,#8]  ; i2c_block_chain_tail
|L9.22|
        BX       lr
|L9.24|
        STR      r2,[r1,#0xc]  ; i2c_current_block
        B        |L9.20|
        ENDP

|L9.28|
        DCD      ||area_number.14||

        AREA ||i.resumeI2c||, CODE, READONLY, ALIGN=2

resumeI2c PROC
        PUSH     {r4,lr}
        LDR      r0,|L10.28|
        MOVS     r1,#0xa0
        STRB     r1,[r0,#0]
        MOVS     r1,#0
        STR      r1,[r0,#4]  ; i2c_block_chain_header
        STR      r1,[r0,#8]  ; i2c_block_chain_tail
        STR      r1,[r0,#0xc]  ; i2c_current_block
        BL       ampResumeI2c
        BL       seW58ResumeI2c
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L10.28|
        DCD      ||area_number.14||

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.data||, DATA, ALIGN=0

i2c_current_chip
        DCB      0x00

        AREA ||area_number.14||, DATA, ALIGN=2

        EXPORTAS ||area_number.14||, ||.data||
i2c_state
        DCB      0xa0,0x00,0x00,0x00
i2c_block_chain_header
        DCD      0x00000000
i2c_block_chain_tail
        DCD      0x00000000
i2c_current_block
        DCD      0x00000000
repeat_time
        DCD      0x00000002
busy_time
        DCD      0x00000000

        EXPORT I2C0_IRQHandler [CODE]
        EXPORT addI2cChain [CODE]
        EXPORT i2cSpirit [CODE]
        EXPORT i2cSysInit [CODE]
        EXPORT initI2cDataBlock [CODE]
        EXPORT readI2cChain [CODE]
        EXPORT resumeI2c [CODE]
        EXPORT i2c_current_chip [DATA,SIZE=1]
        EXPORT i2c_state [DATA,SIZE=1]
        EXPORT i2c_block_chain_header [DATA,SIZE=4]
        EXPORT i2c_block_chain_tail [DATA,SIZE=4]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT ampResumeI2c [CODE]
        IMPORT seW58ResumeI2c [CODE]
        IMPORT DrvI2C_Init [CODE]

        KEEP GPIO_SET_MODE
        KEEP I2C_CLEAR_SI
        KEEP I2C_START
        KEEP i2c_current_block
        KEEP repeat_time
        KEEP busy_time

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,3
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
