; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--min_array_alignment=4 --split_sections --debug -c --asm --info=totals -o.\output\drvpdma.o --depend=.\output\drvpdma.d --cpu=Cortex-M0 --apcs=interwork -I..\CMSIS\CM0\DeviceSupport\Nuvoton\NUC123Series -I..\CMSIS\CM0\CoreSupport -I..\INC\DrvInc -I..\INC\SysInc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -D__MICROLIB --omf_browse=.\output\drvpdma.crf ..\DrvSrc\DrvPDMA.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.DrvPDMA_DeInit||, CODE, READONLY, ALIGN=2

DrvPDMA_DeInit PROC
        LDR      r1,|L1.24|
        MOVS     r0,#0
        STR      r0,[r1,#0]
        LDR      r1,|L1.28|
        MOVS     r0,#2
        LDR      r2,[r1,#4]
        BICS     r2,r2,r0
        STR      r2,[r1,#4]
        LDR      r1,|L1.32|
        LSLS     r0,r0,#25
        STR      r0,[r1,#0]
        BX       lr
        ENDP

|L1.24|
        DCD      0x50008f00
|L1.28|
        DCD      0x50000200
|L1.32|
        DCD      0xe000e180

        AREA ||i.DrvPDMA_DisableInt||, CODE, READONLY, ALIGN=2

DrvPDMA_DisableInt PROC
        LDR      r2,[r0,#0x20]
        BICS     r2,r2,r1
        STR      r2,[r0,#0x20]
        LDR      r0,|L2.24|
        LDR      r0,[r0,#0x20]
        LSLS     r0,r0,#30
        BNE      |L2.22|
        MOVS     r0,#1
        LDR      r1,|L2.28|
        LSLS     r0,r0,#26
        STR      r0,[r1,#0]
|L2.22|
        BX       lr
        ENDP

|L2.24|
        DCD      0x50008e00
|L2.28|
        DCD      0xe000e180

        AREA ||i.DrvPDMA_EnableInt||, CODE, READONLY, ALIGN=2

DrvPDMA_EnableInt PROC
        LDR      r2,[r0,#0x20]
        ORRS     r2,r2,r1
        STR      r2,[r0,#0x20]
        MOVS     r0,#1
        LDR      r1,|L3.16|
        LSLS     r0,r0,#26
        STR      r0,[r1,#0]
        BX       lr
        ENDP

|L3.16|
        DCD      0xe000e100

        AREA ||i.DrvPDMA_Init||, CODE, READONLY, ALIGN=2

DrvPDMA_Init PROC
        PUSH     {r4,r5,lr}
        LSLS     r2,r0,#20
        LSRS     r2,r2,#28
        MOVS     r4,#1
        ADDS     r2,r2,#8
        MOV      r3,r4
        LSLS     r3,r3,r2
        LDR      r2,|L4.64|
        LDR      r5,[r2,#0]
        ORRS     r5,r5,r3
        STR      r5,[r2,#0]
        LDR      r2,[r0,#0]
        MOVS     r3,#2
        ORRS     r2,r2,r3
        STR      r2,[r0,#0]
        LDR      r3,[r1,#8]
        LDR      r2,[r1,#0]
        LDR      r5,[r1,#0x14]
        ORRS     r2,r2,r3
        LDR      r3,[r1,#0x10]
        ORRS     r3,r3,r5
        ORRS     r2,r2,r3
        ORRS     r2,r2,r4
        STR      r2,[r0,#0]
        LDR      r2,[r1,#4]
        STR      r2,[r0,#4]
        LDR      r2,[r1,#0xc]
        STR      r2,[r0,#8]
        LDR      r1,[r1,#0x18]
        STR      r1,[r0,#0xc]
        POP      {r4,r5,pc}
        ENDP

        DCW      0x0000
|L4.64|
        DCD      0x50008f00

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        EXPORT DrvPDMA_DeInit [CODE]
        EXPORT DrvPDMA_DisableInt [CODE]
        EXPORT DrvPDMA_EnableInt [CODE]
        EXPORT DrvPDMA_Init [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,3
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
