; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--min_array_alignment=4 --split_sections --debug -c --asm --info=totals -o.\output\main.o --depend=.\output\main.d --cpu=Cortex-M0 --apcs=interwork -I..\CMSIS\CM0\DeviceSupport\Nuvoton\NUC123Series -I..\CMSIS\CM0\CoreSupport -I..\INC\DrvInc -I..\INC\SysInc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -D__MICROLIB --omf_browse=.\output\main.crf ..\AppSrc\main.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.CLK_Init||, CODE, READONLY, ALIGN=2

CLK_Init PROC
        PUSH     {r4,lr}
        BL       SYS_UnlockReg
        LDR      r0,|L1.96|
        LDR      r1,[r0,#4]
        MOVS     r2,#3
        ORRS     r1,r1,r2
        STR      r1,[r0,#4]
        LDR      r1,|L1.100|
        LDR      r0,[r1,#0]
        MOVS     r2,#1
        ORRS     r0,r0,r2
        STR      r0,[r1,#0]
|L1.26|
        LDR      r0,[r1,#0xc]
        LSLS     r0,r0,#31
        LSRS     r0,r0,#31
        BEQ      |L1.26|
        LDR      r0,|L1.104|
        STR      r0,[r1,#0x20]
|L1.38|
        LDR      r2,[r1,#0xc]
        MOVS     r0,#4
        TST      r2,r0
        BEQ      |L1.38|
        LDR      r2,[r1,#0x10]
        MOVS     r0,#2
        LSRS     r2,r2,#3
        LSLS     r2,r2,#3
        ORRS     r2,r2,r0
        STR      r2,[r1,#0x10]
        LDR      r2,[r1,#0x2c]
        MOVS     r0,#1
        BICS     r2,r2,r0
        ORRS     r2,r2,r0
        STR      r2,[r1,#0x2c]
        BL       SystemCoreClockUpdate
        LDR      r0,|L1.108|
        BL       SysTickInit
        BL       adcKeyClkInit
        BL       irClkInit
        LDR      r1,|L1.96|
        MOVS     r0,#0
        ADDS     r1,r1,#0xc0
        STR      r0,[r1,#0]
        POP      {r4,pc}
        ENDP

|L1.96|
        DCD      0x50000040
|L1.100|
        DCD      0x50000200
|L1.104|
        DCD      0x00004a54
|L1.108|
        DCD      0x00001770

        AREA ||i.DECT_DC||, CODE, READONLY, ALIGN=2

DECT_DC PROC
        LDR      r0,|L2.16|
        LDR      r0,[r0,#0]
        CMP      r0,#0
        BEQ      |L2.12|
        MOVS     r0,#0
        BX       lr
|L2.12|
        MOVS     r0,#1
        BX       lr
        ENDP

|L2.16|
        DCD      0x5000423c

        AREA ||i.Erase_All_Chip||, CODE, READONLY, ALIGN=2

Erase_All_Chip PROC
        PUSH     {r4-r6,lr}
        LDR      r4,|L3.88|
        LDR      r0,[r4,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        STR      r0,[r4,#8]
        LDR      r0,[r4,#0]
        MOVS     r1,#1
        LSLS     r1,r1,#19
        BICS     r0,r0,r1
        STR      r0,[r4,#0]
        LDR      r0,[r4,#8]
        MOVS     r5,#1
        ORRS     r0,r0,r5
        STR      r0,[r4,#8]
        MOVS     r1,#8
        MOVS     r0,#6
        BL       spiSendWord
        LDR      r0,[r4,#8]
        BICS     r0,r0,r5
        STR      r0,[r4,#8]
        LDR      r0,[r4,#8]
        ORRS     r0,r0,r5
        STR      r0,[r4,#8]
        MOVS     r1,#8
        MOVS     r0,#0xc7
        BL       spiSendWord
        LDR      r0,[r4,#8]
        BICS     r0,r0,r5
        STR      r0,[r4,#8]
        LDR      r0,[r4,#8]
        ORRS     r0,r0,r5
        STR      r0,[r4,#8]
        MOVS     r1,#8
        MOVS     r0,#4
        BL       spiSendWord
        LDR      r0,[r4,#8]
        BICS     r0,r0,r5
        STR      r0,[r4,#8]
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L3.88|
        DCD      0x40034000

        AREA ||i.Erase_Page_Data||, CODE, READONLY, ALIGN=2

Erase_Page_Data PROC
        PUSH     {r3-r7,lr}
        LDR      r4,|L4.192|
        MOV      r5,r0
        LDR      r0,[r4,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        STR      r0,[r4,#8]
        LDR      r0,[r4,#0]
        MOVS     r7,#1
        LSLS     r7,r7,#19
        BICS     r0,r0,r7
        STR      r0,[r4,#0]
        LDR      r0,[r4,#8]
        MOVS     r6,#1
        ORRS     r0,r0,r6
        STR      r0,[r4,#8]
        MOVS     r1,#8
        MOVS     r0,#6
        BL       spiSendWord
        LDR      r0,[r4,#8]
        BICS     r0,r0,r6
        STR      r0,[r4,#8]
        LDR      r0,[r4,#8]
        ORRS     r0,r0,r6
        STR      r0,[r4,#8]
        MOVS     r1,#8
        MOVS     r0,#0xd8
        BL       spiSendWord
        MOVS     r1,#0x18
        MOV      r0,r5
        BL       spiSendWord
        LDR      r0,[r4,#8]
        BICS     r0,r0,r6
        STR      r0,[r4,#8]
        LDR      r0,[r4,#8]
        ORRS     r0,r0,r6
        STR      r0,[r4,#8]
        MOVS     r1,#8
        MOVS     r0,#4
        BL       spiSendWord
        LDR      r0,[r4,#8]
        BICS     r0,r0,r6
        STR      r0,[r4,#8]
        LDR      r0,[r4,#8]
        BICS     r0,r0,r6
        STR      r0,[r4,#8]
        LDR      r0,[r4,#0]
        BICS     r0,r0,r7
        STR      r0,[r4,#0]
        LDR      r0,[r4,#8]
        ORRS     r0,r0,r6
        STR      r0,[r4,#8]
        MOVS     r1,#8
        MOVS     r0,#5
        BL       spiSendWord
        MOVS     r1,#8
        MOVS     r0,#0xff
        BL       spiSendWord
        LDR      r0,[r4,#0x10]
        LDR      r5,|L4.196|
        B        |L4.172|
|L4.134|
        LDR      r0,[r4,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        STR      r0,[r4,#8]
        LDR      r0,[r4,#0]
        BICS     r0,r0,r7
        STR      r0,[r4,#0]
        LDR      r0,[r4,#8]
        ORRS     r0,r0,r6
        STR      r0,[r4,#8]
        MOVS     r1,#8
        MOVS     r0,#5
        BL       spiSendWord
        MOVS     r1,#8
        MOVS     r0,#0xff
        BL       spiSendWord
        LDR      r0,[r4,#0x10]
|L4.172|
        STRB     r0,[r5,#0]
        LDR      r0,[r4,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        STR      r0,[r4,#8]
        LDRB     r0,[r5,#0]  ; flash_status
        LSLS     r0,r0,#31
        BNE      |L4.134|
        POP      {r3-r7,pc}
        ENDP

        DCW      0x0000
|L4.192|
        DCD      0x40034000
|L4.196|
        DCD      flash_status

        AREA ||i.GPIO_SET_MODE||, CODE, READONLY, ALIGN=1

GPIO_SET_MODE PROC
        PUSH     {r4,lr}
        LDR      r3,[r0,#0]
        LSLS     r1,r1,#1
        MOVS     r4,#3
        LSLS     r4,r4,r1
        BICS     r3,r3,r4
        LSLS     r2,r2,r1
        ORRS     r3,r3,r2
        STR      r3,[r0,#0]
        POP      {r4,pc}
        ENDP


        AREA ||i.Hal_Init||, CODE, READONLY, ALIGN=1

Hal_Init PROC
        PUSH     {r4,lr}
        MRS      r4,PRIMASK
        MOVS     r0,#1
        MSR      PRIMASK,r0
        BL       CLK_Init
        MSR      PRIMASK,r4
        BL       sysTaskInit
        BL       dealPowerKey
        BL       ledInit
        POP      {r4,pc}
        ENDP


        AREA ||i.Program_Page_Data||, CODE, READONLY, ALIGN=2

Program_Page_Data PROC
        PUSH     {r3-r7,lr}
        LDR      r4,|L7.220|
        MOV      r7,r0
        LDR      r0,[r4,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        STR      r0,[r4,#8]
        LDR      r0,[r4,#0]
        MOVS     r6,#1
        LSLS     r6,r6,#19
        BICS     r0,r0,r6
        STR      r0,[r4,#0]
        LDR      r0,[r4,#8]
        MOVS     r5,#1
        ORRS     r0,r0,r5
        STR      r0,[r4,#8]
        MOVS     r1,#8
        MOVS     r0,#6
        BL       spiSendWord
        LDR      r0,[r4,#8]
        BICS     r0,r0,r5
        STR      r0,[r4,#8]
        LDR      r0,[r4,#8]
        ORRS     r0,r0,r5
        STR      r0,[r4,#8]
        MOVS     r1,#8
        MOVS     r0,#2
        BL       spiSendWord
        MOVS     r1,#0x18
        MOV      r0,r7
        BL       spiSendWord
        MOVS     r7,#0
|L7.70|
        MOVS     r1,#8
        MOVS     r0,#2
        BL       spiSendWord
        ADDS     r7,r7,#1
        CMP      r7,#0xff
        BLS      |L7.70|
        LDR      r0,[r4,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        STR      r0,[r4,#8]
        LDR      r0,[r4,#0]
        BICS     r0,r0,r6
        STR      r0,[r4,#0]
        LDR      r0,[r4,#8]
        ORRS     r0,r0,r5
        STR      r0,[r4,#8]
        MOVS     r1,#8
        MOVS     r0,#4
        BL       spiSendWord
        LDR      r0,[r4,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        STR      r0,[r4,#8]
        LDR      r0,[r4,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        STR      r0,[r4,#8]
        LDR      r0,[r4,#0]
        BICS     r0,r0,r6
        STR      r0,[r4,#0]
        LDR      r0,[r4,#8]
        ORRS     r0,r0,r5
        STR      r0,[r4,#8]
        MOVS     r1,#8
        MOVS     r0,#5
        BL       spiSendWord
        MOVS     r1,#8
        MOVS     r0,#0xff
        BL       spiSendWord
        LDR      r0,[r4,#0x10]
        LDR      r7,|L7.224|
        B        |L7.200|
|L7.162|
        LDR      r0,[r4,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        STR      r0,[r4,#8]
        LDR      r0,[r4,#0]
        BICS     r0,r0,r6
        STR      r0,[r4,#0]
        LDR      r0,[r4,#8]
        ORRS     r0,r0,r5
        STR      r0,[r4,#8]
        MOVS     r1,#8
        MOVS     r0,#5
        BL       spiSendWord
        MOVS     r1,#8
        MOVS     r0,#0xff
        BL       spiSendWord
        LDR      r0,[r4,#0x10]
|L7.200|
        STRB     r0,[r7,#0]
        LDR      r0,[r4,#8]
        LSRS     r0,r0,#1
        LSLS     r0,r0,#1
        STR      r0,[r4,#8]
        LDRB     r0,[r7,#0]  ; flash_status
        LSLS     r0,r0,#31
        BNE      |L7.162|
        POP      {r3-r7,pc}
        ENDP

        DCW      0x0000
|L7.220|
        DCD      0x40034000
|L7.224|
        DCD      flash_status

        AREA ||i.SYS_UnlockReg||, CODE, READONLY, ALIGN=2

SYS_UnlockReg PROC
        LDR      r0,|L8.16|
        MOVS     r1,#0x59
        STR      r1,[r0,#0]
        MOVS     r1,#0x16
        STR      r1,[r0,#0]
        MOVS     r1,#0x88
        STR      r1,[r0,#0]
        BX       lr
        ENDP

|L8.16|
        DCD      0x50000100

        AREA ||i.SysTickInit||, CODE, READONLY, ALIGN=2

SysTickInit PROC
        PUSH     {r4,r5,lr}
        LSLS     r0,r0,#8
        LSRS     r0,r0,#8
        LDR      r1,|L9.52|
        SUBS     r0,r0,#1
        STR      r0,[r1,#0x14]
        LDR      r0,|L9.56|
        LDR      r2,[r0,#0x1c]
        MOVS     r4,#3
        LSLS     r2,r2,#8
        LSRS     r2,r2,#8
        LSLS     r3,r1,#17
        ORRS     r2,r2,r3
        STR      r2,[r0,#0x1c]
        MOVS     r0,#0
        STR      r0,[r1,#0x18]
        LDR      r3,|L9.60|
        MOVS     r0,#0x10
        LDR      r2,[r3,#0x10]
        MOVS     r5,#0x38
        BICS     r2,r2,r5
        ORRS     r2,r2,r0
        STR      r2,[r3,#0x10]
        STR      r4,[r1,#0x10]
        POP      {r4,r5,pc}
        ENDP

        DCW      0x0000
|L9.52|
        DCD      0xe000e000
|L9.56|
        DCD      0xe000ed04
|L9.60|
        DCD      0x50000200

        AREA ||i.bootLDROM||, CODE, READONLY, ALIGN=2

bootLDROM PROC
        LDR      r0,|L10.44|
        MOVS     r1,#0x59
        STR      r1,[r0,#0]
        MOVS     r1,#0x16
        STR      r1,[r0,#0]
        MOVS     r1,#0x88
        STR      r1,[r0,#0]
        MOVS     r0,#3
        MOVS     r1,#5
        LSLS     r1,r1,#28
        STR      r0,[r1,#4]
        LDR      r0,|L10.48|
        LDR      r1,[r0,#0]
        LSRS     r1,r1,#2
        LSLS     r1,r1,#2
        ADDS     r1,r1,#2
        STR      r1,[r0,#0]
        LDR      r1,|L10.56|
        LDR      r0,|L10.52|
        STR      r0,[r1,#0xc]
|L10.40|
        B        |L10.40|
        ENDP

        DCW      0x0000
|L10.44|
        DCD      0x50000100
|L10.48|
        DCD      0x5000c000
|L10.52|
        DCD      0x05fa0004
|L10.56|
        DCD      0xe000ed00

        AREA ||i.main||, CODE, READONLY, ALIGN=2

main PROC
        MOVS     r4,#0
        BL       Hal_Init
        BL       BTInit
        ADR      r0,|L11.332|
        BL       BTSendCmd
        ADR      r1,|L11.344|
        MOVS     r0,#0xf8
        BL       uartdecode
        BL       ledTaskInit
        BL       adckeyTaskInit
        BL       irKeyTaskInit
        BL       cs8422Init
        BL       seW58Init
        BL       DWPH83Init
        BL       openMcuCtrlPin
        LDR      r0,|L11.356|
        MOVS     r5,#1
        STR      r5,[r0,#0]
        LDR      r0,|L11.356|
        ADDS     r0,r0,#0x7c
        STR      r5,[r0,#0]
        MOVS     r0,#0x64
        BL       sysDelayMs
        LDR      r6,|L11.356|
        ADDS     r6,r6,#0x20
        B        |L11.94|
|L11.76|
        ADDS     r4,r4,#1
        MOVS     r0,#0x14
        BL       sysDelayMs
        CMP      r4,#0x32
        BLS      |L11.94|
        LDR      r0,|L11.360|
        STRB     r5,[r0,#0]
        B        |L11.108|
|L11.94|
        LDR      r0,[r6,#0]
        CMP      r0,#0
        BEQ      |L11.108|
        BL       DECT_DC
        CMP      r0,#0
        BNE      |L11.76|
|L11.108|
        BL       getConfig
        LDR      r0,|L11.364|
        LDR      r4,|L11.368|
        LDRB     r0,[r0,#0]  ; amp_volume
        STRB     r0,[r4,#0]
        CMP      r0,#0x19
        BLS      |L11.128|
        MOVS     r0,#0x19
        B        |L11.134|
|L11.128|
        CMP      r0,#9
        BCS      |L11.136|
        MOVS     r0,#9
|L11.134|
        STRB     r0,[r4,#0]
|L11.136|
        MOVS     r2,#4
        MOVS     r1,#0
        LDR      r0,|L11.372|
        BL       readBuf
        CMP      r0,#0
        BEQ      |L11.162|
        LDR      r7,|L11.376|
        MOVS     r6,#0
        LDRB     r0,[r7,#0]  ; dev_input
        CMP      r0,#0
        BEQ      |L11.166|
        B        |L11.170|
|L11.162|
        BL       bootLDROM
|L11.166|
        LDR      r0,|L11.380|
        STRB     r6,[r0,#0]
|L11.170|
        BL       DECT_DC
        CMP      r0,#0
        BEQ      |L11.182|
        LDR      r0,|L11.384|
        STR      r5,[r0,#0]  ; dc_time_stamp
|L11.182|
        MOVS     r2,#0
        MOVS     r1,#7
        LDR      r0,|L11.388|
        BL       GPIO_SET_MODE
        LDR      r0,|L11.384|
        LDR      r0,[r0,#0]  ; dc_time_stamp
        CMP      r0,#0
        BEQ      |L11.236|
        LDR      r0,|L11.392|
        BL       I2SClkInit
        BL       i2sStart
        LDR      r0,|L11.396|
        LDR      r0,[r0,#0]  ; dc_auto_down_flag
        CMP      r0,#0
        BEQ      |L11.224|
        CMP      r0,#5
        BEQ      |L11.230|
        B        |L11.280|
|L11.224|
        BL       enterStandby
        B        |L11.280|
|L11.230|
        BL       sleep
        B        |L11.280|
|L11.236|
        LDR      r0,|L11.356|
        ADDS     r0,r0,#0x30
        LDR      r0,[r0,#0]
        CMP      r0,#0
        BEQ      |L11.256|
        LDR      r0,|L11.400|
        STRB     r5,[r0,#0]
        LDR      r0,|L11.380|
        STRB     r6,[r0,#0]
        STRB     r6,[r7,#0]
|L11.256|
        LDR      r0,|L11.404|
        LDRB     r1,[r7,#0]  ; dev_input
        LDRB     r0,[r0,r1]
        LDR      r1,|L11.408|
        STRB     r0,[r1,#0]
        BL       ledColorSet
        BL       outStandby
        LDR      r0,|L11.364|
        LDRB     r1,[r4,#0]  ; volume_store
        STR      r1,[r0,#0]  ; amp_volume
|L11.280|
        MOVS     r4,#0xff
        ADDS     r4,#1
        LDR      r2,|L11.412|
        MOV      r1,r4
        MOVS     r0,#0
        BL       spiFlashRead
        LDR      r2,|L11.412|
        MOV      r1,r4
        LSLS     r0,r4,#8
        BL       spiFlashPageWrite
        LDR      r4,|L11.416|
        LDR      r7,|L11.420|
|L11.308|
        BL       btGetMsg
        BL       runTimedTasks
        BL       SYS_UnlockReg
        LDR      r0,[r4,#0]
        ORRS     r0,r0,r5
        STR      r0,[r4,#0]
        STR      r6,[r7,#0]
        B        |L11.308|
        ENDP

        DCW      0x0000
|L11.332|
        DCB      "main--01.\r\n",0
|L11.344|
        DCB      "  code1: ",0
        DCB      0
        DCB      0
|L11.356|
        DCD      0x50004238
|L11.360|
        DCD      factory_mode_flag
|L11.364|
        DCD      amp_volume
|L11.368|
        DCD      volume_store
|L11.372|
        DCD      ||area_number.21||
|L11.376|
        DCD      dev_input
|L11.380|
        DCD      bt_power_flag
|L11.384|
        DCD      dc_time_stamp
|L11.388|
        DCD      0x50004040
|L11.392|
        DCD      0x0000bb80
|L11.396|
        DCD      dc_auto_down_flag
|L11.400|
        DCD      NFC_flag
|L11.404|
        DCD      input_channel_color
|L11.408|
        DCD      state_color
|L11.412|
        DCD      ||.bss||
|L11.416|
        DCD      0x40004000
|L11.420|
        DCD      0x50000100

        AREA ||i.openMcuCtrlPin||, CODE, READONLY, ALIGN=2

openMcuCtrlPin PROC
        PUSH     {r4-r6,lr}
        LDR      r0,|L12.256|
        MOVS     r4,#0
        STR      r4,[r0,#0]
        LDR      r5,|L12.260|
        MOVS     r2,#1
        MOVS     r1,#9
        MOV      r0,r5
        BL       GPIO_SET_MODE
        MOVS     r2,#1
        MOVS     r1,#0xe
        MOV      r0,r5
        BL       GPIO_SET_MODE
        LDR      r6,|L12.260|
        MOVS     r2,#1
        SUBS     r6,r6,#0x40
        MOVS     r1,#0xe
        MOV      r0,r6
        BL       GPIO_SET_MODE
        LDR      r0,|L12.260|
        MOVS     r2,#1
        MOVS     r1,#0xd
        ADDS     r0,r0,#0x40
        BL       GPIO_SET_MODE
        LDR      r0,|L12.256|
        SUBS     r0,r0,#0x30
        STR      r4,[r0,#0]
        MOVS     r2,#1
        MOVS     r1,#0xd
        MOV      r0,r6
        BL       GPIO_SET_MODE
        LDR      r0,|L12.256|
        SUBS     r0,r0,#0x10
        STR      r4,[r0,#0]
        MOVS     r2,#1
        MOVS     r1,#5
        MOV      r0,r5
        BL       GPIO_SET_MODE
        MOVS     r2,#1
        MOVS     r1,#4
        MOV      r0,r5
        BL       GPIO_SET_MODE
        LDR      r4,|L12.264|
        MOVS     r2,#2
        MOVS     r1,#3
        MOV      r0,r4
        BL       GPIO_SET_MODE
        MOVS     r2,#2
        MOV      r1,r2
        MOV      r0,r4
        BL       GPIO_SET_MODE
        MOVS     r2,#2
        MOVS     r1,#0xb
        MOV      r0,r6
        BL       GPIO_SET_MODE
        MOVS     r2,#2
        MOVS     r1,#0xa
        MOV      r0,r6
        BL       GPIO_SET_MODE
        LDR      r1,|L12.268|
        LDR      r0,[r1,#4]
        MOVS     r2,#0xc
        ORRS     r0,r0,r2
        STR      r0,[r1,#4]
        LDR      r0,[r1,#0x14]
        MOVS     r2,#0xf
        LSLS     r2,r2,#24
        BICS     r0,r0,r2
        LSLS     r2,r4,#19
        ADDS     r0,r0,r2
        STR      r0,[r1,#0x14]
        MOVS     r2,#0
        MOVS     r1,#0xf
        MOV      r0,r6
        BL       GPIO_SET_MODE
        MOVS     r2,#0
        MOVS     r1,#8
        MOV      r0,r5
        BL       GPIO_SET_MODE
        LDR      r0,|L12.256|
        MOVS     r1,#1
        ADDS     r0,r0,#0x60
        STR      r1,[r0,#0]
        ADDS     r0,r0,#4
        STR      r1,[r0,#0]
        ADDS     r0,r0,#4
        STR      r1,[r0,#0]
        LDR      r4,|L12.260|
        MOV      r2,r1
        ADDS     r4,r4,#0x80
        MOV      r0,r4
        BL       GPIO_SET_MODE
        MOVS     r2,#1
        MOVS     r1,#2
        MOV      r0,r4
        BL       GPIO_SET_MODE
        MOVS     r2,#1
        MOVS     r1,#3
        MOV      r0,r4
        BL       GPIO_SET_MODE
        MOVS     r2,#0
        MOVS     r1,#0xa
        MOV      r0,r5
        BL       GPIO_SET_MODE
        MOVS     r2,#0
        MOVS     r1,#7
        MOV      r0,r5
        BL       GPIO_SET_MODE
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L12.256|
        DCD      0x50004264
|L12.260|
        DCD      0x50004040
|L12.264|
        DCD      0x50004140
|L12.268|
        DCD      0x50000040

        AREA ||i.spiSendWord||, CODE, READONLY, ALIGN=2

spiSendWord PROC
        PUSH     {r4,lr}
        LDR      r2,|L13.44|
        LDR      r3,[r2,#0]
        MOVS     r4,#0xf8
        BICS     r3,r3,r4
        CMP      r1,#0x20
        BNE      |L13.16|
        MOVS     r1,#0
|L13.16|
        LSLS     r1,r1,#3
        ORRS     r3,r3,r1
        STR      r3,[r2,#0]
        STR      r0,[r2,#0x20]
        LDR      r0,[r2,#0]
        MOVS     r1,#1
        ORRS     r0,r0,r1
        STR      r0,[r2,#0]
|L13.32|
        LDR      r0,[r2,#0]
        LSLS     r0,r0,#31
        LSRS     r0,r0,#31
        BNE      |L13.32|
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L13.44|
        DCD      0x40034000

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.bss||, DATA, NOINIT, ALIGN=2

wrbuf
        %        256

        AREA ||.data||, DATA, ALIGN=2

iwraddr
        DCD      0x00010000

        AREA ||area_number.18||, DATA, ALIGN=0

        EXPORTAS ||area_number.18||, ||.data||
COCO_KEY_BEFORE
        DCB      0x00

        AREA ||area_number.19||, DATA, ALIGN=2

        EXPORTAS ||area_number.19||, ||.data||
coco_local
        DCB      0x00,0x00,0x00

        AREA ||area_number.20||, DATA, ALIGN=0

        EXPORTAS ||area_number.20||, ||.data||
eeprom_test_data
        DCB      0x55

        AREA ||area_number.21||, DATA, ALIGN=2

        EXPORTAS ||area_number.21||, ||.data||
upgrade_buf
        DCD      0x00000000

__ARM_use_no_argv EQU 0

        EXPORT __ARM_use_no_argv
        EXPORT CLK_Init [CODE]
        EXPORT Erase_All_Chip [CODE]
        EXPORT Erase_Page_Data [CODE]
        EXPORT Hal_Init [CODE]
        EXPORT Program_Page_Data [CODE]
        EXPORT bootLDROM [CODE]
        EXPORT main [CODE]
        EXPORT wrbuf [DATA,SIZE=256]
        EXPORT iwraddr [DATA,SIZE=4]
        EXPORT COCO_KEY_BEFORE [DATA,SIZE=1]
        EXPORT coco_local [DATA,SIZE=3]
        EXPORT eeprom_test_data [DATA,SIZE=1]
        EXPORT upgrade_buf [DATA,SIZE=4]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT SystemCoreClockUpdate [CODE]
        IMPORT adcKeyClkInit [CODE]
        IMPORT irClkInit [CODE]
        IMPORT sysTaskInit [CODE]
        IMPORT dealPowerKey [CODE]
        IMPORT ledInit [CODE]
        IMPORT BTInit [CODE]
        IMPORT BTSendCmd [CODE]
        IMPORT uartdecode [CODE]
        IMPORT ledTaskInit [CODE]
        IMPORT adckeyTaskInit [CODE]
        IMPORT irKeyTaskInit [CODE]
        IMPORT cs8422Init [CODE]
        IMPORT seW58Init [CODE]
        IMPORT DWPH83Init [CODE]
        IMPORT sysDelayMs [CODE]
        IMPORT getConfig [CODE]
        IMPORT readBuf [CODE]
        IMPORT I2SClkInit [CODE]
        IMPORT i2sStart [CODE]
        IMPORT enterStandby [CODE]
        IMPORT sleep [CODE]
        IMPORT ledColorSet [CODE]
        IMPORT outStandby [CODE]
        IMPORT spiFlashRead [CODE]
        IMPORT spiFlashPageWrite [CODE]
        IMPORT btGetMsg [CODE]
        IMPORT runTimedTasks [CODE]
        IMPORT factory_mode_flag [DATA]
        IMPORT amp_volume [DATA]
        IMPORT volume_store [DATA]
        IMPORT dev_input [DATA]
        IMPORT bt_power_flag [DATA]
        IMPORT dc_time_stamp [DATA]
        IMPORT dc_auto_down_flag [DATA]
        IMPORT NFC_flag [DATA]
        IMPORT input_channel_color [DATA]
        IMPORT state_color [DATA]
        IMPORT flash_status [DATA]

        KEEP DECT_DC
        KEEP GPIO_SET_MODE
        KEEP SYS_UnlockReg
        KEEP SysTickInit
        KEEP openMcuCtrlPin
        KEEP spiSendWord

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,3
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
