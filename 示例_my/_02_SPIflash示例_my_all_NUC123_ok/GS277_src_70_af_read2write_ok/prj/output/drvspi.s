; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--min_array_alignment=4 --split_sections --debug -c --asm --info=totals -o.\output\drvspi.o --depend=.\output\drvspi.d --cpu=Cortex-M0 --apcs=interwork -I..\CMSIS\CM0\DeviceSupport\Nuvoton\NUC123Series -I..\CMSIS\CM0\CoreSupport -I..\INC\DrvInc -I..\INC\SysInc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -D__MICROLIB --omf_browse=.\output\drvspi.crf ..\DrvSrc\DrvSPI.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.CLK_GetPLLClockFreq||, CODE, READONLY, ALIGN=2

CLK_GetPLLClockFreq PROC
        PUSH     {r3,lr}
        ADR      r0,|L1.72|
        LDR      r0,[r0,#0]
        LDR      r1,|L1.76|
        STR      r0,[sp,#0]
        LDR      r1,[r1,#0x20]
        MOVS     r0,#0
        MOVS     r2,#5
        LSLS     r2,r2,#16
        TST      r1,r2
        BNE      |L1.68|
        LSLS     r0,r1,#12
        BPL      |L1.30|
        LDR      r0,|L1.80|
        B        |L1.32|
|L1.30|
        LDR      r0,|L1.84|
|L1.32|
        LSLS     r2,r1,#14
        BMI      |L1.68|
        LSLS     r2,r1,#16
        LSRS     r2,r2,#30
        MOV      r3,sp
        LDRB     r2,[r3,r2]
        LSLS     r3,r1,#23
        LSLS     r1,r1,#18
        LSRS     r3,r3,#23
        LSRS     r1,r1,#27
        ADDS     r3,r3,#2
        ADDS     r1,r1,#2
        LSRS     r0,r0,#2
        MULS     r1,r2,r1
        MULS     r0,r3,r0
        BL       __aeabi_uidivmod
        LSLS     r0,r0,#2
|L1.68|
        POP      {r3,pc}
        ENDP

        DCW      0x0000
|L1.72|
        DCB      1,2,2,4
|L1.76|
        DCD      0x50000200
|L1.80|
        DCD      0x01518000
|L1.84|
        DCD      0x00b71b00

        AREA ||i.DrvSPI_DeInit||, CODE, READONLY, ALIGN=2

DrvSPI_DeInit PROC
        LDR      r2,|L2.68|
        PUSH     {r4,lr}
        LDR      r1,|L2.72|
        CMP      r0,r2
        BNE      |L2.22|
        ASRS     r2,r0,#18
        LDR      r0,[r1,#8]
        BICS     r0,r0,r2
        STR      r0,[r1,#8]
        MOVS     r0,#0xe
        B        |L2.40|
|L2.22|
        LDR      r2,|L2.76|
        CMP      r0,r2
        BNE      |L2.46|
        MOVS     r2,#1
        LDR      r0,[r1,#8]
        LSLS     r2,r2,#13
        BICS     r0,r0,r2
        STR      r0,[r1,#8]
        MOVS     r0,#0xf
|L2.40|
        BL       NVIC_DisableIRQ
|L2.44|
        POP      {r4,pc}
|L2.46|
        LDR      r2,|L2.80|
        CMP      r0,r2
        BNE      |L2.44|
        MOVS     r0,#1
        LDR      r2,[r1,#8]
        LSLS     r0,r0,#14
        BICS     r2,r2,r0
        STR      r2,[r1,#8]
        MOVS     r0,#0x10
        B        |L2.40|
        ENDP

        DCW      0x0000
|L2.68|
        DCD      0x40030000
|L2.72|
        DCD      0x50000200
|L2.76|
        DCD      0x40034000
|L2.80|
        DCD      0x40130000

        AREA ||i.DrvSPI_DisableInt||, CODE, READONLY, ALIGN=2

DrvSPI_DisableInt PROC
        PUSH     {r4,lr}
        LDR      r1,[r0,#0]
        MOVS     r2,#1
        LSLS     r2,r2,#17
        BICS     r1,r1,r2
        STR      r1,[r0,#0]
        LDR      r1,|L3.48|
        CMP      r0,r1
        BNE      |L3.22|
        MOVS     r0,#0xe
        B        |L3.30|
|L3.22|
        LDR      r1,|L3.52|
        CMP      r0,r1
        BNE      |L3.36|
        MOVS     r0,#0xf
|L3.30|
        BL       NVIC_DisableIRQ
|L3.34|
        POP      {r4,pc}
|L3.36|
        LDR      r1,|L3.56|
        CMP      r0,r1
        BNE      |L3.34|
        MOVS     r0,#0x10
        B        |L3.30|
        ENDP

        DCW      0x0000
|L3.48|
        DCD      0x40030000
|L3.52|
        DCD      0x40034000
|L3.56|
        DCD      0x40130000

        AREA ||i.DrvSPI_EnableInt||, CODE, READONLY, ALIGN=2

DrvSPI_EnableInt PROC
        PUSH     {r4,lr}
        LDR      r1,[r0,#0]
        MOVS     r2,#1
        LSLS     r2,r2,#17
        ORRS     r1,r1,r2
        STR      r1,[r0,#0]
        LDR      r1,|L4.48|
        CMP      r0,r1
        BNE      |L4.22|
        MOVS     r0,#0xe
        B        |L4.30|
|L4.22|
        LDR      r1,|L4.52|
        CMP      r0,r1
        BNE      |L4.36|
        MOVS     r0,#0xf
|L4.30|
        BL       NVIC_EnableIRQ
|L4.34|
        POP      {r4,pc}
|L4.36|
        LDR      r1,|L4.56|
        CMP      r0,r1
        BNE      |L4.34|
        MOVS     r0,#0x10
        B        |L4.30|
        ENDP

        DCW      0x0000
|L4.48|
        DCD      0x40030000
|L4.52|
        DCD      0x40034000
|L4.56|
        DCD      0x40130000

        AREA ||i.DrvSPI_FIFOWrite8||, CODE, READONLY, ALIGN=1

DrvSPI_FIFOWrite8 PROC
        PUSH     {r4,r5,lr}
        MOVS     r3,#0
        MOVS     r5,#1
        LSLS     r5,r5,#27
        B        |L5.22|
|L5.10|
        LDR      r4,[r0,#0]
        TST      r4,r5
        BNE      |L5.10|
        LDRB     r4,[r1,r3]
        STR      r4,[r0,#0x20]
        ADDS     r3,r3,#1
|L5.22|
        CMP      r3,r2
        BCC      |L5.10|
        MOVS     r0,#1
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.DrvSPI_GetClock1Freq||, CODE, READONLY, ALIGN=1

DrvSPI_GetClock1Freq PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        BL       DrvSPI_GetSourceClockFreq
        LDR      r1,[r4,#4]
        LSLS     r1,r1,#24
        LSRS     r1,r1,#24
        BEQ      |L6.22|
        LSRS     r0,r0,#1
        BL       __aeabi_uidivmod
|L6.22|
        POP      {r4,pc}
        ENDP


        AREA ||i.DrvSPI_GetClock2Freq||, CODE, READONLY, ALIGN=1

DrvSPI_GetClock2Freq PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        BL       DrvSPI_GetSourceClockFreq
        LDR      r1,[r4,#4]
        LSRS     r0,r0,#1
        LSLS     r1,r1,#8
        LSRS     r1,r1,#24
        ADDS     r1,r1,#1
        BL       __aeabi_uidivmod
        POP      {r4,pc}
        ENDP


        AREA ||i.DrvSPI_GetSourceClockFreq||, CODE, READONLY, ALIGN=2

DrvSPI_GetSourceClockFreq PROC
        PUSH     {r4-r6,lr}
        MOV      r1,r0
        LDR      r2,|L8.112|
        LDR      r0,|L8.108|
        LDR      r5,|L8.116|
        CMP      r1,r2
        BNE      |L8.20|
        LDR      r1,[r5,#0x1c]
        MOVS     r2,#0x10
        B        |L8.34|
|L8.20|
        LDR      r2,|L8.120|
        CMP      r1,r2
        LDR      r1,[r5,#0x1c]
        BNE      |L8.32|
        MOVS     r2,#0x20
        B        |L8.34|
|L8.32|
        MOVS     r2,#0x40
|L8.34|
        ANDS     r1,r1,r2
        BEQ      |L8.86|
        CMP      r1,#0x10
        BEQ      |L8.50|
        CMP      r1,#0x20
        BEQ      |L8.50|
        CMP      r1,#0x40
        BNE      |L8.84|
|L8.50|
        LDR      r1,[r5,#0x10]
        LSLS     r4,r1,#29
        LSRS     r4,r4,#29
        BEQ      |L8.72|
        CMP      r4,#2
        BEQ      |L8.92|
        CMP      r4,#1
        BEQ      |L8.92|
        CMP      r4,#3
        BEQ      |L8.104|
        LDR      r0,|L8.124|
|L8.72|
        LDR      r1,[r5,#0x18]
        LSLS     r1,r1,#28
        LSRS     r1,r1,#28
        ADDS     r1,r1,#1
        BL       __aeabi_uidivmod
|L8.84|
        POP      {r4-r6,pc}
|L8.86|
        BL       CLK_GetPLLClockFreq
        POP      {r4-r6,pc}
|L8.92|
        BL       CLK_GetPLLClockFreq
        CMP      r4,#1
        BNE      |L8.72|
        LSRS     r0,r0,#1
        B        |L8.72|
|L8.104|
        LDR      r0,|L8.128|
        B        |L8.72|
        ENDP

|L8.108|
        DCD      0x00b71b00
|L8.112|
        DCD      0x40030000
|L8.116|
        DCD      0x50000200
|L8.120|
        DCD      0x40034000
|L8.124|
        DCD      0x01518000
|L8.128|
        DCD      0x00002710

        AREA ||i.DrvSPI_Init||, CODE, READONLY, ALIGN=2

DrvSPI_Init PROC
        PUSH     {r0-r7,lr}
        LDR      r1,|L9.148|
        LDR      r7,|L9.144|
        MOV      r5,r3
        ASRS     r2,r7,#18
        LSLS     r3,r1,#4
        LSLS     r6,r1,#5
        SUB      sp,sp,#4
        MOV      r4,r0
        CMP      r0,r7
        BNE      |L9.28|
        LDR      r0,[r1,#8]
        ORRS     r0,r0,r2
        B        |L9.50|
|L9.28|
        LDR      r0,|L9.152|
        CMP      r4,r0
        BNE      |L9.40|
        LDR      r0,[r1,#8]
        ORRS     r0,r0,r3
        B        |L9.50|
|L9.40|
        LDR      r0,|L9.156|
        CMP      r4,r0
        BNE      |L9.52|
        LDR      r0,[r1,#8]
        ORRS     r0,r0,r6
|L9.50|
        STR      r0,[r1,#8]
|L9.52|
        CMP      r4,r7
        BNE      |L9.60|
        MOV      r0,r2
        B        |L9.78|
|L9.60|
        LDR      r0,|L9.152|
        CMP      r4,r0
        BNE      |L9.70|
        MOV      r0,r3
        B        |L9.78|
|L9.70|
        LDR      r0,|L9.156|
        CMP      r4,r0
        BNE      |L9.88|
        MOV      r0,r6
|L9.78|
        BL       SYS_RESET_IP2
        CMP      r5,#0x20
        BEQ      |L9.94|
        B        |L9.96|
|L9.88|
        MOVS     r0,#0
|L9.90|
        ADD      sp,sp,#0x14
        POP      {r4-r7,pc}
|L9.94|
        MOVS     r5,#0
|L9.96|
        LDR      r0,[r4,#0]
        MOVS     r1,#0xf8
        BICS     r0,r0,r1
        CMP      r5,#0x20
        BNE      |L9.108|
        MOVS     r5,#0
|L9.108|
        LSLS     r1,r5,#3
        ORRS     r0,r0,r1
        STR      r0,[r4,#0]
        LDR      r0,[sp,#8]
        LDR      r1,[r4,#0]
        MOVS     r2,#1
        LSLS     r2,r2,#18
        BICS     r1,r1,r2
        ORRS     r1,r1,r0
        STR      r1,[r4,#0]
        LDR      r0,[sp,#0xc]
        LDR      r1,[r4,#0]
        MOVS     r2,#6
        BICS     r1,r1,r2
        ORRS     r1,r1,r0
        STR      r1,[r4,#0]
        MOVS     r0,#1
        B        |L9.90|
        ENDP

|L9.144|
        DCD      0x40030000
|L9.148|
        DCD      0x50000200
|L9.152|
        DCD      0x40034000
|L9.156|
        DCD      0x40130000

        AREA ||i.DrvSPI_SetClockFreq||, CODE, READONLY, ALIGN=1

DrvSPI_SetClockFreq PROC
        PUSH     {r0-r2,r4-r7,lr}
        SUB      sp,sp,#8
        MOV      r7,r2
        MOV      r5,r0
        MOVS     r6,#0
        BL       DrvSPI_GetSourceClockFreq
        STR      r0,[sp,#0]
        CMP      r7,#0
        BEQ      |L10.94|
        MOV      r1,r7
        BL       __aeabi_uidivmod
        ADDS     r0,r0,#1
        LSRS     r4,r0,#1
        SUBS     r4,r4,#1
        CMP      r4,#0xff
        BLS      |L10.38|
        MOVS     r4,#0xff
|L10.38|
        LSLS     r1,r4,#1
        ADDS     r1,r1,#2
        LDR      r0,[sp,#0]
        BL       __aeabi_uidivmod
        MOV      r6,r0
        CMP      r0,r7
        BLS      |L10.56|
        ADDS     r4,r4,#1
|L10.56|
        LDR      r0,[r5,#4]
        MOVS     r1,#0xff
        LSLS     r1,r1,#16
        BICS     r0,r0,r1
        LSLS     r1,r4,#16
|L10.66|
        ORRS     r0,r0,r1
        STR      r0,[r5,#4]
        LDR      r0,[sp,#0xc]
        CMP      r0,#0
        BEQ      |L10.154|
        MOV      r1,r0
        LDR      r0,[sp,#0]
        BL       __aeabi_uidivmod
        LSRS     r4,r0,#1
        CMP      r4,#0x7f
        BLS      |L10.102|
        MOVS     r4,#0x7f
        B        |L10.106|
|L10.94|
        LDR      r0,[r5,#4]
        MOVS     r1,#0xff
        LSLS     r1,r1,#16
        B        |L10.66|
|L10.102|
        CMP      r4,#0
        BEQ      |L10.150|
|L10.106|
        LSLS     r1,r4,#1
        LDR      r0,[sp,#0]
        BL       __aeabi_uidivmod
        MOV      r6,r0
|L10.116|
        LDR      r0,[sp,#0xc]
        CMP      r6,r0
        BLS      |L10.134|
        ADDS     r4,r4,#1
        LSLS     r1,r4,#1
        LDR      r0,[sp,#0]
        BL       __aeabi_uidivmod
        MOV      r6,r0
|L10.134|
        LDR      r0,[r5,#4]
        LSRS     r0,r0,#8
        LSLS     r0,r0,#8
        ORRS     r0,r0,r4
|L10.142|
        STR      r0,[r5,#4]
        MOV      r0,r6
        ADD      sp,sp,#0x14
        POP      {r4-r7,pc}
|L10.150|
        LDR      r6,[sp,#0]
        B        |L10.116|
|L10.154|
        LDR      r0,[r5,#4]
        MOVS     r1,#0xff
        ORRS     r0,r0,r1
        B        |L10.142|
        ENDP


        AREA ||i.NVIC_DisableIRQ||, CODE, READONLY, ALIGN=2

NVIC_DisableIRQ PROC
        LSLS     r1,r0,#27
        LSRS     r1,r1,#27
        MOVS     r0,#1
        LSLS     r0,r0,r1
        LDR      r1,|L11.16|
        STR      r0,[r1,#0]
        BX       lr
        ENDP

        DCW      0x0000
|L11.16|
        DCD      0xe000e180

        AREA ||i.NVIC_EnableIRQ||, CODE, READONLY, ALIGN=2

NVIC_EnableIRQ PROC
        LSLS     r1,r0,#27
        LSRS     r1,r1,#27
        MOVS     r0,#1
        LSLS     r0,r0,r1
        LDR      r1,|L12.16|
        STR      r0,[r1,#0]
        BX       lr
        ENDP

        DCW      0x0000
|L12.16|
        DCD      0xe000e100

        AREA ||i.SPI_Disable3WireStartInt||, CODE, READONLY, ALIGN=2

SPI_Disable3WireStartInt PROC
        PUSH     {r4,lr}
        LDR      r1,[r0,#0x3c]
        MOVS     r2,#1
        LSLS     r2,r2,#10
        BICS     r1,r1,r2
        STR      r1,[r0,#0x3c]
        LDR      r1,|L13.48|
        CMP      r0,r1
        BNE      |L13.22|
        MOVS     r0,#0xe
        B        |L13.30|
|L13.22|
        LDR      r1,|L13.52|
        CMP      r0,r1
        BNE      |L13.36|
        MOVS     r0,#0xf
|L13.30|
        BL       NVIC_DisableIRQ
|L13.34|
        POP      {r4,pc}
|L13.36|
        LDR      r1,|L13.56|
        CMP      r0,r1
        BNE      |L13.34|
        MOVS     r0,#0x10
        B        |L13.30|
        ENDP

        DCW      0x0000
|L13.48|
        DCD      0x40030000
|L13.52|
        DCD      0x40034000
|L13.56|
        DCD      0x40130000

        AREA ||i.SPI_Enable3WireStartInt||, CODE, READONLY, ALIGN=2

SPI_Enable3WireStartInt PROC
        PUSH     {r4,lr}
        LDR      r1,[r0,#0x3c]
        MOVS     r2,#1
        LSLS     r2,r2,#10
        ORRS     r1,r1,r2
        STR      r1,[r0,#0x3c]
        LDR      r1,|L14.48|
        CMP      r0,r1
        BNE      |L14.22|
        MOVS     r0,#0xe
        B        |L14.30|
|L14.22|
        LDR      r1,|L14.52|
        CMP      r0,r1
        BNE      |L14.36|
        MOVS     r0,#0xf
|L14.30|
        BL       NVIC_EnableIRQ
|L14.34|
        POP      {r4,pc}
|L14.36|
        LDR      r1,|L14.56|
        CMP      r0,r1
        BNE      |L14.34|
        MOVS     r0,#0x10
        B        |L14.30|
        ENDP

        DCW      0x0000
|L14.48|
        DCD      0x40030000
|L14.52|
        DCD      0x40034000
|L14.56|
        DCD      0x40130000

        AREA ||i.SPI_FIFORead16||, CODE, READONLY, ALIGN=1

SPI_FIFORead16 PROC
        PUSH     {r4-r6,lr}
        MOVS     r3,#0
        MOVS     r5,#1
        LSLS     r5,r5,#24
        B        |L15.24|
|L15.10|
        LDR      r4,[r0,#0]
        TST      r4,r5
        BNE      |L15.10|
        LDR      r4,[r0,#0x10]
        LSLS     r6,r3,#1
        STRH     r4,[r1,r6]
        ADDS     r3,r3,#1
|L15.24|
        CMP      r3,r2
        BCC      |L15.10|
        MOVS     r0,#1
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.SPI_FIFORead32||, CODE, READONLY, ALIGN=1

SPI_FIFORead32 PROC
        PUSH     {r4-r6,lr}
        MOVS     r3,#0
        MOVS     r5,#1
        LSLS     r5,r5,#24
        B        |L16.24|
|L16.10|
        LDR      r4,[r0,#0]
        TST      r4,r5
        BNE      |L16.10|
        LDR      r4,[r0,#0x10]
        LSLS     r6,r3,#2
        STR      r4,[r1,r6]
        ADDS     r3,r3,#1
|L16.24|
        CMP      r3,r2
        BCC      |L16.10|
        MOVS     r0,#1
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.SPI_FIFORead8||, CODE, READONLY, ALIGN=1

SPI_FIFORead8 PROC
        PUSH     {r4,r5,lr}
        MOVS     r3,#0
        MOVS     r5,#1
        LSLS     r5,r5,#24
        B        |L17.22|
|L17.10|
        LDR      r4,[r0,#0]
        TST      r4,r5
        BNE      |L17.10|
        LDR      r4,[r0,#0x10]
        STRB     r4,[r1,r3]
        ADDS     r3,r3,#1
|L17.22|
        CMP      r3,r2
        BCC      |L17.10|
        MOVS     r0,#1
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.SPI_FIFOReadWrite16||, CODE, READONLY, ALIGN=1

SPI_FIFOReadWrite16 PROC
        PUSH     {r4-r7,lr}
        MOV      r12,r3
        MOV      r3,r1
        MOVS     r4,#0
        MOVS     r1,#1
        MOV      r5,r4
        LSLS     r1,r1,#24
        B        |L18.74|
|L18.16|
        LDR      r6,[r0,#0x10]
        LSLS     r7,r4,#2
        STR      r6,[r2,r7]
        ADDS     r4,r4,#1
|L18.24|
        LDR      r6,[r0,#0]
        TST      r6,r1
        BEQ      |L18.16|
|L18.30|
        LDR      r6,[r0,#0]
        MOVS     r7,#1
        LSLS     r7,r7,#27
        TST      r6,r7
        BNE      |L18.24|
        CMP      r3,#0
        BEQ      |L18.52|
        LSLS     r6,r5,#1
        LDRH     r6,[r3,r6]
|L18.48|
        STR      r6,[r0,#0x20]
        B        |L18.66|
|L18.52|
        MOVS     r6,#0
        MVNS     r6,r6
        B        |L18.48|
|L18.58|
        LDR      r6,[r0,#0x10]
        LSLS     r7,r4,#2
        STR      r6,[r2,r7]
        ADDS     r4,r4,#1
|L18.66|
        LDR      r6,[r0,#0]
        TST      r6,r1
        BEQ      |L18.58|
        ADDS     r5,r5,#1
|L18.74|
        CMP      r5,r12
        BCC      |L18.30|
        POP      {r4-r7,pc}
        ENDP


        AREA ||i.SPI_FIFOReadWrite32||, CODE, READONLY, ALIGN=1

SPI_FIFOReadWrite32 PROC
        PUSH     {r4-r7,lr}
        MOV      r12,r3
        MOV      r3,r1
        MOVS     r4,#0
        MOVS     r1,#1
        MOV      r5,r4
        LSLS     r1,r1,#24
        B        |L19.74|
|L19.16|
        LDR      r6,[r0,#0x10]
        LSLS     r7,r4,#2
        STR      r6,[r2,r7]
        ADDS     r4,r4,#1
|L19.24|
        LDR      r6,[r0,#0]
        TST      r6,r1
        BEQ      |L19.16|
|L19.30|
        LDR      r6,[r0,#0]
        MOVS     r7,#1
        LSLS     r7,r7,#27
        TST      r6,r7
        BNE      |L19.24|
        CMP      r3,#0
        BEQ      |L19.52|
        LSLS     r6,r5,#2
        LDR      r6,[r3,r6]
|L19.48|
        STR      r6,[r0,#0x20]
        B        |L19.66|
|L19.52|
        MOVS     r6,#0
        MVNS     r6,r6
        B        |L19.48|
|L19.58|
        LDR      r6,[r0,#0x10]
        LSLS     r7,r4,#2
        STR      r6,[r2,r7]
        ADDS     r4,r4,#1
|L19.66|
        LDR      r6,[r0,#0]
        TST      r6,r1
        BEQ      |L19.58|
        ADDS     r5,r5,#1
|L19.74|
        CMP      r5,r12
        BCC      |L19.30|
        POP      {r4-r7,pc}
        ENDP


        AREA ||i.SPI_FIFOReadWrite8||, CODE, READONLY, ALIGN=1

SPI_FIFOReadWrite8 PROC
        PUSH     {r4-r7,lr}
        MOVS     r4,#0
        MOVS     r7,#1
        MOV      r12,r3
        MOV      r5,r4
        LSLS     r7,r7,#24
        B        |L20.68|
|L20.14|
        LDR      r6,[r0,#0x10]
        STRB     r6,[r2,r4]
        ADDS     r4,r4,#1
|L20.20|
        LDR      r6,[r0,#0]
        TST      r6,r7
        BNE      |L20.32|
        B        |L20.14|
|L20.28|
        MOVS     r3,#1
        LSLS     r3,r3,#27
|L20.32|
        LDR      r6,[r0,#0]
        TST      r6,r3
        BNE      |L20.20|
        CMP      r1,#0
        BEQ      |L20.48|
        LDRB     r3,[r1,r5]
|L20.44|
        STR      r3,[r0,#0x20]
        B        |L20.60|
|L20.48|
        MOVS     r3,#0
        MVNS     r3,r3
        B        |L20.44|
|L20.54|
        LDR      r6,[r0,#0x10]
        STRB     r6,[r2,r4]
        ADDS     r4,r4,#1
|L20.60|
        LDR      r3,[r0,#0]
        TST      r3,r7
        BEQ      |L20.54|
        ADDS     r5,r5,#1
|L20.68|
        CMP      r5,r12
        BCC      |L20.28|
        POP      {r4-r7,pc}
        ENDP


        AREA ||i.SPI_FIFOWrite16||, CODE, READONLY, ALIGN=1

SPI_FIFOWrite16 PROC
        PUSH     {r4,r5,lr}
        MOVS     r3,#0
        MOVS     r5,#1
        LSLS     r5,r5,#27
        B        |L21.24|
|L21.10|
        LDR      r4,[r0,#0]
        TST      r4,r5
        BNE      |L21.10|
        LSLS     r4,r3,#1
        LDRH     r4,[r1,r4]
        STR      r4,[r0,#0x20]
        ADDS     r3,r3,#1
|L21.24|
        CMP      r3,r2
        BCC      |L21.10|
        MOVS     r0,#1
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.SPI_FIFOWrite32||, CODE, READONLY, ALIGN=1

SPI_FIFOWrite32 PROC
        PUSH     {r4,r5,lr}
        MOVS     r3,#0
        MOVS     r5,#1
        LSLS     r5,r5,#27
        B        |L22.24|
|L22.10|
        LDR      r4,[r0,#0]
        TST      r4,r5
        BNE      |L22.10|
        LSLS     r4,r3,#2
        LDR      r4,[r1,r4]
        STR      r4,[r0,#0x20]
        ADDS     r3,r3,#1
|L22.24|
        CMP      r3,r2
        BCC      |L22.10|
        MOVS     r0,#1
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.SPI_SetFIFOMode||, CODE, READONLY, ALIGN=1

SPI_SetFIFOMode PROC
        LDR      r2,[r0,#0]
        MOVS     r3,#0xf
        LSLS     r3,r3,#12
        BICS     r2,r2,r3
        LSLS     r1,r1,#12
        ORRS     r2,r2,r1
        STR      r2,[r0,#0]
        LDR      r1,[r0,#0]
        MOVS     r2,#1
        LSLS     r2,r2,#21
        ORRS     r1,r1,r2
        STR      r1,[r0,#0]
        BX       lr
        ENDP


        AREA ||i.SYS_RESET_IP2||, CODE, READONLY, ALIGN=1

SYS_RESET_IP2 PROC
        MOVS     r1,#5
        LSLS     r1,r1,#28
        LDR      r2,[r1,#0xc]
        ORRS     r2,r2,r0
        STR      r2,[r1,#0xc]
        LDR      r2,[r1,#0xc]
        BICS     r2,r2,r0
        STR      r2,[r1,#0xc]
        BX       lr
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        EXPORT DrvSPI_DeInit [CODE]
        EXPORT DrvSPI_DisableInt [CODE]
        EXPORT DrvSPI_EnableInt [CODE]
        EXPORT DrvSPI_FIFOWrite8 [CODE]
        EXPORT DrvSPI_GetClock1Freq [CODE]
        EXPORT DrvSPI_GetClock2Freq [CODE]
        EXPORT DrvSPI_GetSourceClockFreq [CODE]
        EXPORT DrvSPI_Init [CODE]
        EXPORT DrvSPI_SetClockFreq [CODE]
        EXPORT SPI_Disable3WireStartInt [CODE]
        EXPORT SPI_Enable3WireStartInt [CODE]
        EXPORT SPI_FIFORead16 [CODE]
        EXPORT SPI_FIFORead32 [CODE]
        EXPORT SPI_FIFORead8 [CODE]
        EXPORT SPI_FIFOReadWrite16 [CODE]
        EXPORT SPI_FIFOReadWrite32 [CODE]
        EXPORT SPI_FIFOReadWrite8 [CODE]
        EXPORT SPI_FIFOWrite16 [CODE]
        EXPORT SPI_FIFOWrite32 [CODE]
        EXPORT SPI_SetFIFOMode [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT __aeabi_uidivmod [CODE]

        KEEP CLK_GetPLLClockFreq
        KEEP NVIC_DisableIRQ
        KEEP NVIC_EnableIRQ
        KEEP SYS_RESET_IP2

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,3
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
