; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--min_array_alignment=4 --split_sections --debug -c --asm --info=totals -o.\output\drvtimer.o --depend=.\output\drvtimer.d --cpu=Cortex-M0 --apcs=interwork -I..\CMSIS\CM0\DeviceSupport\Nuvoton\NUC123Series -I..\CMSIS\CM0\CoreSupport -I..\INC\DrvInc -I..\INC\SysInc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -D__MICROLIB --omf_browse=.\output\drvtimer.crf ..\DrvSrc\DrvTimer.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.APBCLK_DISABLE||, CODE, READONLY, ALIGN=2

APBCLK_DISABLE PROC
        LDR      r1,|L1.12|
        LDR      r2,[r1,#8]
        BICS     r2,r2,r0
        STR      r2,[r1,#8]
        BX       lr
        ENDP

        DCW      0x0000
|L1.12|
        DCD      0x50000200

        AREA ||i.APBCLK_ENABLE||, CODE, READONLY, ALIGN=2

APBCLK_ENABLE PROC
        LDR      r1,|L2.12|
        LDR      r2,[r1,#8]
        ORRS     r2,r2,r0
        STR      r2,[r1,#8]
        BX       lr
        ENDP

        DCW      0x0000
|L2.12|
        DCD      0x50000200

        AREA ||i.DrvTIMER_DeInit||, CODE, READONLY, ALIGN=2

DrvTIMER_DeInit PROC
        PUSH     {r4,lr}
        MOVS     r1,#0
        STR      r1,[r0,#0]
        LDR      r1,|L3.72|
        CMP      r0,r1
        BNE      |L3.22|
        MOVS     r0,#4
        BL       APBCLK_DISABLE
        MOVS     r0,#8
        B        |L3.38|
|L3.22|
        LDR      r1,|L3.72|
        ADDS     r1,r1,#0x20
        CMP      r0,r1
        BNE      |L3.44|
        MOVS     r0,#8
        BL       APBCLK_DISABLE
        MOVS     r0,#9
|L3.38|
        BL       NVIC_DisableIRQ
        POP      {r4,pc}
|L3.44|
        LDR      r1,|L3.76|
        CMP      r0,r1
        BNE      |L3.60|
        MOVS     r0,#0x10
        BL       APBCLK_DISABLE
        MOVS     r0,#0xa
        B        |L3.38|
|L3.60|
        MOVS     r0,#0x20
        BL       APBCLK_DISABLE
        MOVS     r0,#0xb
        B        |L3.38|
        ENDP

        DCW      0x0000
|L3.72|
        DCD      0x40010000
|L3.76|
        DCD      0x40110000

        AREA ||i.DrvTIMER_DisableInt||, CODE, READONLY, ALIGN=2

DrvTIMER_DisableInt PROC
        PUSH     {r4,lr}
        LDR      r1,[r0,#0]
        MOVS     r2,#1
        LSLS     r2,r2,#29
        BICS     r1,r1,r2
        STR      r1,[r0,#0]
        LDR      r1,[r0,#0x14]
        MOVS     r2,#0x20
        BICS     r1,r1,r2
        STR      r1,[r0,#0x14]
        LDR      r1,|L4.60|
        CMP      r0,r1
        BNE      |L4.30|
        MOVS     r0,#8
        B        |L4.40|
|L4.30|
        LDR      r1,|L4.60|
        ADDS     r1,r1,#0x20
        CMP      r0,r1
        BNE      |L4.46|
        MOVS     r0,#9
|L4.40|
        BL       NVIC_DisableIRQ
        POP      {r4,pc}
|L4.46|
        LDR      r1,|L4.64|
        CMP      r0,r1
        BNE      |L4.56|
        MOVS     r0,#0xa
        B        |L4.40|
|L4.56|
        MOVS     r0,#0xb
        B        |L4.40|
        ENDP

|L4.60|
        DCD      0x40010000
|L4.64|
        DCD      0x40110000

        AREA ||i.DrvTIMER_EnableInt||, CODE, READONLY, ALIGN=2

DrvTIMER_EnableInt PROC
        PUSH     {r4,lr}
        LDR      r2,[r0,#8]
        STR      r2,[r0,#8]
        LSLS     r2,r1,#2
        BPL      |L5.20|
        LDR      r2,[r0,#0]
        MOVS     r3,#1
        LSLS     r3,r3,#29
        ORRS     r2,r2,r3
        STR      r2,[r0,#0]
|L5.20|
        LSLS     r1,r1,#26
        BPL      |L5.32|
        LDR      r1,[r0,#0x14]
        MOVS     r2,#0x20
        ORRS     r1,r1,r2
        STR      r1,[r0,#0x14]
|L5.32|
        LDR      r1,|L5.72|
        CMP      r0,r1
        BNE      |L5.42|
        MOVS     r0,#8
        B        |L5.52|
|L5.42|
        LDR      r1,|L5.72|
        ADDS     r1,r1,#0x20
        CMP      r0,r1
        BNE      |L5.58|
        MOVS     r0,#9
|L5.52|
        BL       NVIC_EnableIRQ
        POP      {r4,pc}
|L5.58|
        LDR      r1,|L5.76|
        CMP      r0,r1
        BNE      |L5.68|
        MOVS     r0,#0xa
        B        |L5.52|
|L5.68|
        MOVS     r0,#0xb
        B        |L5.52|
        ENDP

|L5.72|
        DCD      0x40010000
|L5.76|
        DCD      0x40110000

        AREA ||i.DrvTIMER_Init||, CODE, READONLY, ALIGN=2

DrvTIMER_Init PROC
        PUSH     {r3-r7,lr}
        MOV      r4,r0
        LDR      r0,|L6.76|
        MOV      r5,r3
        MOV      r6,r2
        MOV      r7,r1
        CMP      r4,r0
        BNE      |L6.20|
        MOVS     r0,#4
        B        |L6.44|
|L6.20|
        LDR      r0,|L6.76|
        ADDS     r0,r0,#0x20
        CMP      r4,r0
        BNE      |L6.32|
        MOVS     r0,#8
        B        |L6.44|
|L6.32|
        LDR      r0,|L6.80|
        CMP      r4,r0
        BNE      |L6.42|
        MOVS     r0,#0x10
        B        |L6.44|
|L6.42|
        MOVS     r0,#0x20
|L6.44|
        BL       APBCLK_ENABLE
        LDR      r0,[r4,#8]
        MOVS     r1,#3
        ORRS     r0,r0,r1
        STR      r0,[r4,#8]
        LDR      r0,[r4,#0x18]
        MOVS     r1,#1
        ORRS     r0,r0,r1
        STR      r0,[r4,#0x18]
        STR      r6,[r4,#4]
        LDR      r1,|L6.84|
        ADDS     r0,r5,r7
        ADDS     r0,r0,r1
        STR      r0,[r4,#0]
        POP      {r3-r7,pc}
        ENDP

|L6.76|
        DCD      0x40010000
|L6.80|
        DCD      0x40110000
|L6.84|
        DCD      0x02010000

        AREA ||i.DrvWDT_DeInit||, CODE, READONLY, ALIGN=2

DrvWDT_DeInit PROC
        PUSH     {r4,lr}
        BL       SYS_UnlockReg
        LDR      r0,|L7.40|
        LDR      r1,[r0,#0]
        MOVS     r2,#0x80
        BICS     r1,r1,r2
        STR      r1,[r0,#0]
        BL       WDT_DISABLE_INT
        MOVS     r0,#1
        BL       NVIC_DisableIRQ
        MOVS     r0,#1
        BL       APBCLK_DISABLE
        LDR      r1,|L7.44|
        MOVS     r0,#0
        STR      r0,[r1,#0]
        POP      {r4,pc}
        ENDP

|L7.40|
        DCD      0x40004000
|L7.44|
        DCD      0x50000100

        AREA ||i.DrvWDT_DisableInt||, CODE, READONLY, ALIGN=2

DrvWDT_DisableInt PROC
        PUSH     {r4,lr}
        BL       SYS_UnlockReg
        BL       WDT_DISABLE_INT
        MOVS     r0,#1
        BL       NVIC_DisableIRQ
        LDR      r1,|L8.24|
        MOVS     r0,#0
        STR      r0,[r1,#0]
        POP      {r4,pc}
        ENDP

|L8.24|
        DCD      0x50000100

        AREA ||i.DrvWDT_EnableInt||, CODE, READONLY, ALIGN=2

DrvWDT_EnableInt PROC
        PUSH     {r4,lr}
        BL       SYS_UnlockReg
        LDR      r0,|L9.40|
        LDR      r1,[r0,#0]
        MOVS     r2,#8
        ORRS     r1,r1,r2
        STR      r1,[r0,#0]
        LDR      r1,[r0,#0]
        MOVS     r2,#0x40
        ORRS     r1,r1,r2
        STR      r1,[r0,#0]
        MOVS     r0,#1
        BL       NVIC_EnableIRQ
        LDR      r1,|L9.44|
        MOVS     r0,#0
        STR      r0,[r1,#0]
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L9.40|
        DCD      0x40004000
|L9.44|
        DCD      0x50000100

        AREA ||i.DrvWDT_Init||, CODE, READONLY, ALIGN=2

DrvWDT_Init PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r2
        MOV      r4,r1
        MOV      r6,r0
        BL       SYS_UnlockReg
        MOVS     r0,#1
        BL       APBCLK_ENABLE
        LDR      r0,|L10.60|
        LDR      r1,[r0,#0x14]
        LSRS     r1,r1,#2
        LSLS     r1,r1,#2
        ORRS     r1,r1,r4
        STR      r1,[r0,#0x14]
        LDR      r0,|L10.64|
        LSLS     r1,r6,#24
        LDR      r2,[r0,#0]
        MOVS     r3,#7
        LSLS     r3,r3,#8
        BICS     r2,r2,r3
        LSRS     r1,r1,#16
        ORRS     r2,r2,r1
        STR      r2,[r0,#0]
        UXTB     r1,r5
        STR      r1,[r0,#4]
        LDR      r1,|L10.68|
        MOVS     r0,#0
        STR      r0,[r1,#0]
        POP      {r4-r6,pc}
        ENDP

|L10.60|
        DCD      0x50000200
|L10.64|
        DCD      0x40004000
|L10.68|
        DCD      0x50000100

        AREA ||i.DrvWWDT_Init||, CODE, READONLY, ALIGN=2

DrvWWDT_Init PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r2
        MOV      r5,r1
        MOV      r6,r0
        BL       SYS_UnlockReg
        LDR      r1,|L11.52|
        LDR      r0,[r1,#0x1c]
        MOVS     r2,#3
        LSLS     r2,r2,#16
        BICS     r0,r0,r2
        ORRS     r0,r0,r4
        STR      r0,[r1,#0x1c]
        LSLS     r0,r6,#16
        LSLS     r1,r5,#8
        ORRS     r0,r0,r1
        LDR      r1,|L11.56|
        ADDS     r0,r0,#3
        STR      r0,[r1,#4]
        MOVS     r0,#1
        BL       NVIC_EnableIRQ
        LDR      r1,|L11.60|
        MOVS     r0,#0
        STR      r0,[r1,#0]
        POP      {r4-r6,pc}
        ENDP

|L11.52|
        DCD      0x50000200
|L11.56|
        DCD      0x40004100
|L11.60|
        DCD      0x50000100

        AREA ||i.DrvWWDT_IsResetSource||, CODE, READONLY, ALIGN=2

DrvWWDT_IsResetSource PROC
        LDR      r2,|L12.20|
        LDR      r0,[r2,#8]
        MOVS     r3,#2
        ANDS     r0,r0,r3
        BEQ      |L12.16|
        LDR      r1,[r2,#8]
        ORRS     r1,r1,r3
        STR      r1,[r2,#8]
|L12.16|
        UXTB     r0,r0
        BX       lr
        ENDP

|L12.20|
        DCD      0x40004100

        AREA ||i.NVIC_DisableIRQ||, CODE, READONLY, ALIGN=2

NVIC_DisableIRQ PROC
        LSLS     r1,r0,#27
        LSRS     r1,r1,#27
        MOVS     r0,#1
        LSLS     r0,r0,r1
        LDR      r1,|L13.16|
        STR      r0,[r1,#0]
        BX       lr
        ENDP

        DCW      0x0000
|L13.16|
        DCD      0xe000e180

        AREA ||i.NVIC_EnableIRQ||, CODE, READONLY, ALIGN=2

NVIC_EnableIRQ PROC
        LSLS     r1,r0,#27
        LSRS     r1,r1,#27
        MOVS     r0,#1
        LSLS     r0,r0,r1
        LDR      r1,|L14.16|
        STR      r0,[r1,#0]
        BX       lr
        ENDP

        DCW      0x0000
|L14.16|
        DCD      0xe000e100

        AREA ||i.SYS_UnlockReg||, CODE, READONLY, ALIGN=2

SYS_UnlockReg PROC
        LDR      r0,|L15.16|
        MOVS     r1,#0x59
        STR      r1,[r0,#0]
        MOVS     r1,#0x16
        STR      r1,[r0,#0]
        MOVS     r1,#0x88
        STR      r1,[r0,#0]
        BX       lr
        ENDP

|L15.16|
        DCD      0x50000100

        AREA ||i.WDT_DISABLE_INT||, CODE, READONLY, ALIGN=2

WDT_DISABLE_INT PROC
        LDR      r0,|L16.12|
        LDR      r1,[r0,#0]
        MOVS     r2,#0x40
        BICS     r1,r1,r2
        STR      r1,[r0,#0]
        BX       lr
        ENDP

|L16.12|
        DCD      0x40004000

        AREA ||i.WWDT_DeInit||, CODE, READONLY, ALIGN=1

WWDT_DeInit PROC
        BX       lr
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        EXPORT DrvTIMER_DeInit [CODE]
        EXPORT DrvTIMER_DisableInt [CODE]
        EXPORT DrvTIMER_EnableInt [CODE]
        EXPORT DrvTIMER_Init [CODE]
        EXPORT DrvWDT_DeInit [CODE]
        EXPORT DrvWDT_DisableInt [CODE]
        EXPORT DrvWDT_EnableInt [CODE]
        EXPORT DrvWDT_Init [CODE]
        EXPORT DrvWWDT_Init [CODE]
        EXPORT DrvWWDT_IsResetSource [CODE]
        EXPORT WWDT_DeInit [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]

        KEEP APBCLK_DISABLE
        KEEP APBCLK_ENABLE
        KEEP NVIC_DisableIRQ
        KEEP NVIC_EnableIRQ
        KEEP SYS_UnlockReg
        KEEP WDT_DISABLE_INT

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,3
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
