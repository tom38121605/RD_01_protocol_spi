; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--min_array_alignment=4 --split_sections --debug -c --asm --info=totals -o.\output\74hc4094.o --depend=.\output\74hc4094.d --cpu=Cortex-M0 --apcs=interwork -I..\CMSIS\CM0\DeviceSupport\Nuvoton\NUC123Series -I..\CMSIS\CM0\CoreSupport -I..\INC\DrvInc -I..\INC\SysInc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -D__MICROLIB --omf_browse=.\output\74hc4094.crf ..\AppSrc\74HC4094.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.doflashSrcLed||, CODE, READONLY, ALIGN=2

doflashSrcLed PROC
        PUSH     {r4,r5,lr}
        LDR      r5,|L1.20|
        MOVS     r1,#0xe0
        LDRB     r0,[r5,#0]  ; data_74hc4096
        MOV      r4,r0
        ORRS     r0,r0,r1
        BL       send74data
        STRB     r4,[r5,#0]
        POP      {r4,r5,pc}
        ENDP

|L1.20|
        DCD      ||.data||

        AREA ||i.flashVolumeLed||, CODE, READONLY, ALIGN=1

flashVolumeLed PROC
        BX       lr
        ENDP


        AREA ||i.get74data||, CODE, READONLY, ALIGN=2

get74data PROC
        LDR      r0,|L3.8|
        LDRB     r0,[r0,#0]  ; data_74hc4096
        BX       lr
        ENDP

        DCW      0x0000
|L3.8|
        DCD      ||.data||

        AREA ||i.hc4096Init||, CODE, READONLY, ALIGN=1

hc4096Init PROC
        BX       lr
        ENDP


        AREA ||i.ledOff||, CODE, READONLY, ALIGN=2

ledOff PROC
        LDR      r2,|L5.40|
        MOVS     r0,#0
        STR      r0,[r2,#0]
        LDR      r0,|L5.44|
        LDRB     r1,[r0,#0]  ; data_74hc4096
        MOVS     r0,#0xf3
        ORRS     r1,r1,r0
        LDR      r0,|L5.48|
        STR      r1,[r0,#0x20]
        LDR      r1,[r0,#0]
        MOVS     r3,#1
        ORRS     r1,r1,r3
        STR      r1,[r0,#0]
|L5.26|
        LDR      r1,[r0,#0]
        LSLS     r1,r1,#31
        LSRS     r1,r1,#31
        BNE      |L5.26|
        STR      r3,[r2,#0]
        BX       lr
        ENDP

        DCW      0x0000
|L5.40|
        DCD      0x500042c8
|L5.44|
        DCD      ||.data||
|L5.48|
        DCD      0x40130000

        AREA ||i.send74data||, CODE, READONLY, ALIGN=2

send74data PROC
        PUSH     {r4,lr}
        LDR      r3,|L6.36|
        MOVS     r1,#0
        STR      r1,[r3,#0]
        LDR      r1,|L6.40|
        STR      r0,[r1,#0x20]
        LDR      r2,[r1,#0]
        MOVS     r4,#1
        ORRS     r2,r2,r4
        STR      r2,[r1,#0]
|L6.20|
        LDR      r2,[r1,#0]
        LSLS     r2,r2,#31
        LSRS     r2,r2,#31
        BNE      |L6.20|
        LDR      r1,|L6.44|
        STRB     r0,[r1,#0]
        STR      r4,[r3,#0]
        POP      {r4,pc}
        ENDP

|L6.36|
        DCD      0x500042c8
|L6.40|
        DCD      0x40130000
|L6.44|
        DCD      ||.data||

        AREA ||i.set74data||, CODE, READONLY, ALIGN=2

set74data PROC
        LDR      r1,|L7.8|
        STRB     r0,[r1,#0]
        BX       lr
        ENDP

        DCW      0x0000
|L7.8|
        DCD      ||.data||

        AREA ||i.setw58Presel||, CODE, READONLY, ALIGN=2

setw58Presel PROC
        PUSH     {lr}
        LDR      r1,|L8.24|
        MOVS     r2,#0xf3
        LDRB     r1,[r1,#0]  ; data_74hc4096
        LSLS     r0,r0,#30
        ANDS     r1,r1,r2
        LSRS     r0,r0,#28
        ORRS     r0,r0,r1
        BL       send74data
        POP      {pc}
        ENDP

        DCW      0x0000
|L8.24|
        DCD      ||.data||

        AREA ||i.showSourceLed||, CODE, READONLY, ALIGN=2

showSourceLed PROC
        PUSH     {lr}
        MOVS     r3,r0
        BL       __ARM_common_switch8
        DCB      0x0a,0x06,0x08,0x0c
        DCB      0x0a,0x12,0x0e,0x14
        DCB      0x0e,0x10,0x0a,0x1f
        MOVS     r1,#0
        B        |L9.50|
        MOVS     r1,#2
        B        |L9.50|
        MOVS     r1,#1
        B        |L9.50|
        MOVS     r1,#4
        B        |L9.50|
        MOVS     r1,#3
        B        |L9.50|
        MOVS     r1,#5
        B        |L9.50|
        MOVS     r1,#6
        B        |L9.50|
        MOVS     r1,#7
|L9.50|
        LDR      r0,|L9.72|
        MOVS     r2,#0xe0
        LDRB     r0,[r0,#0]  ; data_74hc4096
        BICS     r0,r0,r2
        MOVS     r2,#7
        BICS     r2,r2,r1
        LSLS     r1,r2,#5
        ORRS     r0,r0,r1
        BL       send74data
        POP      {pc}
        ENDP

|L9.72|
        DCD      ||.data||

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.data||, DATA, ALIGN=0

data_74hc4096
        DCB      0xf3

        AREA ||i.__ARM_common_switch8||, COMGROUP=__ARM_common_switch8, CODE, READONLY, ALIGN=1

__ARM_common_switch8 PROC
        PUSH     {r4,r5}
        MOV      r4,lr
        SUBS     r4,r4,#1
        LDRB     r5,[r4,#0]
        ADDS     r4,r4,#1
        CMP      r3,r5
        BCS      |L62.16|
        MOV      r5,r3
|L62.16|
        LDRB     r3,[r4,r5]
        LSLS     r3,r3,#1
        ADDS     r3,r4,r3
        POP      {r4,r5}
        BX       r3
        ENDP


        EXPORT doflashSrcLed [CODE]
        EXPORT flashVolumeLed [CODE]
        EXPORT get74data [CODE]
        EXPORT hc4096Init [CODE]
        EXPORT ledOff [CODE]
        EXPORT send74data [CODE]
        EXPORT set74data [CODE]
        EXPORT setw58Presel [CODE]
        EXPORT showSourceLed [CODE]
        EXPORT __ARM_common_switch8 [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]

        KEEP data_74hc4096

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,3
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
