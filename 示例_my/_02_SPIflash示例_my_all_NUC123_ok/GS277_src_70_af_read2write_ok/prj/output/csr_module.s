; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--min_array_alignment=4 --split_sections --debug -c --asm --info=totals -o.\output\csr_module.o --depend=.\output\csr_module.d --cpu=Cortex-M0 --apcs=interwork -I..\CMSIS\CM0\DeviceSupport\Nuvoton\NUC123Series -I..\CMSIS\CM0\CoreSupport -I..\INC\DrvInc -I..\INC\SysInc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -D__MICROLIB --omf_browse=.\output\csr_module.crf ..\AppSrc\csr_module.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.BTInit||, CODE, READONLY, ALIGN=2

BTInit PROC
        PUSH     {r4-r6,lr}
        MOVS     r0,#5
        LSLS     r0,r0,#28
        LDR      r1,[r0,#0x38]
        SUB      sp,sp,#0x28
        MOVS     r2,#0x30
        ORRS     r1,r1,r2
        STR      r1,[r0,#0x38]
        LDR      r0,|L1.152|
        LDR      r1,[r0,#0x10]
        LSLS     r2,r2,#25
        ORRS     r1,r1,r2
        STR      r1,[r0,#0x10]
        LDR      r0,|L1.156|
        STR      r0,[sp,#8]
        MOVS     r0,#0xe1
        LSLS     r0,r0,#9
        STR      r0,[sp,#0xc]
        MOVS     r0,#3
        STR      r0,[sp,#0x10]
        MOVS     r0,#0x10
        MOVS     r4,#0
        STR      r0,[sp,#0x1c]
        MOVS     r5,#1
        ASRS     r0,r2,#1
        STR      r5,[sp,#4]
        STR      r4,[sp,#0]
        STR      r0,[sp,#0x20]
        STR      r4,[sp,#0x14]
        STR      r4,[sp,#0x18]
        MOVS     r0,#0x64
        ADD      r1,sp,#0x20
        STRB     r0,[r1,#4]
        LDR      r6,|L1.160|
        MOV      r1,sp
        MOV      r0,r6
        BL       DrvUART_Init
        LDR      r0,|L1.164|
        LDR      r1,[r0,#0]
        MOVS     r2,#0x80
        LSRS     r1,r1,#8
        LSLS     r1,r1,#8
        ORRS     r1,r1,r2
        STR      r1,[r0,#0]
        LDR      r1,|L1.168|
        MOV      r0,r6
        BL       DrvUART_EnableInt
        LDR      r1,|L1.172|
        MOVS     r0,#0
|L1.102|
        STRB     r4,[r1,r0]
        ADDS     r0,r0,#1
        CMP      r0,#0x80
        BCC      |L1.102|
        LDR      r1,|L1.172|
        MOVS     r0,#0
        ADDS     r1,r1,#0x80
|L1.116|
        STRB     r4,[r1,r0]
        ADDS     r0,r0,#1
        CMP      r0,#0x40
        BCC      |L1.116|
        LDR      r0,|L1.176|
        MOVS     r1,#0
        STR      r4,[r0,#0xc]  ; BT_out_index
        STR      r4,[r0,#8]  ; BT_in_index
        STR      r4,[r0,#0x14]  ; BT_utx_out
        MVNS     r1,r1
        STR      r4,[r0,#0x10]  ; BT_utx_in
        STRB     r1,[r0,#1]
        STRB     r1,[r0,#0]
        STR      r5,[r0,#0x18]  ; BT_txidle
        STR      r4,[r0,#0x20]  ; time_clean
        ADD      sp,sp,#0x28
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L1.152|
        DCD      0x50000040
|L1.156|
        DCD      0x00b71b00
|L1.160|
        DCD      0x40050000
|L1.164|
        DCD      0xe000e40c
|L1.168|
        DCD      0x00000811
|L1.172|
        DCD      ||.bss||
|L1.176|
        DCD      ||.data||

        AREA ||i.BTSendCmd||, CODE, READONLY, ALIGN=2

BTSendCmd PROC
        PUSH     {r4-r6,lr}
        MOVS     r1,#0
        LDR      r5,|L2.68|
        LDR      r4,|L2.72|
        B        |L2.24|
|L2.10|
        LDR      r2,[r4,#0x10]  ; BT_utx_in
        LSLS     r6,r2,#26
        LSRS     r6,r6,#26
        ADDS     r2,r2,#1
        STRB     r3,[r5,r6]
        ADDS     r1,r1,#1
        STR      r2,[r4,#0x10]  ; BT_utx_in
|L2.24|
        LDRB     r3,[r0,r1]
        CMP      r3,#0
        BNE      |L2.10|
        LDR      r0,[r4,#0x10]  ; BT_utx_in
        MOVS     r1,#0xd
        LSLS     r2,r0,#26
        LSRS     r2,r2,#26
        STRB     r1,[r5,r2]
        ADDS     r0,r0,#1
        STR      r0,[r4,#0x10]  ; BT_utx_in
        LDR      r0,[r4,#0x18]  ; BT_txidle
        CMP      r0,#1
        BNE      |L2.64|
        MOVS     r0,#0
        LDR      r1,|L2.76|
        STR      r0,[r4,#0x18]  ; BT_txidle
        LDR      r2,[r1,#4]
        MOVS     r0,#2
        ORRS     r2,r2,r0
        STR      r2,[r1,#4]
|L2.64|
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L2.68|
        DCD      ||.bss||+0x80
|L2.72|
        DCD      ||.data||
|L2.76|
        DCD      0x40050000

        AREA ||i.BT_analyse||, CODE, READONLY, ALIGN=2

BT_analyse PROC
        PUSH     {r3-r7,lr}
        LDR      r5,|L3.260|
        MOVS     r6,#1
        LDRB     r0,[r5,#0]  ; bt_rx_msg
        LDR      r7,|L3.264|
        LDR      r4,|L3.268|
        MOVS     r3,r0
        BL       __ARM_common_switch8
        DCB      0x11,0x0a
        DCB      0x16,0x46,0x61,0x15
        DCB      0x3c,0x49,0x55,0x6c
        DCB      0x15,0x15,0x15,0x6c
        DCB      0x6c,0x15,0x15,0x6e
        DCB      0x15,0x00
        MOVS     r0,#0xa
        BL       sysDelayMs
        LDRB     r0,[r7,#0]  ; dev_input
        CMP      r0,#0
        BNE      |L3.54|
        BL       btStartUp
|L3.54|
        MOVS     r0,#0x14
        BL       sysDelayMs
|L3.60|
        POP      {r3-r7,pc}
        BL       dumpMsg
        LDR      r0,[r4,#0x1c]  ; cmd_index
        ADDS     r0,r5,r0
        LDRB     r1,[r0,#1]
        CMP      r1,#0x3d
        BNE      |L3.82|
        LDRB     r0,[r0,#2]
        SUBS     r0,r0,#0x30
        STRB     r0,[r4,#2]
|L3.82|
        LDRB     r0,[r4,#2]  ; pwr_status
        CMP      r0,#1
        BNE      |L3.60|
        LDR      r0,|L3.272|
        MOVS     r4,#0
        LDRB     r1,[r0,#0]  ; NFC_flag
        LDRB     r0,[r7,#0]  ; dev_input
        LDR      r5,|L3.280|
        ORRS     r1,r1,r0
        LDR      r0,|L3.276|
        LDR      r7,|L3.284|
        LDRB     r0,[r0,#0]  ; factory_mode_flag
        ORRS     r1,r1,r0
        CMP      r1,#0
        BEQ      |L3.132|
        CMP      r0,#0
        BEQ      |L3.60|
        BL       btPairing
|L3.120|
        MOVS     r0,#0x14
        BL       sysDelayMs
        STR      r4,[r5,#0]  ; ccp
        STRB     r6,[r7,#0]
        POP      {r3-r7,pc}
|L3.132|
        BL       btReconnect
        B        |L3.120|
        LDR      r0,[r4,#0x1c]  ; cmd_index
        ADDS     r0,r5,r0
        LDRB     r1,[r0,#1]
        CMP      r1,#0x3d
        BNE      |L3.158|
        LDR      r1,|L3.288|
        LDRB     r2,[r0,#2]
        STRB     r2,[r1,#0]
        LDRB     r0,[r0,#4]
        STRB     r0,[r1,#2]
|L3.158|
        BL       dumpMsg
|L3.162|
        POP      {r3-r7,pc}
        BL       dumpMsg
        LDR      r0,[r4,#0x1c]  ; cmd_index
        ADDS     r0,r5,r0
        LDRB     r1,[r0,#1]
        CMP      r1,#0x3d
        BNE      |L3.162|
        LDRB     r0,[r0,#2]
        CMP      r0,#0x31
        BNE      |L3.162|
        STRB     r6,[r4,#5]
|L3.186|
        POP      {r3-r7,pc}
        BL       dumpMsg
        LDR      r0,[r4,#0x1c]  ; cmd_index
        ADDS     r0,r5,r0
        LDRB     r1,[r0,#2]
        CMP      r1,#0x3d
        BNE      |L3.186|
        LDRB     r1,[r0,#3]
        SUBS     r1,r1,#0x30
        STRB     r1,[r4,#0]
        LDRB     r0,[r0,#5]
        B        |L3.228|
        BL       dumpMsg
        LDR      r0,[r4,#0x1c]  ; cmd_index
        ADDS     r0,r5,r0
        LDRB     r1,[r0,#1]
        CMP      r1,#0x3d
        BNE      |L3.186|
        LDRB     r0,[r0,#2]
|L3.228|
        SUBS     r0,r0,#0x30
        STRB     r0,[r4,#1]
        POP      {r3-r7,pc}
        STRB     r6,[r4,#4]
|L3.236|
        POP      {r3-r7,pc}
        BL       dumpMsg
        LDR      r0,[r4,#0x1c]  ; cmd_index
        ADDS     r0,r5,r0
        LDRB     r1,[r0,#1]
        CMP      r1,#0x3d
        BNE      |L3.236|
        LDRB     r0,[r0,#2]
        SUBS     r0,r0,#0x30
        STRB     r0,[r4,#3]
        POP      {r3-r7,pc}
        ENDP

|L3.260|
        DCD      ||.bss||+0xc0
|L3.264|
        DCD      dev_input
|L3.268|
        DCD      ||.data||
|L3.272|
        DCD      NFC_flag
|L3.276|
        DCD      factory_mode_flag
|L3.280|
        DCD      ||ccp||
|L3.284|
        DCD      bt_paring_flag
|L3.288|
        DCD      BT_VERSION_NUMBER

        AREA ||i.BtGetc||, CODE, READONLY, ALIGN=2

BtGetc PROC
        LDR      r2,|L4.20|
        LDR      r3,|L4.24|
        LDR      r1,[r2,#0xc]  ; BT_out_index
        LSLS     r0,r1,#25
        LSRS     r0,r0,#25
        LDRB     r0,[r3,r0]
        ADDS     r1,r1,#1
        STR      r1,[r2,#0xc]  ; BT_out_index
        BX       lr
        ENDP

        DCW      0x0000
|L4.20|
        DCD      ||.data||
|L4.24|
        DCD      ||.bss||

        AREA ||i.BtUngetc||, CODE, READONLY, ALIGN=1

BtUngetc PROC
        BX       lr
        ENDP


        AREA ||i.UART0_IRQHandler||, CODE, READONLY, ALIGN=2

UART0_IRQHandler PROC
        PUSH     {r4-r6,lr}
        LDR      r4,|L6.124|
        LDR      r0,[r4,#0x1c]
        ASRS     r1,r4,#22
        LDR      r5,|L6.128|
        TST      r0,r1
        BNE      |L6.22|
        LDR      r0,[r4,#0x1c]
        LSLS     r1,r1,#4
        TST      r0,r1
        BEQ      |L6.50|
|L6.22|
        LDR      r2,|L6.132|
        MOVS     r3,#1
        LSLS     r3,r3,#14
|L6.28|
        LDR      r0,[r4,#0x18]
        TST      r0,r3
        BNE      |L6.108|
        LDR      r1,[r4,#0]
        LDR      r0,[r5,#8]  ; BT_in_index
        LSLS     r6,r0,#25
        LSRS     r6,r6,#25
        STRB     r1,[r2,r6]
        ADDS     r0,r0,#1
        STR      r0,[r5,#8]  ; BT_in_index
        B        |L6.28|
|L6.50|
        LDR      r0,[r4,#0x1c]
        MOVS     r1,#1
        LSLS     r1,r1,#9
        TST      r0,r1
        LDR      r1,|L6.128|
        LDR      r1,[r1,#0x10]
        BEQ      |L6.108|
        LDR      r3,|L6.132|
        MOVS     r6,#1
        ADDS     r3,r3,#0x80
        LDR      r0,[r5,#0x14]  ; BT_utx_out
        LSLS     r6,r6,#23
|L6.74|
        CMP      r0,r1
        BCS      |L6.84|
        LDR      r2,[r4,#0x18]
        TST      r2,r6
        BEQ      |L6.110|
|L6.84|
        CMP      r0,r1
        BNE      |L6.108|
        LDR      r2,[r4,#4]
        MOVS     r0,#2
        BICS     r2,r2,r0
        STR      r2,[r4,#4]
        MOVS     r0,#1
        STR      r0,[r5,#0x18]  ; BT_txidle
        LSLS     r0,r1,#26
        LSRS     r0,r0,#26
        STR      r0,[r5,#0x10]  ; BT_utx_in
        STR      r0,[r5,#0x14]  ; BT_utx_out
|L6.108|
        POP      {r4-r6,pc}
|L6.110|
        LSLS     r2,r0,#26
        LSRS     r2,r2,#26
        LDRB     r2,[r3,r2]
        STR      r2,[r4,#0]
        ADDS     r0,r0,#1
        STR      r0,[r5,#0x14]  ; BT_utx_out
        B        |L6.74|
        ENDP

|L6.124|
        DCD      0x40050000
|L6.128|
        DCD      ||.data||
|L6.132|
        DCD      ||.bss||

        AREA ||i.btChangeName||, CODE, READONLY, ALIGN=1

btChangeName PROC
        BX       lr
        ENDP


        AREA ||i.btDisableHFP||, CODE, READONLY, ALIGN=2

btDisableHFP PROC
        PUSH     {lr}
        ADR      r0,|L8.12|
        BL       BTSendCmd
        POP      {pc}
        ENDP

        DCW      0x0000
|L8.12|
        DCB      "AT+SOCIAL=1\r",0
        DCB      0
        DCB      0
        DCB      0

        AREA ||i.btDisableMic||, CODE, READONLY, ALIGN=2

btDisableMic PROC
        PUSH     {lr}
        ADR      r0,|L9.12|
        BL       BTSendCmd
        POP      {pc}
        ENDP

        DCW      0x0000
|L9.12|
        DCB      "AT+MIC=0",0
        DCB      0
        DCB      0
        DCB      0

        AREA ||i.btDiscontect||, CODE, READONLY, ALIGN=2

btDiscontect PROC
        PUSH     {r4,lr}
        ADR      r0,|L10.16|
        BL       sendInfo
        ADR      r0,|L10.52|
        BL       BTSendCmd
        POP      {r4,pc}
        ENDP

|L10.16|
        DCB      "BTsend: disconnect all profies\r\n",0
        DCB      0
        DCB      0
        DCB      0
|L10.52|
        DCB      "AT+GATTD",0
        DCB      0
        DCB      0
        DCB      0

        AREA ||i.btEnableMic||, CODE, READONLY, ALIGN=2

btEnableMic PROC
        PUSH     {lr}
        ADR      r0,|L11.12|
        BL       BTSendCmd
        POP      {pc}
        ENDP

        DCW      0x0000
|L11.12|
        DCB      "AT+MIC=1",0
        DCB      0
        DCB      0
        DCB      0

        AREA ||i.btEnaleHFP||, CODE, READONLY, ALIGN=2

btEnaleHFP PROC
        PUSH     {lr}
        ADR      r0,|L12.12|
        BL       BTSendCmd
        POP      {pc}
        ENDP

        DCW      0x0000
|L12.12|
        DCB      "AT+SOCIAL=0\r",0
        DCB      0
        DCB      0
        DCB      0

        AREA ||i.btForgetAll||, CODE, READONLY, ALIGN=2

btForgetAll PROC
        PUSH     {lr}
        ADR      r0,|L13.12|
        BL       BTSendCmd
        POP      {pc}
        ENDP

        DCW      0x0000
|L13.12|
        DCB      "AT+DFLT",0

        AREA ||i.btGetMsg||, CODE, READONLY, ALIGN=2

btGetMsg PROC
        PUSH     {r3-r7,lr}
        LDR      r7,|L14.236|
        MOVS     r2,#0
        LDR      r0,[r7,#0xc]  ; BT_out_index
        LDR      r5,[r7,#8]  ; BT_in_index
        MOV      r1,r0
        ADDS     r0,r0,#1
        CMP      r5,r0
        BLS      |L14.44|
        LSLS     r3,r1,#25
        LDR      r4,|L14.240|
        LSRS     r3,r3,#25
        LDRB     r3,[r4,r3]
        CMP      r3,#0xd
        BNE      |L14.40|
        LSLS     r0,r0,#25
        LSRS     r0,r0,#25
        LDRB     r0,[r4,r0]
        CMP      r0,#0xa
        BEQ      |L14.46|
|L14.40|
        ADDS     r1,r1,#2
        STR      r1,[r7,#0xc]  ; BT_out_index
|L14.44|
        POP      {r3-r7,pc}
|L14.46|
        LDR      r3,|L14.240|
        ADDS     r1,r1,#2
        ADDS     r3,r3,#0xc0
        SUBS     r5,r5,#1
        B        |L14.86|
|L14.56|
        LSLS     r0,r1,#25
        LSRS     r0,r0,#25
        ADDS     r6,r3,r2
        LDRB     r0,[r4,r0]
        ADDS     r2,r2,#1
        STRB     r0,[r6,#1]
        CMP      r0,#0xd
        BNE      |L14.84|
        ADDS     r0,r1,#1
        LSLS     r0,r0,#25
        LSRS     r0,r0,#25
        LDRB     r0,[r4,r0]
        CMP      r0,#0xa
        BEQ      |L14.92|
|L14.84|
        ADDS     r1,r1,#1
|L14.86|
        CMP      r1,r5
        BCC      |L14.56|
        POP      {r3-r7,pc}
|L14.92|
        LDR      r4,|L14.240|
        SUBS     r2,r2,#1
        ADDS     r4,r4,#0xc0
        MOVS     r0,#0
        ADDS     r2,r2,r4
        STRB     r0,[r2,#1]
        LDR      r0,|L14.236|
        ADDS     r1,r1,#2
        STR      r1,[r0,#0xc]  ; BT_out_index
        ADR      r0,|L14.244|
        BL       iputs
        ADDS     r0,r4,#1
        BL       iputs
        LDR      r6,|L14.236|
        ADDS     r4,r4,#1
        MOVS     r0,#0xc
        ADDS     r6,r6,#0x28
        MOV      r12,r0
        MOVS     r2,#0
|L14.134|
        MOVS     r1,#0xc
        MULS     r1,r2,r1
        ADDS     r1,r1,r6
        LDR      r5,[r1,#4]
        MOV      r0,r4
        MOVS     r1,#0
        B        |L14.222|
|L14.148|
        LDRB     r7,[r0,r1]
        CMP      r7,r3
        BEQ      |L14.220|
        ADDS     r2,r2,#1
        CMP      r2,r12
        BCC      |L14.134|
        MOVS     r0,#0x59
|L14.162|
        LDR      r1,|L14.240|
        LDR      r2,|L14.236|
        ADDS     r1,r1,#0xc0
        STRB     r0,[r1,#0]
        LDR      r0,[r2,#0xc]  ; BT_out_index
        CMP      r0,#0x7f
        BLS      |L14.208|
        LDR      r1,|L14.260|
        LDR      r3,[r1,#4]
        LSRS     r3,r3,#1
        LSLS     r3,r3,#1
        STR      r3,[r1,#4]
        LSLS     r0,r0,#25
        LSRS     r0,r0,#25
        STR      r0,[r2,#0xc]  ; BT_out_index
        LDRB     r0,[r2,#8]  ; BT_in_index
        LSLS     r0,r0,#25
        LSRS     r0,r0,#25
        STR      r0,[r2,#8]  ; BT_in_index
        LDR      r2,[r1,#4]
        MOVS     r0,#1
        ORRS     r2,r2,r0
        STR      r2,[r1,#4]
|L14.208|
        ADR      r0,|L14.264|
        BL       sendInfo
        BL       BT_analyse
        POP      {r3-r7,pc}
|L14.220|
        ADDS     r1,r1,#1
|L14.222|
        LDRB     r3,[r5,r1]
        CMP      r3,#0
        BNE      |L14.148|
        MOVS     r0,#0xc
        MULS     r2,r0,r2
        LDRB     r0,[r6,r2]
        B        |L14.162|
        ENDP

|L14.236|
        DCD      ||.data||
|L14.240|
        DCD      ||.bss||
|L14.244|
        DCB      "BT get msg: ",0
        DCB      0
        DCB      0
        DCB      0
|L14.260|
        DCD      0x40050000
|L14.264|
        DCB      "\r\n",0
        DCB      0

        AREA ||i.btLastMusic||, CODE, READONLY, ALIGN=2

btLastMusic PROC
        PUSH     {r4,lr}
        ADR      r0,|L15.16|
        BL       sendInfo
        ADR      r0,|L15.32|
        BL       BTSendCmd
        POP      {r4,pc}
        ENDP

|L15.16|
        DCB      "BTsend: BWD\r\n",0
        DCB      0
        DCB      0
|L15.32|
        DCB      "AT+BWD",0
        DCB      0

        AREA ||i.btNextMusic||, CODE, READONLY, ALIGN=2

btNextMusic PROC
        PUSH     {r4,lr}
        ADR      r0,|L16.16|
        BL       sendInfo
        ADR      r0,|L16.32|
        BL       BTSendCmd
        POP      {r4,pc}
        ENDP

|L16.16|
        DCB      "BTsend: FWD\r\n",0
        DCB      0
        DCB      0
|L16.32|
        DCB      "AT+FWD",0
        DCB      0

        AREA ||i.btPairing||, CODE, READONLY, ALIGN=2

btPairing PROC
        PUSH     {lr}
        LDR      r0,|L17.12|
        BL       BTSendCmd
        POP      {pc}
        ENDP

        DCW      0x0000
|L17.12|
        DCD      ||area_number.51||

        AREA ||i.btPause||, CODE, READONLY, ALIGN=2

btPause PROC
        PUSH     {r4,lr}
        ADR      r0,|L18.16|
        BL       sendInfo
        ADR      r0,|L18.32|
        BL       BTSendCmd
        POP      {r4,pc}
        ENDP

|L18.16|
        DCB      "BTsend: PAUSE\r\n",0
|L18.32|
        DCB      "AT+PAUSE",0
        DCB      0
        DCB      0
        DCB      0

        AREA ||i.btPlay||, CODE, READONLY, ALIGN=2

btPlay PROC
        PUSH     {r4,lr}
        ADR      r0,|L19.16|
        BL       sendInfo
        ADR      r0,|L19.32|
        BL       BTSendCmd
        POP      {r4,pc}
        ENDP

|L19.16|
        DCB      "BTsend: PLAY\r\n",0
        DCB      0
|L19.32|
        DCB      "AT+PLAY",0

        AREA ||i.btReconnect||, CODE, READONLY, ALIGN=2

btReconnect PROC
        PUSH     {lr}
        LDR      r0,|L20.12|
        BL       BTSendCmd
        POP      {pc}
        ENDP

        DCW      0x0000
|L20.12|
        DCD      ||area_number.51||+0x14

        AREA ||i.btShutDown||, CODE, READONLY, ALIGN=2

btShutDown PROC
        PUSH     {lr}
        ADR      r0,|L21.12|
        BL       BTSendCmd
        POP      {pc}
        ENDP

        DCW      0x0000
|L21.12|
        DCB      "AT+OFF",0
        DCB      0

        AREA ||i.btStartUp||, CODE, READONLY, ALIGN=2

btStartUp PROC
        PUSH     {lr}
        LDR      r0,|L22.12|
        BL       BTSendCmd
        POP      {pc}
        ENDP

        DCW      0x0000
|L22.12|
        DCD      ||area_number.51||+0xc

        AREA ||i.btStopPairing||, CODE, READONLY, ALIGN=2

btStopPairing PROC
        PUSH     {r4,lr}
        ADR      r0,|L23.16|
        BL       sendInfo
        ADR      r0,|L23.40|
        BL       BTSendCmd
        POP      {r4,pc}
        ENDP

|L23.16|
        DCB      "BTsend: Enter pairing\r\n",0
|L23.40|
        DCB      "AT+PAIR=0",0
        DCB      0
        DCB      0

        AREA ||i.bt_dis_last_connect||, CODE, READONLY, ALIGN=2

bt_dis_last_connect PROC
        PUSH     {lr}
        ADR      r0,|L24.12|
        BL       BTSendCmd
        POP      {pc}
        ENDP

        DCW      0x0000
|L24.12|
        DCB      "AT+AGD1",0

        AREA ||i.bt_name_read||, CODE, READONLY, ALIGN=2

bt_name_read PROC
        PUSH     {r4,lr}
        ADR      r0,|L25.16|
        BL       sendInfo
        ADR      r0,|L25.40|
        BL       BTSendCmd
        POP      {r4,pc}
        ENDP

|L25.16|
        DCB      "BTsend: read bt name\r\n",0
        DCB      0
|L25.40|
        DCB      "AT+NAME",0

        AREA ||i.bt_name_send||, CODE, READONLY, ALIGN=1

bt_name_send PROC
        PUSH     {lr}
        BL       BTSendCmd
        POP      {pc}
        ENDP


        AREA ||i.bt_version_read||, CODE, READONLY, ALIGN=2

bt_version_read PROC
        PUSH     {lr}
        ADR      r0,|L27.12|
        BL       BTSendCmd
        POP      {pc}
        ENDP

        DCW      0x0000
|L27.12|
        DCB      "AT+VER",0
        DCB      0

        AREA ||i.callDetect||, CODE, READONLY, ALIGN=2

callDetect PROC
        LDR      r0,|L28.20|
        MOVS     r1,#0
        LDRSB    r1,[r0,r1]  ; hf_status
        CMP      r1,#3
        BLE      |L28.14|
        MOVS     r0,#1
        BX       lr
|L28.14|
        MOVS     r0,#0
        BX       lr
        ENDP

        DCW      0x0000
|L28.20|
        DCD      ||.data||

        AREA ||i.closeCall||, CODE, READONLY, ALIGN=2

closeCall PROC
        PUSH     {lr}
        LDR      r0,|L29.24|
        LDRB     r0,[r0,#0]  ; hf_status
        CMP      r0,#4
        BEQ      |L29.18|
        ADR      r0,|L29.28|
|L29.12|
        BL       BTSendCmd
        POP      {pc}
|L29.18|
        ADR      r0,|L29.36|
        B        |L29.12|
        ENDP

        DCW      0x0000
|L29.24|
        DCD      ||.data||
|L29.28|
        DCB      "AT+CH",0
        DCB      0
        DCB      0
|L29.36|
        DCB      "AT+CR",0
        DCB      0
        DCB      0

        AREA ||i.dealBtError||, CODE, READONLY, ALIGN=2

dealBtError PROC
        LDR      r1,|L30.12|
        MOVS     r0,#0
        STR      r0,[r1,#8]  ; BT_in_index
        STR      r0,[r1,#0xc]  ; BT_out_index
        BX       lr
        ENDP

        DCW      0x0000
|L30.12|
        DCD      ||.data||

        AREA ||i.dumpMsg||, CODE, READONLY, ALIGN=2

dumpMsg PROC
        MOVS     r0,#0
        LDR      r2,|L31.32|
        B        |L31.8|
|L31.6|
        ADDS     r0,r0,#1
|L31.8|
        ADDS     r1,r2,r0
        LDRB     r1,[r1,#1]
        MOV      r3,r1
        SUBS     r3,r3,#0x41
        CMP      r3,#0x19
        BLS      |L31.6|
        CMP      r1,#0x32
        BEQ      |L31.6|
        LDR      r1,|L31.36|
        STR      r0,[r1,#0x1c]  ; cmd_index
        BX       lr
        ENDP

        DCW      0x0000
|L31.32|
        DCD      ||.bss||+0xc0
|L31.36|
        DCD      ||.data||

        AREA ||i.isBtPaired||, CODE, READONLY, ALIGN=2

isBtPaired PROC
        LDR      r0,|L32.28|
        MOVS     r1,#0
        LDRSB    r1,[r0,r1]  ; hf_status
        CMP      r1,#3
        BGT      |L32.18|
        MOVS     r1,#1
        LDRSB    r1,[r0,r1]  ; a2dp_status
        CMP      r1,#2
        BLE      |L32.22|
|L32.18|
        MOVS     r0,#1
        BX       lr
|L32.22|
        MOVS     r0,#0
        BX       lr
        ENDP

        DCW      0x0000
|L32.28|
        DCD      ||.data||

        AREA ||i.isBtStreaming||, CODE, READONLY, ALIGN=2

isBtStreaming PROC
        PUSH     {r4,lr}
        LDR      r4,|L33.40|
        LDR      r0,[r4,#0x24]  ; count
        ADDS     r0,r0,#1
        STR      r0,[r4,#0x24]  ; count
        CMP      r0,#0xc8
        BNE      |L33.24|
        MOVS     r0,#2
        BL       sysDelayMs
        MOVS     r0,#0
        STR      r0,[r4,#0x24]  ; count
|L33.24|
        MOVS     r0,#3
        LDRSB    r0,[r4,r0]  ; audio_status
        CMP      r0,#0
        BLE      |L33.36|
        MOVS     r0,#1
        POP      {r4,pc}
|L33.36|
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP

|L33.40|
        DCD      ||.data||

        AREA ||i.isCallIn||, CODE, READONLY, ALIGN=2

isCallIn PROC
        LDR      r0,|L34.16|
        LDRB     r0,[r0,#0]  ; hf_status
        CMP      r0,#4
        BEQ      |L34.12|
        MOVS     r0,#0
        BX       lr
|L34.12|
        MOVS     r0,#1
        BX       lr
        ENDP

|L34.16|
        DCD      ||.data||

        AREA ||i.openCall||, CODE, READONLY, ALIGN=2

openCall PROC
        PUSH     {lr}
        ADR      r0,|L35.12|
        BL       BTSendCmd
        POP      {pc}
        ENDP

        DCW      0x0000
|L35.12|
        DCB      "AT+CA",0
        DCB      0
        DCB      0

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.bss||, DATA, NOINIT, ALIGN=2

BT_RX_buf
        %        128
BT_TX_buf
        %        64
bt_rx_msg
        %        33

        AREA ||.constdata||, DATA, READONLY, ALIGN=2

gen_init_sucess_ind
        DCB      0x49,0x4e,0x49,0x54
        DCB      0x4f,0x4b,0x00

        AREA ||area_number.40||, DATA, READONLY, ALIGN=2

        EXPORTAS ||area_number.40||, ||.constdata||
gen_version_ind
        DCB      0x56,0x45,0x52,0x00

        AREA ||area_number.41||, DATA, READONLY, ALIGN=2

        EXPORTAS ||area_number.41||, ||.constdata||
gen_pairing_status_ind
        DCB      0x50,0x41,0x49,0x52
        DCB      0x00

        AREA ||area_number.42||, DATA, READONLY, ALIGN=2

        EXPORTAS ||area_number.42||, ||.constdata||
gen_power_ind
        DCB      0x50,0x57,0x52,0x00

        AREA ||area_number.43||, DATA, READONLY, ALIGN=2

        EXPORTAS ||area_number.43||, ||.constdata||
gen_hfp_ind
        DCB      0x41,0x47,0x00

        AREA ||area_number.44||, DATA, READONLY, ALIGN=2

        EXPORTAS ||area_number.44||, ||.constdata||
gen_a2dp_ind
        DCB      0x50,0x45,0x45,0x52
        DCB      0x00

        AREA ||area_number.45||, DATA, READONLY, ALIGN=2

        EXPORTAS ||area_number.45||, ||.constdata||
gen_avrcp_ind
        DCB      0x41,0x56,0x52,0x43
        DCB      0x50,0x00

        AREA ||area_number.46||, DATA, READONLY, ALIGN=2

        EXPORTAS ||area_number.46||, ||.constdata||
gen_audio_ind
        DCB      0x41,0x55,0x44,0x49
        DCB      0x4f,0x00

        AREA ||area_number.47||, DATA, READONLY, ALIGN=2

        EXPORTAS ||area_number.47||, ||.constdata||
gen_mpbs_ind
        DCB      0x41,0x4d,0x50,0x00

        AREA ||area_number.48||, DATA, READONLY, ALIGN=2

        EXPORTAS ||area_number.48||, ||.constdata||
gen_a2dp_link_lost_ind
        DCB      0x41,0x4c,0x4f,0x53
        DCB      0x54,0x00

        AREA ||area_number.49||, DATA, READONLY, ALIGN=2

        EXPORTAS ||area_number.49||, ||.constdata||
gen_hfp_link_lost_ind
        DCB      0x48,0x4c,0x4f,0x53
        DCB      0x54,0x00

        AREA ||area_number.50||, DATA, READONLY, ALIGN=2

        EXPORTAS ||area_number.50||, ||.constdata||
bt_lost_ind
        DCB      0x4c,0x4f,0x53,0x54
        DCB      0x00

        AREA ||area_number.51||, DATA, READONLY, ALIGN=2

        EXPORTAS ||area_number.51||, ||.constdata||
        DCB      0x41,0x54,0x2b,0x50
        DCB      0x41,0x49,0x52,0x3d
        DCB      0x36,0x30,0x30,0x00
        DCB      0x41,0x54,0x2b,0x4f
        DCB      0x4e,0x00,0x00,0x00
        DCB      0x41,0x54,0x2b,0x41
        DCB      0x47,0x43,0x00

        AREA ||.data||, DATA, ALIGN=2

hf_status
        DCB      0xff
a2dp_status
        DCB      0xff
pwr_status
        DCB      0xff
audio_status
        DCB      0xff
bt_lost_flag
        DCB      0x00
bt_amp_start_flag
        DCB      0x00,0x00,0x00
BT_in_index
        DCD      0x00000000
BT_out_index
        DCD      0x00000000
BT_utx_in
        DCD      0x00000000
BT_utx_out
        DCD      0x00000000
BT_txidle
        DCD      0x00000001
cmd_index
        DCD      0x00000000
time_clean
        DCD      0x00000000
count
        DCD      0x00000000
INDcmdtbl
        DCB      0x00,0x00,0x00,0x00
        DCD      gen_init_sucess_ind
        DCB      0x00,0x00,0x00,0x00
        DCB      0x01,0x00,0x00,0x00
        DCD      gen_power_ind
        DCB      0x00,0x00,0x00,0x00
        DCB      0x02,0x00,0x00,0x00
        DCD      gen_pairing_status_ind
        DCB      0x00,0x00,0x00,0x00
        DCB      0x05,0x00,0x00,0x00
        DCD      gen_version_ind
        DCB      0x00,0x00,0x00,0x00
        DCB      0x06,0x00,0x00,0x00
        DCD      gen_mpbs_ind
        DCB      0x00,0x00,0x00,0x00
        DCB      0x07,0x00,0x00,0x00
        DCD      gen_hfp_ind
        DCB      0x00,0x00,0x00,0x00
        DCB      0x03,0x00,0x00,0x00
        DCD      gen_a2dp_ind
        DCB      0x00,0x00,0x00,0x00
        DCB      0x04,0x00,0x00,0x00
        DCD      gen_avrcp_ind
        DCB      0x00,0x00,0x00,0x00
        DCB      0x08,0x00,0x00,0x00
        DCD      gen_hfp_link_lost_ind
        DCB      0x00,0x00,0x00,0x00
        DCB      0x0c,0x00,0x00,0x00
        DCD      gen_a2dp_link_lost_ind
        DCB      0x00,0x00,0x00,0x00
        DCB      0x10,0x00,0x00,0x00
        DCD      gen_audio_ind
        DCB      0x00,0x00,0x00,0x00
        DCB      0x0d,0x00,0x00,0x00
        DCD      bt_lost_ind
        DCB      0x00,0x00,0x00,0x00

        AREA ||area_number.53||, DATA, ALIGN=0

        EXPORTAS ||area_number.53||, ||.data||
bt_hfp_flag
        DCB      0x00

        AREA ||area_number.54||, DATA, ALIGN=0

        EXPORTAS ||area_number.54||, ||.data||
bt_change_name_mode
        DCB      0x00

        AREA ||area_number.55||, DATA, ALIGN=0

        EXPORTAS ||area_number.55||, ||.data||
bt_reconnect_flag
        DCB      0x00

        AREA ||i.__ARM_common_switch8||, COMGROUP=__ARM_common_switch8, CODE, READONLY, ALIGN=1

__ARM_common_switch8 PROC
        PUSH     {r4,r5}
        MOV      r4,lr
        SUBS     r4,r4,#1
        LDRB     r5,[r4,#0]
        ADDS     r4,r4,#1
        CMP      r3,r5
        BCS      |L232.16|
        MOV      r5,r3
|L232.16|
        LDRB     r3,[r4,r5]
        LSLS     r3,r3,#1
        ADDS     r3,r4,r3
        POP      {r4,r5}
        BX       r3
        ENDP


        EXPORT BTInit [CODE]
        EXPORT BTSendCmd [CODE]
        EXPORT BtGetc [CODE]
        EXPORT BtUngetc [CODE]
        EXPORT UART0_IRQHandler [CODE]
        EXPORT btChangeName [CODE]
        EXPORT btDisableHFP [CODE]
        EXPORT btDisableMic [CODE]
        EXPORT btDiscontect [CODE]
        EXPORT btEnableMic [CODE]
        EXPORT btEnaleHFP [CODE]
        EXPORT btForgetAll [CODE]
        EXPORT btGetMsg [CODE]
        EXPORT btLastMusic [CODE]
        EXPORT btNextMusic [CODE]
        EXPORT btPairing [CODE]
        EXPORT btPause [CODE]
        EXPORT btPlay [CODE]
        EXPORT btReconnect [CODE]
        EXPORT btShutDown [CODE]
        EXPORT btStartUp [CODE]
        EXPORT btStopPairing [CODE]
        EXPORT bt_dis_last_connect [CODE]
        EXPORT bt_name_read [CODE]
        EXPORT bt_name_send [CODE]
        EXPORT bt_version_read [CODE]
        EXPORT callDetect [CODE]
        EXPORT closeCall [CODE]
        EXPORT dealBtError [CODE]
        EXPORT isBtPaired [CODE]
        EXPORT isBtStreaming [CODE]
        EXPORT isCallIn [CODE]
        EXPORT openCall [CODE]
        EXPORT bt_lost_flag [DATA,SIZE=1]
        EXPORT bt_amp_start_flag [DATA,SIZE=1]
        EXPORT time_clean [DATA,SIZE=4]
        EXPORT bt_hfp_flag [DATA,SIZE=1]
        EXPORT bt_change_name_mode [DATA,SIZE=1]
        EXPORT bt_reconnect_flag [DATA,SIZE=1]
        EXPORT __ARM_common_switch8 [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT sendInfo [CODE]
        IMPORT sysDelayMs [CODE]
        IMPORT dev_input [DATA]
        IMPORT NFC_flag [DATA]
        IMPORT factory_mode_flag [DATA]
        IMPORT ||ccp|| [DATA]
        IMPORT bt_paring_flag [DATA]
        IMPORT BT_VERSION_NUMBER [DATA]
        IMPORT iputs [CODE]
        IMPORT DrvUART_Init [CODE]
        IMPORT DrvUART_EnableInt [CODE]

        KEEP BT_analyse
        KEEP dumpMsg
        KEEP BT_RX_buf
        KEEP BT_TX_buf
        KEEP bt_rx_msg
        KEEP gen_init_sucess_ind
        KEEP gen_version_ind
        KEEP gen_pairing_status_ind
        KEEP gen_power_ind
        KEEP gen_hfp_ind
        KEEP gen_a2dp_ind
        KEEP gen_avrcp_ind
        KEEP gen_audio_ind
        KEEP gen_mpbs_ind
        KEEP gen_a2dp_link_lost_ind
        KEEP gen_hfp_link_lost_ind
        KEEP bt_lost_ind
        KEEP hf_status
        KEEP a2dp_status
        KEEP pwr_status
        KEEP audio_status
        KEEP BT_in_index
        KEEP BT_out_index
        KEEP BT_utx_in
        KEEP BT_utx_out
        KEEP BT_txidle
        KEEP cmd_index
        KEEP count
        KEEP INDcmdtbl

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,3
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
