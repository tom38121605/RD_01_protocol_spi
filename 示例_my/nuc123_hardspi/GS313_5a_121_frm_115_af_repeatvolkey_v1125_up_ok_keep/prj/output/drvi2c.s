; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--debug -c --asm --info=totals -o.\output\drvi2c.o --depend=.\output\drvi2c.d --cpu=Cortex-M0 --apcs=interwork -O0 -I..\CMSIS\CM0\DeviceSupport\Nuvoton\NUC123Series -I..\CMSIS\CM0\CoreSupport -I..\INC\DrvInc -I..\INC\SysInc -I..\dw -IC:\Keil_v472\ARM\RV31\INC -IC:\Keil_v472\ARM\CMSIS\Include -IC:\Keil_v472\ARM\Inc\Nuvoton\NUC123Series -D__MICROLIB --omf_browse=.\output\drvi2c.crf ..\DrvSrc\DrvI2C.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

CLK_GetHCLKFreq PROC
        PUSH     {r4-r6,lr}
        MOVS     r5,#0
        LDR      r0,|L1.756|
        LDR      r0,[r0,#0x10]
        LSLS     r4,r0,#29
        LSRS     r4,r4,#29
        CMP      r4,#0
        BNE      |L1.20|
        LDR      r5,|L1.760|
        B        |L1.52|
|L1.20|
        CMP      r4,#2
        BEQ      |L1.28|
        CMP      r4,#1
        BNE      |L1.42|
|L1.28|
        BL       CLK_GetPLLClockFreq
        MOV      r5,r0
        CMP      r4,#1
        BNE      |L1.52|
        LSRS     r5,r5,#1
        B        |L1.52|
|L1.42|
        CMP      r4,#3
        BNE      |L1.50|
        LDR      r5,|L1.764|
        B        |L1.52|
|L1.50|
        LDR      r5,|L1.768|
|L1.52|
        LDR      r0,|L1.756|
        LDR      r0,[r0,#0x18]
        LSLS     r0,r0,#28
        LSRS     r0,r0,#28
        ADDS     r6,r0,#1
        MOV      r1,r6
        MOV      r0,r5
        BL       __aeabi_uidivmod
        POP      {r4-r6,pc}
        ENDP

DrvI2C_Ctrl PROC
        PUSH     {r4-r7,lr}
        LDR      r4,[sp,#0x14]
        MOVS     r5,#0
        CMP      r1,#0
        BEQ      |L1.86|
        MOVS     r6,#0x20
        ORRS     r5,r5,r6
|L1.86|
        CMP      r2,#0
        BEQ      |L1.94|
        MOVS     r6,#0x10
        ORRS     r5,r5,r6
|L1.94|
        CMP      r3,#0
        BEQ      |L1.102|
        MOVS     r6,#8
        ORRS     r5,r5,r6
|L1.102|
        CMP      r4,#0
        BEQ      |L1.110|
        MOVS     r6,#4
        ORRS     r5,r5,r6
|L1.110|
        LDR      r6,[r0,#0]
        MOVS     r7,#0x3c
        BICS     r6,r6,r7
        ORRS     r6,r6,r5
        STR      r6,[r0,#0]
        POP      {r4-r7,pc}
        ENDP

CLK_GetAPBClockFreq PROC
        PUSH     {r4,lr}
        BL       CLK_GetHCLKFreq
        MOV      r4,r0
        LDR      r0,|L1.756|
        LDR      r0,[r0,#0x2c]
        ADDS     r1,r0,#1
        MOV      r0,r4
        BL       __aeabi_uidivmod
        POP      {r4,pc}
        ENDP

DrvI2C_Init PROC
        PUSH     {r1-r7,lr}
        MOV      r4,r0
        MOV      r6,r1
        MOV      r7,r2
        BL       CLK_GetAPBClockFreq
        MOVS     r1,#0xa
        MULS     r0,r1,r0
        LSLS     r1,r6,#2
        STR      r0,[sp,#0]
        BL       __aeabi_uidivmod
        ADDS     r0,r0,#5
        MOVS     r1,#0xa
        STR      r0,[sp,#4]
        BL       __aeabi_uidivmod
        SUBS     r5,r0,#1
        LDR      r0,|L1.772|
        CMP      r4,r0
        BNE      |L1.200|
        ASRS     r0,r0,#21
        BL       SYS_RESET_IP2
        ASRS     r0,r4,#21
        BL       APBCLK_ENABLE
        B        |L1.216|
|L1.200|
        MOVS     r0,#0xff
        ADDS     r0,#1
        BL       SYS_RESET_IP2
        MOVS     r0,#0xff
        ADDS     r0,#1
        BL       APBCLK_ENABLE
|L1.216|
        NOP      
        LDR      r0,[r4,#0x10]
        ORRS     r0,r0,r5
        STR      r0,[r4,#0x10]
        NOP      
        CMP      r7,#0
        BEQ      |L1.262|
        MOV      r0,r4
        BL       I2C_ENABLE_I2C_INT
        LDR      r0,|L1.776|
        CMP      r4,r0
        BNE      |L1.250|
        MOVS     r0,#0x12
        BL       NVIC_EnableIRQ
        B        |L1.262|
|L1.250|
        LDR      r0,|L1.772|
        CMP      r4,r0
        BNE      |L1.262|
        MOVS     r0,#0x13
        BL       NVIC_EnableIRQ
|L1.262|
        NOP      
        LDR      r0,[r4,#0]
        MOVS     r1,#0x40
        ORRS     r0,r0,r1
        STR      r0,[r4,#0]
        NOP      
        POP      {r1-r7,pc}
        ENDP

DrvI2C_DeInit PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        MOV      r0,r4
        BL       I2C_DISABLE_I2C_INT
        NOP      
        LDR      r0,[r4,#0]
        MOVS     r1,#0x40
        BICS     r0,r0,r1
        STR      r0,[r4,#0]
        NOP      
        LDR      r0,|L1.776|
        CMP      r4,r0
        BNE      |L1.312|
        MOVS     r0,#0x12
        BL       NVIC_DisableIRQ
        B        |L1.324|
|L1.312|
        LDR      r0,|L1.772|
        CMP      r4,r0
        BNE      |L1.324|
        MOVS     r0,#0x13
        BL       NVIC_DisableIRQ
|L1.324|
        POP      {r4,pc}
        ENDP

DrvI2C_GetClockFreq PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        LDR      r5,[r4,#0x10]
        BL       CLK_GetHCLKFreq
        MOV      r6,r0
        ADDS     r0,r5,#1
        LSLS     r1,r0,#2
        MOV      r0,r6
        BL       __aeabi_uidivmod
        POP      {r4-r6,pc}
        ENDP

DrvI2C_EnableInt PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        MOV      r0,r4
        BL       I2C_ENABLE_I2C_INT
        LDR      r0,|L1.776|
        CMP      r4,r0
        BNE      |L1.374|
        MOVS     r0,#0x12
        BL       NVIC_EnableIRQ
        B        |L1.386|
|L1.374|
        LDR      r0,|L1.772|
        CMP      r4,r0
        BNE      |L1.386|
        MOVS     r0,#0x13
        BL       NVIC_EnableIRQ
|L1.386|
        POP      {r4,pc}
        ENDP

DrvI2C_DisableInt PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        MOV      r0,r4
        BL       I2C_DISABLE_I2C_INT
        LDR      r0,|L1.776|
        CMP      r4,r0
        BNE      |L1.412|
        MOVS     r0,#0x12
        BL       NVIC_DisableIRQ
        B        |L1.424|
|L1.412|
        LDR      r0,|L1.772|
        CMP      r4,r0
        BNE      |L1.424|
        MOVS     r0,#0x13
        BL       NVIC_DisableIRQ
|L1.424|
        POP      {r4,pc}
        ENDP

DrvI2C_SetAddress PROC
        PUSH     {r4,r5,lr}
        MOV      r4,r0
        CMP      r1,#0
        BEQ      |L1.448|
        CMP      r1,#1
        BEQ      |L1.458|
        CMP      r1,#2
        BEQ      |L1.468|
        CMP      r1,#3
        BNE      |L1.488|
        B        |L1.478|
|L1.448|
        LSLS     r0,r2,#1
        ORRS     r0,r0,r3
        STR      r0,[r4,#4]
        NOP      
        B        |L1.494|
|L1.458|
        LSLS     r0,r2,#1
        ORRS     r0,r0,r3
        STR      r0,[r4,#0x18]
        NOP      
        B        |L1.494|
|L1.468|
        LSLS     r0,r2,#1
        ORRS     r0,r0,r3
        STR      r0,[r4,#0x1c]
        NOP      
        B        |L1.494|
|L1.478|
        LSLS     r0,r2,#1
        ORRS     r0,r0,r3
        STR      r0,[r4,#0x20]
        NOP      
        B        |L1.494|
|L1.488|
        MOVS     r0,#0
        MVNS     r0,r0
|L1.492|
        POP      {r4,r5,pc}
|L1.494|
        NOP      
        MOVS     r0,#1
        B        |L1.492|
        ENDP

DrvI2C_SetAddressMask PROC
        MOV      r3,r0
        CMP      r1,#0
        BEQ      |L1.520|
        CMP      r1,#1
        BEQ      |L1.528|
        CMP      r1,#2
        BEQ      |L1.536|
        CMP      r1,#3
        BNE      |L1.552|
        B        |L1.544|
|L1.520|
        LSLS     r0,r2,#1
        STR      r0,[r3,#0x24]
        NOP      
        B        |L1.558|
|L1.528|
        LSLS     r0,r2,#1
        STR      r0,[r3,#0x28]
        NOP      
        B        |L1.558|
|L1.536|
        LSLS     r0,r2,#1
        STR      r0,[r3,#0x2c]
        NOP      
        B        |L1.558|
|L1.544|
        LSLS     r0,r2,#1
        STR      r0,[r3,#0x30]
        NOP      
        B        |L1.558|
|L1.552|
        MOVS     r0,#0
        MVNS     r0,r0
|L1.556|
        BX       lr
|L1.558|
        NOP      
        MOVS     r0,#0
        B        |L1.556|
        ENDP

NVIC_EnableIRQ PROC
        LSLS     r2,r0,#27
        LSRS     r2,r2,#27
        MOVS     r1,#1
        LSLS     r1,r1,r2
        LDR      r2,|L1.780|
        STR      r1,[r2,#0]
        BX       lr
        ENDP

NVIC_DisableIRQ PROC
        LSLS     r2,r0,#27
        LSRS     r2,r2,#27
        MOVS     r1,#1
        LSLS     r1,r1,r2
        LDR      r2,|L1.780|
        ADDS     r2,r2,#0x80
        STR      r1,[r2,#0]
        BX       lr
        ENDP

APBCLK_ENABLE PROC
        LDR      r1,|L1.756|
        LDR      r1,[r1,#8]
        ORRS     r1,r1,r0
        LDR      r2,|L1.756|
        STR      r1,[r2,#8]
        BX       lr
        ENDP

CLK_GetPLLClockFreq PROC
        PUSH     {r1-r7,lr}
        ADR      r0,|L1.784|
        LDR      r0,[r0,#0]
        STR      r0,[sp,#0]
        MOVS     r0,#0
        STR      r0,[sp,#8]
        LDR      r0,|L1.756|
        LDR      r4,[r0,#0x20]
        ASRS     r0,r0,#12
        TST      r4,r0
        BNE      |L1.708|
        MOVS     r0,#1
        LSLS     r0,r0,#19
        TST      r4,r0
        BEQ      |L1.640|
        LDR      r0,|L1.768|
        B        |L1.642|
|L1.640|
        LDR      r0,|L1.760|
|L1.642|
        MOV      r5,r0
        MOVS     r0,#1
        LSLS     r0,r0,#17
        TST      r4,r0
        BEQ      |L1.656|
        STR      r5,[sp,#8]
        B        |L1.708|
|L1.656|
        MOVS     r0,#3
        LSLS     r0,r0,#14
        ANDS     r0,r0,r4
        LSRS     r0,r0,#14
        MOV      r1,sp
        LDRB     r7,[r1,r0]
        LSLS     r0,r4,#23
        LSRS     r0,r0,#23
        ADDS     r0,r0,#2
        STR      r0,[sp,#4]
        MOVS     r0,#0x1f
        LSLS     r0,r0,#9
        ANDS     r0,r0,r4
        LSRS     r0,r0,#9
        ADDS     r6,r0,#2
        MOV      r2,r6
        MULS     r2,r7,r2
        MOV      r1,r2
        LSRS     r3,r5,#2
        LDR      r2,[sp,#4]
        MULS     r3,r2,r3
        MOV      r0,r3
        BL       __aeabi_uidivmod
        LSLS     r0,r0,#2
        STR      r0,[sp,#8]
|L1.708|
        LDR      r0,[sp,#8]
        POP      {r1-r7,pc}
        ENDP

I2C_ENABLE_I2C_INT PROC
        LDR      r1,[r0,#0]
        MOVS     r2,#0x80
        ORRS     r1,r1,r2
        STR      r1,[r0,#0]
        BX       lr
        ENDP

I2C_DISABLE_I2C_INT PROC
        LDR      r1,[r0,#0]
        MOVS     r2,#0x80
        BICS     r1,r1,r2
        STR      r1,[r0,#0]
        BX       lr
        ENDP

SYS_RESET_IP2 PROC
        MOVS     r1,#5
        LSLS     r1,r1,#28
        LDR      r1,[r1,#0xc]
        ORRS     r1,r1,r0
        MOVS     r2,#5
        LSLS     r2,r2,#28
        STR      r1,[r2,#0xc]
        MOV      r1,r2
        LDR      r1,[r1,#0xc]
        BICS     r1,r1,r0
        STR      r1,[r2,#0xc]
        BX       lr
        ENDP

|L1.756|
        DCD      0x50000200
|L1.760|
        DCD      0x00b71b00
|L1.764|
        DCD      0x00002710
|L1.768|
        DCD      0x01518000
|L1.772|
        DCD      0x40120000
|L1.776|
        DCD      0x40020000
|L1.780|
        DCD      0xe000e100
|L1.784|
        DCB      1,2,2,4

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        EXPORT DrvI2C_Ctrl [CODE]
        EXPORT CLK_GetAPBClockFreq [CODE]
        EXPORT DrvI2C_Init [CODE]
        EXPORT DrvI2C_DeInit [CODE]
        EXPORT DrvI2C_GetClockFreq [CODE]
        EXPORT DrvI2C_EnableInt [CODE]
        EXPORT DrvI2C_DisableInt [CODE]
        EXPORT DrvI2C_SetAddress [CODE]
        EXPORT DrvI2C_SetAddressMask [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT __aeabi_uidivmod [CODE]

        KEEP CLK_GetHCLKFreq
        KEEP NVIC_EnableIRQ
        KEEP NVIC_DisableIRQ
        KEEP APBCLK_ENABLE
        KEEP CLK_GetPLLClockFreq
        KEEP I2C_ENABLE_I2C_INT
        KEEP I2C_DISABLE_I2C_INT
        KEEP SYS_RESET_IP2

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
