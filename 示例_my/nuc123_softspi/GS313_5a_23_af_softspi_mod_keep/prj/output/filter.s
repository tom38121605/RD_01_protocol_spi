; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--debug -c --asm --info=totals -o.\output\filter.o --depend=.\output\filter.d --cpu=Cortex-M0 --apcs=interwork -O0 -I..\CMSIS\CM0\DeviceSupport\Nuvoton\NUC123Series -I..\CMSIS\CM0\CoreSupport -I..\INC\DrvInc -I..\INC\SysInc -I..\dw -IC:\Keil_v472\ARM\RV31\INC -IC:\Keil_v472\ARM\CMSIS\Include -IC:\Keil_v472\ARM\Inc\Nuvoton\NUC123Series -D__MICROLIB --omf_browse=.\output\filter.crf ..\AppSrc\filter.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

abs PROC
        MOV      r1,r0
        CMP      r1,#0
        BGE      |L1.10|
        RSBS     r0,r1,#0
|L1.8|
        BX       lr
|L1.10|
        MOV      r0,r1
        B        |L1.8|
        ENDP

I2S_IRQHandler PROC
        PUSH     {r2-r4,lr}
        LDR      r0,|L1.248|
        LDR      r0,[r0,#0x18]
        LDR      r1,|L1.252|
        STR      r0,[r1,#0]  ; t_s
        NOP      
        LDR      r0,|L1.256|
        LDR      r0,[r0,#0xc]
        LDR      r1,|L1.260|
        STR      r0,[r1,#0]  ; sum
        LDR      r0,|L1.264|
        LDR      r1,[r1,#0]  ; sum
        STR      r1,[r0,#0]  ; i2s_status
        NOP      
        LDR      r0,|L1.256|
        LDR      r0,[r0,#0x14]
        STR      r0,[sp,#4]
        NOP      
        LDR      r0,|L1.256|
        LDR      r0,[r0,#0x14]
        STR      r0,[sp,#0]
        LDR      r0,|L1.268|
        LDRB     r0,[r0,#0]  ; flg_softmute
        CMP      r0,#1
        BNE      |L1.214|
        MOVS     r0,#0
        STR      r0,[sp,#4]
        STR      r0,[sp,#0]
        LDR      r0,|L1.264|
        LDR      r0,[r0,#0]  ; i2s_status
        LSLS     r0,r0,#7
        LSRS     r0,r0,#31
        LDR      r1,|L1.264|
        LDR      r1,[r1,#0]  ; i2s_status
        LSLS     r1,r1,#3
        LSRS     r1,r1,#31
        CMP      r0,r1
        BNE      |L1.106|
        LDR      r1,|L1.260|
        LDR      r0,[sp,#4]
        STR      r0,[r1,#0]  ; sum
        LDR      r0,[sp,#0]
        STR      r0,[sp,#4]
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; sum
        STR      r0,[sp,#0]
|L1.106|
        LDR      r0,[sp,#4]
        LSLS     r0,r0,#8
        LDR      r1,[sp,#0]
        ADDS     r0,r0,r1
        LDR      r1,|L1.272|
        STR      r0,[r1,#0]  ; sum_H
        LDR      r0,[sp,#4]
        CMP      r0,#0
        BLE      |L1.128|
        LDR      r0,[sp,#4]
        B        |L1.132|
|L1.128|
        LDR      r0,[sp,#4]
        RSBS     r0,r0,#0
|L1.132|
        ASRS     r0,r0,#16
        LDR      r1,|L1.276|
        LDR      r1,[r1,#0]  ; audio_detect_L
        ADDS     r0,r0,r1
        LDR      r1,|L1.276|
        STR      r0,[r1,#0]  ; audio_detect_L
        LDR      r0,[sp,#0]
        CMP      r0,#0
        BLE      |L1.154|
        LDR      r0,[sp,#0]
        B        |L1.158|
|L1.154|
        LDR      r0,[sp,#0]
        RSBS     r0,r0,#0
|L1.158|
        ASRS     r0,r0,#16
        LDR      r1,|L1.280|
        LDR      r1,[r1,#0]  ; audio_detect_R
        ADDS     r0,r0,r1
        LDR      r1,|L1.280|
        STR      r0,[r1,#0]  ; audio_detect_R
        LDR      r0,|L1.264|
        LDRB     r0,[r0,#0]  ; i2s_status
        LSLS     r0,r0,#28
        LSRS     r0,r0,#31
        BEQ      |L1.206|
        LDR      r0,|L1.264|
        LDR      r0,[r0,#0]  ; i2s_status
        LSLS     r0,r0,#3
        LSRS     r0,r0,#31
        BEQ      |L1.206|
        LDR      r1,|L1.260|
        LDR      r0,[sp,#4]
        STR      r0,[r1,#0]  ; sum
        LDR      r0,[sp,#0]
        STR      r0,[sp,#4]
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; sum
        STR      r0,[sp,#0]
|L1.206|
        MOV      r1,sp
        ADD      r0,sp,#4
        BL       dealFlashEvent
|L1.214|
        LDR      r0,[sp,#0]
        BL       I2S_SET_DATA
        LDR      r0,[sp,#4]
        BL       I2S_SET_DATA
        POP      {r2-r4,pc}
        ENDP

filterInit PROC
        MOVS     r0,#1
        LDR      r1,|L1.284|
        STR      r0,[r1,#0]  ; firsr_trigger
        BX       lr
        ENDP

filter PROC
        BX       lr
        ENDP

triggerFilter PROC
        BX       lr
        ENDP

I2S_SET_DATA PROC
        LDR      r1,|L1.256|
        STR      r0,[r1,#0x10]
        BX       lr
        ENDP

        DCW      0x0000
|L1.248|
        DCD      0xe000e000
|L1.252|
        DCD      t_s
|L1.256|
        DCD      0x401a0000
|L1.260|
        DCD      ||sum||
|L1.264|
        DCD      i2s_status
|L1.268|
        DCD      flg_softmute
|L1.272|
        DCD      sum_H
|L1.276|
        DCD      audio_detect_L
|L1.280|
        DCD      audio_detect_R
|L1.284|
        DCD      firsr_trigger

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.bss||, DATA, NOINIT, ALIGN=1

winpool
        %        192
delay_box
        %        3608

        AREA ||.data||, DATA, ALIGN=2

firsr_trigger
        DCD      0x00000000
filter_trigger
        DCD      0x00000000
filter_bypass
        DCD      0x00000000
drc_bypass
        DCD      0x00000000
kkk
        DCD      0x00000000
lpf_out
        DCD      0x00000000
||sum||
        DCD      0x00000000
i2s_status
        DCD      0x00000000
filter_rxbuf_flag
        DCD      0x00000000
t_s
        DCD      0x00000000
t_e
        DCD      0x00000000
t_t
        DCD      0x00000000
t_max
        DCD      0x00000000
sum_H
        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\AppSrc\\filter.c"
	AREA ||ei._smlal_head||, group =|_smlal_head|, CODE, READONLY
	THUMB
	EXPORT |_smlal_head|
#line 24 "..\\AppSrc\\asm.c"
|_smlal_head| PROC
#line 25

 mov r8,r4
 mov r11,r5
 mov r12,r6
 
 
 uxth r6,r0  
 asrs r0,#16  
 uxth r7,r1  
 asrs r1,#16  
 mov r4,r1
 muls r1,r0, r1
 muls r0,r7, r0
 mov r5, r6
 muls r6,r4,r6
 muls r7,r5,r7
 adds r6,r0 
 mov r0,r6
 lsrs r6,r6,#16
 lsls r5,r0,#16
 adds r7,r5
 adcs r1,r6
 mov r9, r7
 mov r10, r1 
 
 uxth r6,r2  
 asrs r2,#16  
 uxth r7,r3  
 asrs r3,#16  
 mov r4,r3
 muls r3,r2, r3
 muls r2,r7, r2
 mov r5, r6
 muls r6,r4,r6
 muls r7,r5,r7
 adds r6,r2 
 mov r2,r6
 lsrs r6,r6,#16
 lsls r5,r2,#16
 adds r7,r5
 adcs r3,r6
 
 mov r6, r9
 mov r2, r10
 adds r7,r6
 adcs r3,r2
 
 mov r9, r7
 mov r10, r3
 
 mov r4,r8
 mov r5,r11
 mov r6,r12
 bx lr  
	ENDP
	AREA ||ei._smlal_middle||, group =|_smlal_middle|, CODE, READONLY
	THUMB
	EXPORT |_smlal_middle|
#line 81
|_smlal_middle| PROC
#line 82

 
 uxth r6,r0  
 asrs r0,#16  
 uxth r7,r1  
 asrs r1,#16  
 mov r4,r1
 muls r1,r0, r1
 muls r0,r7, r0
 mov r5, r6
 muls r6,r4,r6
 muls r7,r5,r7
 adds r6,r0 
 mov r0,r6
 lsrs r6,r6,#16
 lsls r5,r0,#16
 adds r7,r5
 adcs r1,r6
 
 mov r6, r9
 mov r0, r10
 adds r7,r6
 adcs r1,r0
 
 mov r9, r7
 mov r10, r1

 
 uxth r6,r2  
 asrs r2,#16  
 uxth r7,r3  
 asrs r3,#16  
 mov r4,r3
 muls r3,r2, r3
 muls r2,r7, r2
 mov r5, r6
 muls r6,r4,r6
 muls r7,r5,r7
 adds r6,r2 
 mov r2,r6
 lsrs r6,r6,#16
 lsls r5,r2,#16
 adds r7,r5
 adcs r3,r6
 
 mov r6, r9
 mov r2, r10
 adds r7,r6
 adcs r3,r2
 
 mov r9, r7
 mov r10, r3

 mov r4,r8
 mov r5,r11
 mov r6,r12
 bx lr
 
	ENDP
	AREA ||ei._smlal_end||, group =|_smlal_end|, CODE, READONLY
	THUMB
	EXPORT |_smlal_end|
#line 142
|_smlal_end| PROC
#line 143

 
 uxth r6,r0  
 asrs r0,#16  
 uxth r7,r1  
 asrs r1,#16  
 mov r4,r1
 muls r1,r0, r1
 muls r0,r7, r0
 mov r5, r6
 muls r6,r4,r6
 muls r7,r5,r7
 adds r6,r0 
 mov r0,r6
 lsrs r6,r6,#16
 lsls r5,r0,#16
 adds r7,r5
 adcs r1,r6
 
 mov r6, r9
 mov r0, r10
 adds r7,r6
 adcs r1,r0
 
 lsrs r7, #14 
 lsls r1, #18
 orrs r7,r1
 
 str r7,[r2]

 mov r4,r8
 mov r5,r11
 mov r6,r12
 
 
 
 bx lr
	ENDP
	AREA ||ei.SMLAL||, group =|SMLAL|, CODE, READONLY
	THUMB
	EXPORT |SMLAL|
#line 183
|SMLAL| PROC
#line 184

 push {r4-r7,lr}
 uxth r6,r0  
 asrs r0,#16  
 uxth r7,r1  
 asrs r1,#16  
 mov r4,r1
 muls r1,r0, r1
 muls r0,r7, r0
 mov r5, r6
 muls r6,r4,r6
 muls r7,r5,r7
 adds r6,r0 
 mov r0,r6
 lsrs r6,r6,#16
 lsls r5,r0,#16
 adds r7,r5
 adcs r1,r6
 
 ldr r6,[r2]
 ldr r0,[r3]
 adds r7,r6
 adcs r1,r0
 
 str r7,[r2]
 str r1,[r3]
 pop {r4-r7,pc}
	ENDP

;*** End   embedded assembler ***

        EXPORT abs [CODE]
        EXPORT I2S_IRQHandler [CODE]
        EXPORT filterInit [CODE]
        EXPORT filter [CODE]
        EXPORT triggerFilter [CODE]
        EXPORT winpool [DATA,SIZE=192]
        EXPORT delay_box [DATA,SIZE=3608]
        EXPORT firsr_trigger [DATA,SIZE=4]
        EXPORT filter_trigger [DATA,SIZE=4]
        EXPORT filter_bypass [DATA,SIZE=4]
        EXPORT drc_bypass [DATA,SIZE=4]
        EXPORT kkk [DATA,SIZE=4]
        EXPORT lpf_out [DATA,SIZE=4]
        EXPORT filter_rxbuf_flag [DATA,SIZE=4]
        EXPORT t_s [DATA,SIZE=4]
        EXPORT t_e [DATA,SIZE=4]
        EXPORT t_t [DATA,SIZE=4]
        EXPORT t_max [DATA,SIZE=4]
        EXPORT sum_H [DATA,SIZE=4]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT dealFlashEvent [CODE]
        IMPORT flg_softmute [DATA]
        IMPORT audio_detect_L [DATA]
        IMPORT audio_detect_R [DATA]

        KEEP I2S_SET_DATA
        KEEP ||sum||
        KEEP i2s_status

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
