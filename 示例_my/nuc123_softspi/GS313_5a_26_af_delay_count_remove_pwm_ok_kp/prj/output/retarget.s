; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--debug -c --asm --info=totals -o.\output\retarget.o --depend=.\output\retarget.d --cpu=Cortex-M0 --apcs=interwork -O0 -I..\CMSIS\CM0\DeviceSupport\Nuvoton\NUC123Series -I..\CMSIS\CM0\CoreSupport -I..\INC\DrvInc -I..\INC\SysInc -I..\dw -IC:\Keil_v472\ARM\RV31\INC -IC:\Keil_v472\ARM\CMSIS\Include -IC:\Keil_v472\ARM\Inc\Nuvoton\NUC123Series -D__MICROLIB --omf_browse=.\output\retarget.crf ..\DrvSrc\retarget.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

SendChar_ToUART PROC
        NOP      
|L1.2|
        LDR      r1,|L1.284|
        LDR      r1,[r1,#0x18]
        MOVS     r2,#1
        LSLS     r2,r2,#23
        TST      r1,r2
        BNE      |L1.2|
        LDR      r1,|L1.284|
        STR      r0,[r1,#0]
        CMP      r0,#0xa
        BNE      |L1.42|
        NOP      
|L1.24|
        LDR      r1,|L1.284|
        LDR      r1,[r1,#0x18]
        MOVS     r2,#1
        LSLS     r2,r2,#23
        TST      r1,r2
        BNE      |L1.24|
        MOVS     r1,#0xd
        LDR      r2,|L1.284|
        STR      r1,[r2,#0]
|L1.42|
        BX       lr
        ENDP

SendChar PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDR      r0,|L1.288|
        LDRB     r2,[r0,#0]  ; g_buf_len
        LDRB     r0,[r0,#0]  ; g_buf_len
        ADDS     r0,r0,#1
        LDR      r3,|L1.288|
        STRB     r0,[r3,#0]
        LDR      r0,|L1.292|
        STRB     r4,[r0,r2]
        MOVS     r1,#0
        MOV      r2,r3
        LDRB     r2,[r2,#0]  ; g_buf_len
        STRB     r1,[r0,r2]
        MOV      r0,r3
        LDRB     r0,[r0,#0]  ; g_buf_len
        ADDS     r0,r0,#1
        CMP      r0,#0x10
        BCS      |L1.90|
        CMP      r4,#0xa
        BEQ      |L1.90|
        CMP      r4,#0
        BNE      |L1.142|
|L1.90|
        MOVS     r2,#0
        LDR      r1,|L1.292|
        MOVS     r0,#4
        BL       SH_DoCommand
        CMP      r0,#0
        BEQ      |L1.112|
        MOVS     r0,#0
        LDR      r1,|L1.288|
        STRB     r0,[r1,#0]
|L1.110|
        POP      {r4,pc}
|L1.112|
        MOVS     r3,#0
        B        |L1.126|
|L1.116|
        LDR      r1,|L1.292|
        LDRB     r0,[r1,r3]
        BL       SendChar_ToUART
        ADDS     r3,r3,#1
|L1.126|
        LDR      r0,|L1.288|
        LDRB     r0,[r0,#0]  ; g_buf_len
        CMP      r3,r0
        BLT      |L1.116|
        MOVS     r0,#0
        LDR      r1,|L1.288|
        STRB     r0,[r1,#0]
        NOP      
|L1.142|
        NOP      
        B        |L1.110|
        ENDP

GetChar PROC
        PUSH     {r3,lr}
        B        |L1.162|
|L1.150|
        LDR      r0,[sp,#0]
        CMP      r0,#0
        BEQ      |L1.162|
        LDR      r0,[sp,#0]
        UXTB     r0,r0
|L1.160|
        POP      {r3,pc}
|L1.162|
        MOV      r2,sp
        MOVS     r1,#0
        MOVS     r0,#7
        BL       SH_DoCommand
        CMP      r0,#0
        BNE      |L1.150|
        NOP      
        B        |L1.160|
        ENDP

kbhit PROC
        LDR      r0,|L1.284|
        LDR      r0,[r0,#0x18]
        MOVS     r1,#1
        LSLS     r1,r1,#14
        ANDS     r0,r0,r1
        LSRS     r0,r0,#14
        BX       lr
        ENDP

IsDebugFifoEmpty PROC
        LDR      r0,|L1.284|
        LDR      r0,[r0,#0x18]
        MOVS     r1,#1
        LSLS     r1,r1,#28
        ANDS     r0,r0,r1
        LSRS     r0,r0,#28
        BX       lr
        ENDP

_ttywrch PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        MOV      r0,r4
        BL       SendChar
        POP      {r4,pc}
        ENDP

fputc PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r0,r4
        BL       SendChar
        MOV      r0,r4
        POP      {r4-r6,pc}
        ENDP

fgetc PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        BL       GetChar
        POP      {r4,pc}
        ENDP

ferror PROC
        MOV      r1,r0
        MOVS     r0,#0
        MVNS     r0,r0
        BX       lr
        ENDP

_sys_exit PROC
        MOVS     r2,#0
        LDR      r1,|L1.296|
        MOVS     r0,#0x18
        BL       SH_DoCommand
        CMP      r0,#0
        BNE      |L1.278|
        NOP      
|L1.270|
        BL       IsDebugFifoEmpty
        CMP      r0,#0
        BEQ      |L1.270|
|L1.278|
        NOP      
|L1.280|
        B        |L1.280|
        ENDP

        DCW      0x0000
|L1.284|
        DCD      0x40050000
|L1.288|
        DCD      g_buf_len
|L1.292|
        DCD      g_buf
|L1.296|
        DCD      0x00020026

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.bss||, DATA, NOINIT, ALIGN=0

g_buf
        %        16

        AREA ||.data||, DATA, ALIGN=2

g_buf_len
        DCB      0x00,0x00,0x00,0x00
__stdout
        DCD      0x00000000
__stdin
        DCD      0x00000000

        EXPORT SendChar_ToUART [CODE]
        EXPORT SendChar [CODE]
        EXPORT GetChar [CODE]
        EXPORT kbhit [CODE]
        EXPORT IsDebugFifoEmpty [CODE]
        EXPORT _ttywrch [CODE]
        EXPORT fputc [CODE]
        EXPORT fgetc [CODE]
        EXPORT ferror [CODE]
        EXPORT _sys_exit [CODE]
        EXPORT __stdout [DATA,SIZE=4]
        EXPORT __stdin [DATA,SIZE=4]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT _printf_widthprec [CODE]
        IMPORT SH_DoCommand [CODE]

        KEEP g_buf
        KEEP g_buf_len

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
