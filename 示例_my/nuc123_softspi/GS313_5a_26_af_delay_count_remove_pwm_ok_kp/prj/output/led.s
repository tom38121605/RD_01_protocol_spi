; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--debug -c --asm --info=totals -o.\output\led.o --depend=.\output\led.d --cpu=Cortex-M0 --apcs=interwork -O0 -I..\CMSIS\CM0\DeviceSupport\Nuvoton\NUC123Series -I..\CMSIS\CM0\CoreSupport -I..\INC\DrvInc -I..\INC\SysInc -I..\dw -IC:\Keil_v472\ARM\RV31\INC -IC:\Keil_v472\ARM\CMSIS\Include -IC:\Keil_v472\ARM\Inc\Nuvoton\NUC123Series -D__MICROLIB --omf_browse=.\output\led.crf ..\AppSrc\led.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

GPIO_SET_MODE PROC
        PUSH     {r4,r5,lr}
        LDR      r3,[r0,#0]
        LSLS     r5,r1,#1
        MOVS     r4,#3
        LSLS     r4,r4,r5
        BICS     r3,r3,r4
        LSLS     r5,r1,#1
        MOV      r4,r2
        LSLS     r4,r4,r5
        ORRS     r3,r3,r4
        STR      r3,[r0,#0]
        POP      {r4,r5,pc}
        ENDP

leddisable PROC
        NOP      
        LDR      r0,|L1.1044|
        LDR      r0,[r0,#0]
        MOVS     r1,#1
        LSLS     r1,r1,#30
        BICS     r0,r0,r1
        LDR      r1,|L1.1044|
        STR      r0,[r1,#0]
        NOP      
        BX       lr
        ENDP

ledInit PROC
        PUSH     {r4,lr}
        NOP      
        MOVS     r0,#1
        LDR      r1,|L1.1048|
        STR      r0,[r1,#0]
        NOP      
        NOP      
        ADDS     r1,r1,#4
        STR      r0,[r1,#0]
        NOP      
        NOP      
        ADDS     r1,r1,#4
        STR      r0,[r1,#0]
        NOP      
        MOVS     r2,#1
        MOVS     r1,#0xc
        LDR      r0,|L1.1052|
        BL       GPIO_SET_MODE
        MOVS     r2,#1
        MOVS     r1,#0xd
        LDR      r0,|L1.1052|
        BL       GPIO_SET_MODE
        MOVS     r2,#1
        MOVS     r1,#0xe
        LDR      r0,|L1.1052|
        BL       GPIO_SET_MODE
        MOVS     r0,#0
        LDR      r1,|L1.1056|
        LDR      r1,[r1,#0x14]
        MOVS     r2,#7
        LSLS     r2,r2,#8
        BICS     r1,r1,r2
        ORRS     r1,r1,r0
        LDR      r2,|L1.1056|
        STR      r1,[r2,#0x14]
        NOP      
        LSLS     r3,r2,#19
        MOVS     r2,#0xa
        MOVS     r1,#0x15
        LDR      r0,|L1.1044|
        BL       DrvTIMER_Init
        MOVS     r1,#2
        MOVS     r0,#8
        BL       NVIC_SetPriority
        MOVS     r1,#1
        LSLS     r1,r1,#29
        LDR      r0,|L1.1044|
        BL       DrvTIMER_EnableInt
        NOP      
        LDR      r0,|L1.1044|
        LDR      r0,[r0,#0]
        MOVS     r1,#1
        LSLS     r1,r1,#30
        ORRS     r0,r0,r1
        LDR      r1,|L1.1044|
        STR      r0,[r1,#0]
        NOP      
        POP      {r4,pc}
        ENDP

fadeon PROC
        MOVS     r1,#0
        LDR      r2,|L1.1060|
        STR      r1,[r2,#0]  ; ck
        LDR      r1,|L1.1064|
        STR      r0,[r1,#0]  ; fade_color
        MOVS     r1,#6
        LDR      r2,|L1.1068|
        STR      r1,[r2,#0]  ; breath_flag
        MOVS     r1,#1
        LDR      r2,|L1.1072|
        STR      r1,[r2,#0]  ; fade_
        BX       lr
        ENDP

fadeoff PROC
        MOVS     r1,#0x14
        LDR      r2,|L1.1060|
        STR      r1,[r2,#0]  ; ck
        LDR      r1,|L1.1064|
        STR      r0,[r1,#0]  ; fade_color
        MOVS     r1,#7
        LDR      r2,|L1.1068|
        STR      r1,[r2,#0]  ; breath_flag
        MOVS     r1,#1
        LDR      r2,|L1.1072|
        STR      r1,[r2,#0]  ; fade_
        BX       lr
        ENDP

breathingColor PROC
        PUSH     {lr}
        LDR      r1,|L1.1068|
        LDR      r0,[r1,#0]  ; breath_flag
        LDR      r1,|L1.1076|
        LDR      r1,[r1,#0]  ; cc
        ADDS     r1,r1,#1
        LDR      r2,|L1.1076|
        STR      r1,[r2,#0]  ; cc
        LSLS     r1,r1,#31
        LSRS     r1,r1,#31
        BEQ      |L1.490|
        NOP      
|L1.244|
        MOVS     r3,r0
        BL       __ARM_common_switch8
        DCB      0x09,0xf3
        DCB      0x06,0x27,0x48,0x69
        DCB      0x8d,0xba,0xcb,0xdc
        DCB      0xf3,0x00
        MOVS     r1,#0
        LDR      r2,|L1.1080|
        STR      r1,[r2,#0]  ; R_C
        LDR      r2,|L1.1084|
        STR      r1,[r2,#0]  ; G_C
        LDR      r1,|L1.1060|
        LDR      r1,[r1,#0]  ; ck
        ADDS     r1,r1,#1
        LDR      r2,|L1.1060|
        STR      r1,[r2,#0]  ; ck
        MOV      r1,r2
        LDR      r1,[r1,#0]  ; ck
        CMP      r1,#0x27
        BLS      |L1.296|
        MOVS     r1,#1
        STR      r1,[r2,#0]  ; ck
        B        |L1.326|
|L1.296|
        LDR      r1,|L1.1060|
        LDR      r1,[r1,#0]  ; ck
        CMP      r1,#0x14
        BLS      |L1.318|
        LDR      r1,|L1.1060|
        LDR      r1,[r1,#0]  ; ck
        MOVS     r2,#0x28
        SUBS     r1,r2,r1
        LDR      r2,|L1.1088|
        STR      r1,[r2,#0]  ; B_C
        B        |L1.326|
|L1.318|
        LDR      r1,|L1.1060|
        LDR      r1,[r1,#0]  ; ck
        LDR      r2,|L1.1088|
        STR      r1,[r2,#0]  ; B_C
|L1.326|
        B        |L1.784|
        MOVS     r1,#0
        LDR      r2,|L1.1088|
        STR      r1,[r2,#0]  ; B_C
        LDR      r2,|L1.1084|
        STR      r1,[r2,#0]  ; G_C
        LDR      r1,|L1.1060|
        LDR      r1,[r1,#0]  ; ck
        ADDS     r1,r1,#1
        LDR      r2,|L1.1060|
        STR      r1,[r2,#0]  ; ck
        MOV      r1,r2
        LDR      r1,[r1,#0]  ; ck
        CMP      r1,#0x27
        BLS      |L1.362|
        MOVS     r1,#1
        STR      r1,[r2,#0]  ; ck
        B        |L1.392|
|L1.362|
        LDR      r1,|L1.1060|
        LDR      r1,[r1,#0]  ; ck
        CMP      r1,#0x14
        BLS      |L1.384|
        LDR      r1,|L1.1060|
        LDR      r1,[r1,#0]  ; ck
        MOVS     r2,#0x28
        SUBS     r1,r2,r1
        LDR      r2,|L1.1080|
        STR      r1,[r2,#0]  ; R_C
        B        |L1.392|
|L1.384|
        LDR      r1,|L1.1060|
        LDR      r1,[r1,#0]  ; ck
        LDR      r2,|L1.1080|
        STR      r1,[r2,#0]  ; R_C
|L1.392|
        B        |L1.784|
        MOVS     r1,#0
        LDR      r2,|L1.1088|
        STR      r1,[r2,#0]  ; B_C
        LDR      r2,|L1.1080|
        STR      r1,[r2,#0]  ; R_C
        LDR      r1,|L1.1060|
        LDR      r1,[r1,#0]  ; ck
        ADDS     r1,r1,#1
        LDR      r2,|L1.1060|
        STR      r1,[r2,#0]  ; ck
        MOV      r1,r2
        LDR      r1,[r1,#0]  ; ck
        CMP      r1,#0x14
        BLS      |L1.436|
        MOV      r1,r2
        LDR      r1,[r1,#0]  ; ck
        MOVS     r2,#0x28
        SUBS     r1,r2,r1
        LDR      r2,|L1.1084|
        STR      r1,[r2,#0]  ; G_C
        B        |L1.444|
|L1.436|
        LDR      r1,|L1.1060|
        LDR      r1,[r1,#0]  ; ck
        LDR      r2,|L1.1084|
        STR      r1,[r2,#0]  ; G_C
|L1.444|
        LDR      r1,|L1.1060|
        LDR      r1,[r1,#0]  ; ck
        CMP      r1,#0x27
        BLS      |L1.458|
        MOVS     r1,#1
        LDR      r2,|L1.1060|
        STR      r1,[r2,#0]  ; ck
|L1.458|
        B        |L1.784|
        MOVS     r1,#0
        LDR      r2,|L1.1088|
        STR      r1,[r2,#0]  ; B_C
        LDR      r1,|L1.1060|
        LDR      r1,[r1,#0]  ; ck
        ADDS     r1,r1,#1
        LDR      r2,|L1.1060|
        STR      r1,[r2,#0]  ; ck
        MOV      r1,r2
        LDR      r1,[r1,#0]  ; ck
        CMP      r1,#0x27
        BLS      |L1.492|
        MOVS     r1,#1
        STR      r1,[r2,#0]  ; ck
        B        |L1.522|
|L1.490|
        B        |L1.786|
|L1.492|
        LDR      r1,|L1.1060|
        LDR      r1,[r1,#0]  ; ck
        CMP      r1,#0x14
        BLS      |L1.514|
        LDR      r1,|L1.1060|
        LDR      r1,[r1,#0]  ; ck
        MOVS     r2,#0x28
        SUBS     r1,r2,r1
        LDR      r2,|L1.1084|
        STR      r1,[r2,#0]  ; G_C
        B        |L1.522|
|L1.514|
        LDR      r1,|L1.1060|
        LDR      r1,[r1,#0]  ; ck
        LDR      r2,|L1.1084|
        STR      r1,[r2,#0]  ; G_C
|L1.522|
        LDR      r1,|L1.1084|
        LDR      r1,[r1,#0]  ; G_C
        LDR      r2,|L1.1080|
        STR      r1,[r2,#0]  ; R_C
        B        |L1.784|
        LDR      r1,|L1.1060|
        LDR      r1,[r1,#0]  ; ck
        ADDS     r1,r1,#1
        LDR      r2,|L1.1060|
        STR      r1,[r2,#0]  ; ck
        MOV      r1,r2
        LDR      r1,[r1,#0]  ; ck
        CMP      r1,#0x41
        BLS      |L1.556|
        MOVS     r1,#1
        STR      r1,[r2,#0]  ; ck
        B        |L1.602|
|L1.556|
        LDR      r1,|L1.1060|
        LDR      r1,[r1,#0]  ; ck
        CMP      r1,#0x2e
        BLS      |L1.578|
        LDR      r1,|L1.1060|
        LDR      r1,[r1,#0]  ; ck
        MOVS     r2,#0x42
        SUBS     r1,r2,r1
        LDR      r2,|L1.1084|
        STR      r1,[r2,#0]  ; G_C
        B        |L1.602|
|L1.578|
        LDR      r1,|L1.1060|
        LDR      r1,[r1,#0]  ; ck
        CMP      r1,#0x14
        BLS      |L1.594|
        MOVS     r1,#0x14
        LDR      r2,|L1.1084|
        STR      r1,[r2,#0]  ; G_C
        B        |L1.602|
|L1.594|
        LDR      r1,|L1.1060|
        LDR      r1,[r1,#0]  ; ck
        LDR      r2,|L1.1084|
        STR      r1,[r2,#0]  ; G_C
|L1.602|
        LDR      r1,|L1.1084|
        LDR      r1,[r1,#0]  ; G_C
        LDR      r2,|L1.1080|
        STR      r1,[r2,#0]  ; R_C
        LDR      r2,|L1.1088|
        STR      r1,[r2,#0]  ; B_C
        MOVS     r1,#1
        LDR      r2,|L1.1092|
        STRB     r1,[r2,#0]
        B        |L1.784|
        LDR      r1,|L1.1060|
        LDR      r1,[r1,#0]  ; ck
        CMP      r1,#0x14
        BEQ      |L1.636|
        LDR      r1,|L1.1064|
        LDR      r0,[r1,#0]  ; fade_color
        B        |L1.244|
|L1.636|
        MOVS     r1,#0xff
        LDR      r2,|L1.1068|
        STR      r1,[r2,#0]  ; breath_flag
        MOVS     r1,#0
        LDR      r2,|L1.1072|
        STR      r1,[r2,#0]  ; fade_
        MOVS     r1,#6
        LDR      r2,|L1.1096|
        STR      r1,[r2,#0]  ; fade__
        B        |L1.784|
        LDR      r1,|L1.1060|
        LDR      r1,[r1,#0]  ; ck
        CMP      r1,#1
        BEQ      |L1.670|
        LDR      r1,|L1.1064|
        LDR      r0,[r1,#0]  ; fade_color
        B        |L1.244|
|L1.670|
        MOVS     r1,#0xff
        LDR      r2,|L1.1068|
        STR      r1,[r2,#0]  ; breath_flag
        MOVS     r1,#0
        LDR      r2,|L1.1072|
        STR      r1,[r2,#0]  ; fade_
        MOVS     r1,#7
        LDR      r2,|L1.1096|
        STR      r1,[r2,#0]  ; fade__
        B        |L1.784|
        LDR      r1,|L1.1060|
        LDR      r1,[r1,#0]  ; ck
        ADDS     r1,r1,#1
        LDR      r2,|L1.1060|
        STR      r1,[r2,#0]  ; ck
        MOV      r1,r2
        LDR      r1,[r1,#0]  ; ck
        CMP      r1,#0x3c
        BLS      |L1.714|
        MOVS     r1,#1
        STR      r1,[r2,#0]  ; ck
        B        |L1.762|
|L1.714|
        LDR      r1,|L1.1060|
        LDR      r1,[r1,#0]  ; ck
        CMP      r1,#0x2e
        BLS      |L1.738|
        LDR      r1,|L1.1060|
        LDR      r1,[r1,#0]  ; ck
        MOVS     r2,#0x3d
        SUBS     r1,r2,r1
        LDR      r2,|L1.1084|
        STR      r1,[r2,#0]  ; G_C
        B        |L1.762|
        B        |L1.782|
|L1.738|
        LDR      r1,|L1.1060|
        LDR      r1,[r1,#0]  ; ck
        CMP      r1,#0xf
        BLS      |L1.754|
        MOVS     r1,#0xf
        LDR      r2,|L1.1084|
        STR      r1,[r2,#0]  ; G_C
        B        |L1.762|
|L1.754|
        LDR      r1,|L1.1060|
        LDR      r1,[r1,#0]  ; ck
        LDR      r2,|L1.1084|
        STR      r1,[r2,#0]  ; G_C
|L1.762|
        LDR      r1,|L1.1084|
        LDR      r1,[r1,#0]  ; G_C
        LDR      r2,|L1.1080|
        STR      r1,[r2,#0]  ; R_C
        LDR      r2,|L1.1088|
        STR      r1,[r2,#0]  ; B_C
        MOVS     r1,#1
        LDR      r2,|L1.1092|
        STRB     r1,[r2,#0]
        B        |L1.784|
|L1.782|
        NOP      
|L1.784|
        NOP      
|L1.786|
        POP      {pc}
        ENDP

ledColorSet PROC
        PUSH     {lr}
        MOVS     r3,r0
        BL       __ARM_common_switch8
        DCB      0x0a,0x06,0x0e,0x20
        DCB      0x17,0x45,0x4f,0x59
        DCB      0x2a,0x34,0x3c,0x61
        MOVS     r1,#0
        LDR      r2,|L1.1080|
        STR      r1,[r2,#0]  ; R_C
        LDR      r2,|L1.1084|
        STR      r1,[r2,#0]  ; G_C
        LDR      r2,|L1.1088|
        STR      r1,[r2,#0]  ; B_C
        B        |L1.992|
        MOVS     r1,#0x14
        LDR      r2,|L1.1080|
        STR      r1,[r2,#0]  ; R_C
        MOVS     r1,#0
        LDR      r2,|L1.1084|
        STR      r1,[r2,#0]  ; G_C
        LDR      r2,|L1.1088|
        STR      r1,[r2,#0]  ; B_C
        B        |L1.992|
        MOVS     r1,#0
        LDR      r2,|L1.1080|
        STR      r1,[r2,#0]  ; R_C
        LDR      r2,|L1.1084|
        STR      r1,[r2,#0]  ; G_C
        MOVS     r1,#0x14
        LDR      r2,|L1.1088|
        STR      r1,[r2,#0]  ; B_C
        B        |L1.992|
        MOVS     r1,#0
        LDR      r2,|L1.1080|
        STR      r1,[r2,#0]  ; R_C
        MOVS     r1,#0xa
        LDR      r2,|L1.1084|
        STR      r1,[r2,#0]  ; G_C
        MOVS     r1,#0
        LDR      r2,|L1.1088|
        STR      r1,[r2,#0]  ; B_C
        B        |L1.992|
        MOVS     r1,#0xa
        LDR      r2,|L1.1080|
        STR      r1,[r2,#0]  ; R_C
        MOVS     r1,#5
        LDR      r2,|L1.1084|
        STR      r1,[r2,#0]  ; G_C
        MOVS     r1,#0xa
        LDR      r2,|L1.1088|
        STR      r1,[r2,#0]  ; B_C
        B        |L1.992|
        MOVS     r1,#0x14
        LDR      r2,|L1.1080|
        STR      r1,[r2,#0]  ; R_C
        LDR      r2,|L1.1084|
        STR      r1,[r2,#0]  ; G_C
        LDR      r2,|L1.1088|
        STR      r1,[r2,#0]  ; B_C
        B        |L1.992|
        MOVS     r1,#0
        LDR      r2,|L1.1080|
        STR      r1,[r2,#0]  ; R_C
        LDR      r2,|L1.1084|
        STR      r1,[r2,#0]  ; G_C
        MOVS     r1,#0x14
        LDR      r2,|L1.1088|
        STR      r1,[r2,#0]  ; B_C
        B        |L1.992|
        MOVS     r1,#0x14
        LDR      r2,|L1.1080|
        STR      r1,[r2,#0]  ; R_C
        MOVS     r1,#0xa
        LDR      r2,|L1.1084|
        STR      r1,[r2,#0]  ; G_C
        MOVS     r1,#0
        LDR      r2,|L1.1088|
        STR      r1,[r2,#0]  ; B_C
        B        |L1.992|
        MOVS     r1,#0x14
        LDR      r2,|L1.1080|
        STR      r1,[r2,#0]  ; R_C
        MOVS     r1,#0
        LDR      r2,|L1.1084|
        STR      r1,[r2,#0]  ; G_C
        MOVS     r1,#0x14
        LDR      r2,|L1.1088|
        STR      r1,[r2,#0]  ; B_C
        B        |L1.992|
        MOVS     r1,#0x14
        LDR      r2,|L1.1080|
        STR      r1,[r2,#0]  ; R_C
        LDR      r2,|L1.1084|
        STR      r1,[r2,#0]  ; G_C
        LDR      r2,|L1.1088|
        STR      r1,[r2,#0]  ; B_C
        B        |L1.992|
|L1.990|
        POP      {pc}
|L1.992|
        NOP      
        NOP      
        B        |L1.990|
        ENDP

ledTask PROC
        PUSH     {r4,lr}
        NOP      
        LDR      r0,|L1.1048|
        ADDS     r0,r0,#0x38
        LDR      r0,[r0,#0]
        CMP      r0,#0
        BNE      |L1.1016|
        BL       DWHP83DealMsg
|L1.1016|
        LDR      r0,|L1.1100|
        LDRB     r0,[r0,#0]  ; iselsource
        CMP      r0,#0
        BNE      |L1.1124|
        LDR      r0,|L1.1104|
        LDRB     r0,[r0,#0]  ; flg_poweron2
        CMP      r0,#1
        BNE      |L1.1124|
        NOP      
        LDR      r0,|L1.1048|
        ADDS     r0,r0,#0xc
        LDR      r0,[r0,#0]
        CMP      r0,#0
        B        |L1.1108|
|L1.1044|
        DCD      0x40010000
|L1.1048|
        DCD      0x50004230
|L1.1052|
        DCD      0x50004000
|L1.1056|
        DCD      0x50000200
|L1.1060|
        DCD      ||ck||
|L1.1064|
        DCD      fade_color
|L1.1068|
        DCD      breath_flag
|L1.1072|
        DCD      fade_
|L1.1076|
        DCD      ||cc||
|L1.1080|
        DCD      ||R_C||
|L1.1084|
        DCD      G_C
|L1.1088|
        DCD      B_C
|L1.1092|
        DCD      flg_whitebreath
|L1.1096|
        DCD      fade__
|L1.1100|
        DCD      iselsource
|L1.1104|
        DCD      flg_poweron2
|L1.1108|
        BEQ      |L1.1118|
        MOVS     r0,#0
        BL       ledColorSet
        B        |L1.1124|
|L1.1118|
        MOVS     r0,#3
        BL       ledColorSet
|L1.1124|
        LDR      r3,|L1.1284|
        MOVS     r2,#0
        MOVS     r1,#0x1e
        LDR      r0,|L1.1288|
        LDRB     r0,[r0,#0]  ; led_task
        BL       startATask
        POP      {r4,pc}
        ENDP

ledTaskInit PROC
        PUSH     {r4,lr}
        BL       getATask
        LDR      r1,|L1.1288|
        STRB     r0,[r1,#0]
        MOV      r0,r1
        LDRB     r0,[r0,#0]  ; led_task
        CMP      r0,#0xff
        BEQ      |L1.1172|
        LDR      r3,|L1.1284|
        MOVS     r2,#0
        MOVS     r1,#0x1e
        LDR      r0,|L1.1288|
        LDRB     r0,[r0,#0]  ; led_task
        BL       startATask
|L1.1172|
        POP      {r4,pc}
        ENDP

NVIC_SetPriority PROC
        PUSH     {r4,lr}
        CMP      r0,#0
        BGE      |L1.1232|
        LDR      r2,|L1.1292|
        LSLS     r3,r0,#28
        LSRS     r3,r3,#28
        SUBS     r3,r3,#8
        LSRS     r3,r3,#2
        LSLS     r3,r3,#2
        LDR      r2,[r2,r3]
        LSLS     r3,r0,#30
        LSRS     r4,r3,#27
        MOVS     r3,#0xff
        LSLS     r3,r3,r4
        BICS     r2,r2,r3
        LSLS     r3,r1,#30
        LSRS     r3,r3,#24
        LSLS     r4,r0,#30
        LSRS     r4,r4,#27
        LSLS     r3,r3,r4
        ORRS     r2,r2,r3
        LDR      r3,|L1.1292|
        LSLS     r4,r0,#28
        LSRS     r4,r4,#28
        SUBS     r4,r4,#8
        LSRS     r4,r4,#2
        LSLS     r4,r4,#2
        STR      r2,[r3,r4]
        B        |L1.1282|
|L1.1232|
        LDR      r2,|L1.1296|
        MOVS     r3,#3
        LSLS     r3,r3,#8
        ADDS     r2,r2,r3
        LSRS     r3,r0,#2
        LSLS     r3,r3,#2
        LDR      r2,[r2,r3]
        LSLS     r3,r0,#30
        LSRS     r4,r3,#27
        MOVS     r3,#0xff
        LSLS     r3,r3,r4
        BICS     r2,r2,r3
        LSLS     r3,r1,#30
        LSRS     r3,r3,#24
        LSLS     r4,r0,#30
        LSRS     r4,r4,#27
        LSLS     r3,r3,r4
        ORRS     r2,r2,r3
        LDR      r3,|L1.1296|
        MOVS     r4,#3
        LSLS     r4,r4,#8
        ADDS     r3,r3,r4
        LSRS     r4,r0,#2
        LSLS     r4,r4,#2
        STR      r2,[r3,r4]
|L1.1282|
        POP      {r4,pc}
        ENDP

|L1.1284|
        DCD      ledTask
|L1.1288|
        DCD      led_task
|L1.1292|
        DCD      0xe000ed1c
|L1.1296|
        DCD      0xe000e100

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.data||, DATA, ALIGN=2

state_color
        DCB      0x09
state_color_back
        DCB      0x00
led_task
        DCB      0xff
led_flash
        DCB      0x00
led_battery_flash
        DCB      0x00
bt_hang_up_signal
        DCB      0x00
color_pwm_clc
        DCW      0x03e8
        DCW      0x03e8
        DCB      0x0c,0x04
        DCB      0x01,0x00
flg_whitebreath
        DCB      0x00,0x00
cclsllt
        DCD      0x00000000
RGB_brightness
        DCW      0x03e8,0x0384
        DCW      0x0320,0x02bc
        DCW      0x0258,0x01f4
        DCW      0x0190,0x012c
        DCW      0x00c8,0x0064
        DCW      0x0000
        DCB      0x00,0x00
BAT_STATE_DECT_DELAY_COUNT
        DCD      0x00000000
BT_MATCH_FLAG
        DCD      0x00000000
volume_key_delay
        DCD      0x00000000
BT_FIRST_START
        DCD      0x00000000
ccount
        DCD      0x00000000
bt_call_hold
        DCD      0x00000000
breath_flag
        DCD      0x000000ff
||ck||
        DCD      0x00000000
fade_
        DCD      0x00000000
fade__
        DCD      0x00000000
battery_low_flag
        DCD      0x00000000
pairing_key_flag
        DCD      0x00000000
||ccf||
        DCD      0x00001734
battery_low_flag2
        DCD      0x00000000
||cc||
        DCD      0x00000000
ioldcolor
        DCB      0x00
inowcolor
        DCB      0x00,0x00,0x00
fade_color
        DCD      0x00000000

        AREA ||i.__ARM_common_switch8||, COMGROUP=__ARM_common_switch8, CODE, READONLY, ALIGN=1

__ARM_common_switch8 PROC
        PUSH     {r4,r5}
        MOV      r4,lr
        SUBS     r4,r4,#1
        LDRB     r5,[r4,#0]
        ADDS     r4,r4,#1
        CMP      r3,r5
        BCC      |L16.24|
|L16.14|
        LDRB     r3,[r4,r5]
        LSLS     r3,r3,#1
        ADDS     r3,r4,r3
        POP      {r4,r5}
        BX       r3
|L16.24|
        MOV      r5,r3
        B        |L16.14|
        ENDP


        EXPORT leddisable [CODE]
        EXPORT ledInit [CODE]
        EXPORT fadeon [CODE]
        EXPORT fadeoff [CODE]
        EXPORT breathingColor [CODE]
        EXPORT ledColorSet [CODE]
        EXPORT ledTask [CODE]
        EXPORT ledTaskInit [CODE]
        EXPORT state_color [DATA,SIZE=1]
        EXPORT state_color_back [DATA,SIZE=1]
        EXPORT led_task [DATA,SIZE=1]
        EXPORT led_flash [DATA,SIZE=1]
        EXPORT led_battery_flash [DATA,SIZE=1]
        EXPORT bt_hang_up_signal [DATA,SIZE=1]
        EXPORT color_pwm_clc [DATA,SIZE=8]
        EXPORT flg_whitebreath [DATA,SIZE=1]
        EXPORT cclsllt [DATA,SIZE=4]
        EXPORT RGB_brightness [DATA,SIZE=22]
        EXPORT BAT_STATE_DECT_DELAY_COUNT [DATA,SIZE=4]
        EXPORT BT_MATCH_FLAG [DATA,SIZE=4]
        EXPORT volume_key_delay [DATA,SIZE=4]
        EXPORT BT_FIRST_START [DATA,SIZE=4]
        EXPORT ccount [DATA,SIZE=4]
        EXPORT bt_call_hold [DATA,SIZE=4]
        EXPORT breath_flag [DATA,SIZE=4]
        EXPORT battery_low_flag [DATA,SIZE=4]
        EXPORT pairing_key_flag [DATA,SIZE=4]
        EXPORT ||ccf|| [DATA,SIZE=4]
        EXPORT battery_low_flag2 [DATA,SIZE=4]
        EXPORT ioldcolor [DATA,SIZE=1]
        EXPORT inowcolor [DATA,SIZE=1]
        EXPORT __ARM_common_switch8 [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT DrvTIMER_Init [CODE]
        IMPORT DrvTIMER_EnableInt [CODE]
        IMPORT ||R_C|| [DATA]
        IMPORT G_C [DATA]
        IMPORT B_C [DATA]
        IMPORT DWHP83DealMsg [CODE]
        IMPORT startATask [CODE]
        IMPORT iselsource [DATA]
        IMPORT flg_poweron2 [DATA]
        IMPORT getATask [CODE]

        KEEP GPIO_SET_MODE
        KEEP NVIC_SetPriority
        KEEP ||ck||
        KEEP fade_
        KEEP fade__
        KEEP ||cc||
        KEEP fade_color

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
