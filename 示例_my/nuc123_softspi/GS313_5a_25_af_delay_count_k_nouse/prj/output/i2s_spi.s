; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--debug -c --asm --info=totals -o.\output\i2s_spi.o --depend=.\output\i2s_spi.d --cpu=Cortex-M0 --apcs=interwork -O0 -I..\CMSIS\CM0\DeviceSupport\Nuvoton\NUC123Series -I..\CMSIS\CM0\CoreSupport -I..\INC\DrvInc -I..\INC\SysInc -I..\dw -IC:\Keil_v472\ARM\RV31\INC -IC:\Keil_v472\ARM\CMSIS\Include -IC:\Keil_v472\ARM\Inc\Nuvoton\NUC123Series -D__MICROLIB --omf_browse=.\output\i2s_spi.crf ..\AppSrc\i2s_spi.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

GPIO_SET_MODE PROC
        PUSH     {r4,r5,lr}
        LDR      r3,[r0,#0]
        LSLS     r5,r1,#1
        MOVS     r4,#3
        LSLS     r4,r4,r5
        BICS     r3,r3,r4
        LSLS     r5,r1,#1
        MOV      r4,r2
        LSLS     r4,r4,r5
        ORRS     r3,r3,r4
        STR      r3,[r0,#0]
        POP      {r4,r5,pc}
        ENDP

SPI_SET_TX_BIT_LEN PROC
        LDR      r2,[r0,#0]
        MOVS     r3,#0xf8
        BICS     r2,r2,r3
        CMP      r1,#0x20
        BEQ      |L1.38|
        MOV      r3,r1
        B        |L1.40|
|L1.38|
        MOVS     r3,#0
|L1.40|
        LSLS     r3,r3,#3
        ORRS     r2,r2,r3
        STR      r2,[r0,#0]
        BX       lr
        ENDP

spiSendWord PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r1,r5
        LDR      r0,|L1.1060|
        BL       SPI_SET_TX_BIT_LEN
        MOV      r1,r4
        LDR      r0,|L1.1060|
        BL       SPI_WRITE_TX0
        LDR      r0,|L1.1060|
        BL       SPI_SET_GO
        NOP      
|L1.78|
        LDR      r0,|L1.1060|
        BL       SPI_IS_BUSY
        CMP      r0,#0
        BNE      |L1.78|
        POP      {r4-r6,pc}
        ENDP

I2SClkInit PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        NOP      
        MOVS     r0,#5
        LSLS     r0,r0,#28
        LDR      r0,[r0,#0x38]
        MOVS     r1,#0xf
        ORRS     r0,r0,r1
        MOVS     r1,#5
        LSLS     r1,r1,#28
        STR      r0,[r1,#0x38]
        LDR      r0,|L1.1064|
        LDR      r0,[r0,#0x10]
        MOVS     r1,#0xff
        ADDS     r1,r1,#0xe1
        ORRS     r0,r0,r1
        LDR      r1,|L1.1064|
        STR      r0,[r1,#0x10]
        NOP      
        NOP      
        MOVS     r0,#5
        LSLS     r0,r0,#28
        LDR      r0,[r0,#0x38]
        LSLS     r1,r1,#6
        BICS     r0,r0,r1
        MOVS     r1,#5
        LSLS     r1,r1,#28
        STR      r0,[r1,#0x38]
        LDR      r0,|L1.1064|
        LDR      r0,[r0,#0x10]
        MOVS     r1,#1
        LSLS     r1,r1,#20
        ORRS     r0,r0,r1
        LDR      r1,|L1.1064|
        STR      r0,[r1,#0x10]
        NOP      
        MOVS     r0,#1
        LDR      r1,|L1.1068|
        LDR      r1,[r1,#0x1c]
        LSRS     r1,r1,#2
        LSLS     r1,r1,#2
        ORRS     r1,r1,r0
        LDR      r2,|L1.1068|
        STR      r1,[r2,#0x1c]
        NOP      
        LSLS     r0,r0,#29
        MOV      r1,r2
        LDR      r1,[r1,#8]
        ORRS     r1,r1,r0
        STR      r1,[r2,#8]
        NOP      
        NOP      
        MOVS     r1,#5
        LSLS     r1,r1,#28
        LDR      r1,[r1,#0xc]
        ORRS     r1,r1,r0
        MOVS     r2,#5
        LSLS     r2,r2,#28
        STR      r1,[r2,#0xc]
        MOV      r1,r2
        LDR      r1,[r1,#0xc]
        BICS     r1,r1,r0
        STR      r1,[r2,#0xc]
        NOP      
        BL       I2S_CLR_RXFIFO
        BL       I2S_CLR_TXFIFO
        LDR      r0,|L1.1072|
        CMP      r5,r0
        BNE      |L1.240|
        MOVS     r0,#3
        BL       I2S_SET_MCK_DIV
        B        |L1.266|
|L1.240|
        LDR      r0,|L1.1076|
        CMP      r5,r0
        BNE      |L1.254|
        MOVS     r0,#6
        BL       I2S_SET_MCK_DIV
        B        |L1.266|
|L1.254|
        LDR      r0,|L1.1080|
        CMP      r5,r0
        BNE      |L1.266|
        MOVS     r0,#0xc
        BL       I2S_SET_MCK_DIV
|L1.266|
        LSLS     r1,r5,#7
        LDR      r0,|L1.1084|
        BL       __aeabi_uidivmod
        ADDS     r6,r0,#5
        MOVS     r1,#0xa
        MOV      r0,r6
        BL       __aeabi_uidivmod
        SUBS     r4,r0,#1
        MOV      r0,r4
        LDR      r1,|L1.1088|
        LDR      r1,[r1,#4]
        MOVS     r2,#0xff
        LSLS     r2,r2,#8
        BICS     r1,r1,r2
        LSLS     r2,r0,#8
        ORRS     r1,r1,r2
        LDR      r2,|L1.1088|
        STR      r1,[r2,#4]
        NOP      
        LDR      r4,|L1.1092|
        MOVS     r0,#0x20
        CMP      r0,#8
        BEQ      |L1.346|
        CMP      r0,#0x10
        BEQ      |L1.340|
        CMP      r0,#0x18
        BEQ      |L1.334|
        CMP      r0,#0x20
        BNE      |L1.350|
        MOVS     r0,#0x30
        ORRS     r4,r4,r0
        B        |L1.352|
|L1.334|
        MOVS     r0,#0x20
        ORRS     r4,r4,r0
        B        |L1.352|
|L1.340|
        MOVS     r0,#0x10
        ORRS     r4,r4,r0
        B        |L1.352|
|L1.346|
        NOP      
        B        |L1.352|
|L1.350|
        NOP      
|L1.352|
        NOP      
        NOP      
        LDR      r0,|L1.1088|
        STR      r4,[r0,#0]
        NOP      
        POP      {r4-r6,pc}
        ENDP

i2sStart PROC
        PUSH     {r4,lr}
        BL       I2S_CLR_TXFIFO
        NOP      
        LDR      r0,|L1.1088|
        LDR      r0,[r0,#0]
        MOVS     r1,#2
        ORRS     r0,r0,r1
        LDR      r1,|L1.1088|
        STR      r0,[r1,#0]
        NOP      
        BL       I2S_CLR_RXFIFO
        NOP      
        LDR      r0,|L1.1088|
        LDR      r0,[r0,#0]
        MOVS     r1,#4
        ORRS     r0,r0,r1
        LDR      r1,|L1.1088|
        STR      r0,[r1,#0]
        NOP      
        MOVS     r0,#4
        BL       DrvI2S_EnableInt
        MOVS     r1,#1
        MOVS     r0,#0x1b
        BL       NVIC_SetPriority
        POP      {r4,pc}
        ENDP

SPI2_IRQHandler PROC
        BX       lr
        ENDP

spiFlashRead PROC
        PUSH     {r3-r7,lr}
        MOV      r7,r0
        MOV      r5,r1
        MOV      r6,r2
        MOVS     r4,#0
        LDR      r0,|L1.1060|
        BL       SPI_CLR_SS0
        LDR      r0,|L1.1060|
        BL       SPI_DISABLE_REORDER
        LDR      r0,|L1.1060|
        BL       SPI_SET_SS0
        MOVS     r1,#8
        MOVS     r0,#3
        BL       spiSendWord
        MOVS     r1,#0x18
        MOV      r0,r7
        BL       spiSendWord
        LDR      r0,|L1.1060|
        BL       SPI_ENABLE_REORDER
        B        |L1.492|
|L1.476|
        MOVS     r1,#8
        MOVS     r0,#0xff
        BL       spiSendWord
        LDR      r0,|L1.1060|
        LDR      r0,[r0,#0x10]
        STRB     r0,[r6,r4]
        ADDS     r4,r4,#1
|L1.492|
        CMP      r4,r5
        BCC      |L1.476|
        LDR      r0,|L1.1060|
        BL       SPI_CLR_SS0
        POP      {r3-r7,pc}
        ENDP

spiFlashPageWrite PROC
        PUSH     {r3-r7,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r7,r2
        MOVS     r6,#0
        CMP      r4,#0
        BEQ      |L1.538|
        LSLS     r0,r5,#12
        LSRS     r0,r0,#12
        MOVS     r1,#7
        LSLS     r1,r1,#17
        CMP      r0,r1
        BCC      |L1.538|
        MOVS     r0,#0xff
        ADDS     r0,#1
        CMP      r4,r0
        BLS      |L1.542|
|L1.538|
        MOVS     r0,#0
|L1.540|
        POP      {r3-r7,pc}
|L1.542|
        LDR      r0,|L1.1060|
        BL       SPI_CLR_SS0
        LDR      r0,|L1.1060|
        BL       SPI_DISABLE_REORDER
        LDR      r0,|L1.1060|
        BL       SPI_SET_SS0
        MOVS     r1,#8
        MOVS     r0,#6
        BL       spiSendWord
        LDR      r0,|L1.1060|
        BL       SPI_CLR_SS0
        NOP      
        LDR      r0,|L1.1060|
        BL       SPI_SET_SS0
        MOVS     r1,#8
        MOVS     r0,#2
        BL       spiSendWord
        LSRS     r0,r5,#8
        LSLS     r0,r0,#8
        MOVS     r1,#0x18
        BL       spiSendWord
        MOVS     r6,#0
        B        |L1.614|
|L1.604|
        LDRB     r0,[r7,r6]
        MOVS     r1,#8
        BL       spiSendWord
        ADDS     r6,r6,#1
|L1.614|
        CMP      r6,r4
        BCC      |L1.604|
        LDR      r0,|L1.1060|
        BL       SPI_CLR_SS0
        LDR      r0,|L1.1060|
        BL       SPI_DISABLE_REORDER
        LDR      r0,|L1.1060|
        BL       SPI_SET_SS0
        MOVS     r1,#8
        MOVS     r0,#4
        BL       spiSendWord
        LDR      r0,|L1.1060|
        BL       SPI_CLR_SS0
        LDR      r0,|L1.1060|
        BL       SPI_CLR_SS0
        LDR      r0,|L1.1060|
        BL       SPI_DISABLE_REORDER
        LDR      r0,|L1.1060|
        BL       SPI_SET_SS0
        MOVS     r1,#8
        MOVS     r0,#5
        BL       spiSendWord
        MOVS     r1,#8
        MOVS     r0,#0xff
        BL       spiSendWord
        LDR      r0,|L1.1060|
        LDR      r0,[r0,#0x10]
        LDR      r1,|L1.1096|
        STRB     r0,[r1,#0]
        LDR      r0,|L1.1060|
        BL       SPI_CLR_SS0
        B        |L1.748|
|L1.700|
        LDR      r0,|L1.1060|
        BL       SPI_CLR_SS0
        LDR      r0,|L1.1060|
        BL       SPI_DISABLE_REORDER
        LDR      r0,|L1.1060|
        BL       SPI_SET_SS0
        MOVS     r1,#8
        MOVS     r0,#5
        BL       spiSendWord
        MOVS     r1,#8
        MOVS     r0,#0xff
        BL       spiSendWord
        LDR      r0,|L1.1060|
        LDR      r0,[r0,#0x10]
        LDR      r1,|L1.1096|
        STRB     r0,[r1,#0]
        LDR      r0,|L1.1060|
        BL       SPI_CLR_SS0
|L1.748|
        LDR      r0,|L1.1096|
        LDRB     r0,[r0,#0]  ; flash_status
        LSLS     r0,r0,#31
        LSRS     r0,r0,#31
        BNE      |L1.700|
        MOVS     r0,#1
        B        |L1.540|
        ENDP

spiFlashInit PROC
        PUSH     {r4,lr}
        MOVS     r2,#1
        MOVS     r1,#4
        LDR      r0,|L1.1100|
        BL       GPIO_SET_MODE
        MOVS     r2,#1
        MOVS     r1,#5
        LDR      r0,|L1.1100|
        BL       GPIO_SET_MODE
        MOVS     r2,#1
        MOVS     r1,#6
        LDR      r0,|L1.1100|
        BL       GPIO_SET_MODE
        MOVS     r2,#0
        MOVS     r1,#7
        LDR      r0,|L1.1100|
        BL       GPIO_SET_MODE
        LDR      r0,|L1.1104|
        BL       GPIO_SET_PIN
        LDR      r0,|L1.1104|
        ADDS     r0,r0,#4
        BL       GPIO_CLR_PIN
        POP      {r4,pc}
        ENDP

adpcmDataInit PROC
        MOVS     r0,#0
        LDR      r1,|L1.1108|
        STR      r0,[r1,#0]  ; adpcm_step_size_index_L_decode
        LDR      r1,|L1.1112|
        STR      r0,[r1,#0]  ; adpcm_step_size_index_R_decode
        LDR      r1,|L1.1116|
        STR      r0,[r1,#0]  ; pre_Rdata_decode
        LDR      r1,|L1.1120|
        STR      r0,[r1,#0]  ; pre_Ldata_decode
        LDR      r1,|L1.1124|
        STR      r0,[r1,#0]  ; adpcm_step_size_index_L_encode
        LDR      r1,|L1.1128|
        STR      r0,[r1,#0]  ; adpcm_step_size_index_R_encode
        LDR      r1,|L1.1132|
        STR      r0,[r1,#0]  ; pre_Rdata_encode
        LDR      r1,|L1.1136|
        STR      r0,[r1,#0]  ; pre_Ldata_encode
        LDR      r1,|L1.1140|
        STR      r0,[r1,#0]  ; recode_index
        LDR      r1,|L1.1144|
        STR      r0,[r1,#0]  ; flash_write_triggle
        LDR      r1,|L1.1148|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.1152|
        STR      r0,[r1,#0]  ; block_sample_index
        BX       lr
        ENDP

readWaveHeaderInfo PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r0,|L1.1060|
        BL       SPI_CLR_SS0
        LDR      r0,|L1.1060|
        BL       SPI_DISABLE_REORDER
        LDR      r0,|L1.1060|
        BL       SPI_SET_SS0
        MOVS     r1,#8
        MOVS     r0,#3
        BL       spiSendWord
        MOVS     r1,#0x18
        MOV      r0,r5
        BL       spiSendWord
        LDR      r0,|L1.1060|
        BL       SPI_ENABLE_REORDER
        MOVS     r4,#0
        B        |L1.938|
|L1.920|
        MOVS     r1,#8
        MOVS     r0,#0xff
        BL       spiSendWord
        LDR      r0,|L1.1060|
        LDR      r0,[r0,#0x10]
        LDR      r1,|L1.1156|
        STRB     r0,[r1,r4]
        ADDS     r4,r4,#1
|L1.938|
        CMP      r4,#0x2e
        BCC      |L1.920|
        LDR      r0,|L1.1156|
        LDRH     r0,[r0,#0]  ; file_head
        SUBS     r0,r0,#0xc
        LDR      r1,|L1.1160|
        STR      r0,[r1,#0]  ; samples_per_block
        LDR      r0,|L1.1156|
        LDRH     r0,[r0,#0]  ; file_head
        LDR      r1,|L1.1164|
        STR      r0,[r1,#0]  ; data_block_size
        MOVS     r4,#0
        B        |L1.980|
|L1.964|
        LSLS     r1,r4,#1
        LDR      r0,|L1.1156|
        ADDS     r0,r0,#6
        LDRH     r0,[r0,r1]
        LSLS     r1,r4,#1
        LDR      r2,|L1.1168|
        STRH     r0,[r2,r1]
        ADDS     r4,r4,#1
|L1.980|
        CMP      r4,#0x14
        BCC      |L1.964|
        POP      {r4-r6,pc}
        ENDP

playMusic PROC
        BX       lr
        ENDP

spiflashInfoWrite PROC
        PUSH     {r4,lr}
        LDR      r2,|L1.1172|
        MOVS     r1,#0x58
        MOVS     r0,#0
        BL       spiFlashPageWrite
        POP      {r4,pc}
        ENDP

init_spiflash_info PROC
        PUSH     {r4,lr}
        LDR      r0,|L1.1176|
        LDR      r1,|L1.1172|
        STR      r0,[r1,#0]  ; sflash_info_cache
        MOVS     r0,#1
        STR      r0,[r1,#4]  ; sflash_info_cache
        LSLS     r1,r0,#8
        LDR      r0,|L1.1172|
        STR      r1,[r0,#8]
        LDR      r0,|L1.1180|
        LDR      r1,[r0,#0]  ; flash_program_address
        LDR      r0,|L1.1172|
        STR      r1,[r0,#0xc]
        BL       spiflashInfoWrite
        POP      {r4,pc}
        ENDP

recodeMusic PROC
        BX       lr
        ENDP

recodeEnd PROC
        PUSH     {r4,lr}
        BL       init_spiflash_info
        LDR      r0,|L1.1060|
        BL       SPI_CLR_SS0
        MOVS     r0,#0
        LDR      r1,|L1.1184|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.1188|
        STR      r0,[r1,#0]  ; filter_bypass
        POP      {r4,pc}
|L1.1060|
        DCD      0x40130000
|L1.1064|
        DCD      0x50000040
|L1.1068|
        DCD      0x50000200
|L1.1072|
        DCD      0x0000bb80
|L1.1076|
        DCD      0x00005dc0
|L1.1080|
        DCD      0x00002ee0
|L1.1084|
        DCD      0x2bf0bfb0
|L1.1088|
        DCD      0x401a0000
|L1.1092|
        DCD      0x00009201
|L1.1096|
        DCD      flash_status
|L1.1100|
        DCD      0x50004040
|L1.1104|
        DCD      0x50004250
|L1.1108|
        DCD      adpcm_step_size_index_L_decode
|L1.1112|
        DCD      adpcm_step_size_index_R_decode
|L1.1116|
        DCD      pre_Rdata_decode
|L1.1120|
        DCD      pre_Ldata_decode
|L1.1124|
        DCD      adpcm_step_size_index_L_encode
|L1.1128|
        DCD      adpcm_step_size_index_R_encode
|L1.1132|
        DCD      pre_Rdata_encode
|L1.1136|
        DCD      pre_Ldata_encode
|L1.1140|
        DCD      recode_index
|L1.1144|
        DCD      flash_write_triggle
|L1.1148|
        DCD      chuck_index
|L1.1152|
        DCD      block_sample_index
|L1.1156|
        DCD      file_head
|L1.1160|
        DCD      samples_per_block
|L1.1164|
        DCD      data_block_size
|L1.1168|
        DCD      cofe_set
|L1.1172|
        DCD      sflash_info_cache
|L1.1176|
        DCD      0x4e534c47
|L1.1180|
        DCD      flash_program_address
|L1.1184|
        DCD      flash_mode
|L1.1188|
        DCD      filter_bypass
        ENDP

playSFMusicEnd PROC
        BX       lr
        ENDP

adpcmEncode PROC
        MOV      r2,r0
        MOVS     r0,#0
        BX       lr
        ENDP

adpcmDecode PROC
        PUSH     {r4,lr}
        LDR      r0,|L1.2192|
        LDR      r0,[r0,#0]  ; block_sample_index
        CMP      r0,#0
        BNE      |L1.1462|
        MOVS     r1,#0x10
        LDR      r0,|L1.2196|
        BL       SPI_SET_TX_BIT_LEN
        MOVS     r1,#0xff
        LDR      r0,|L1.2196|
        BL       SPI_WRITE_TX0
        LDR      r0,|L1.2196|
        BL       SPI_SET_GO
        LDR      r0,|L1.2192|
        LDR      r0,[r0,#0]  ; block_sample_index
        ADDS     r0,r0,#1
        LDR      r1,|L1.2192|
        STR      r0,[r1,#0]  ; block_sample_index
        NOP      
|L1.1244|
        LDR      r0,|L1.2196|
        BL       SPI_IS_BUSY
        CMP      r0,#0
        BNE      |L1.1244|
        LDR      r0,|L1.2196|
        LDR      r0,[r0,#0x10]
        LDR      r1,|L1.2200|
        STR      r0,[r1,#0]  ; adpcm_step_size_index_L_decode
        MOVS     r1,#0x20
        LDR      r0,|L1.2196|
        BL       SPI_SET_TX_BIT_LEN
        MOVS     r1,#0xff
        LDR      r0,|L1.2196|
        BL       SPI_WRITE_TX0
        LDR      r0,|L1.2196|
        BL       SPI_SET_GO
        LDR      r0,|L1.2200|
        LDR      r0,[r0,#0]  ; adpcm_step_size_index_L_decode
        LSRS     r0,r0,#8
        LSLS     r0,r0,#1
        LDR      r1,|L1.2204|
        STR      r0,[r1,#0]  ; adpcm_step_size_index_R_decode
        LDR      r0,|L1.2200|
        LDRB     r0,[r0,#0]  ; adpcm_step_size_index_L_decode
        LSLS     r0,r0,#1
        LDR      r1,|L1.2200|
        STR      r0,[r1,#0]  ; adpcm_step_size_index_L_decode
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; adpcm_step_size_index_L_decode
        LSLS     r0,r0,#1
        LDR      r1,|L1.2208|
        LDRH     r0,[r1,r0]
        LDR      r1,|L1.2212|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.2200|
        LDR      r0,[r0,#0]  ; adpcm_step_size_index_L_decode
        ADDS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,|L1.2208|
        LDRH     r0,[r1,r0]
        LDR      r1,|L1.2216|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.2204|
        LDR      r0,[r0,#0]  ; adpcm_step_size_index_R_decode
        LSLS     r0,r0,#1
        LDR      r1,|L1.2208|
        LDRH     r0,[r1,r0]
        LDR      r1,|L1.2220|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.2204|
        LDR      r0,[r0,#0]  ; adpcm_step_size_index_R_decode
        ADDS     r0,r0,#1
        LSLS     r0,r0,#1
        LDR      r1,|L1.2208|
        LDRH     r0,[r1,r0]
        LDR      r1,|L1.2224|
        STRH     r0,[r1,#0]
        NOP      
|L1.1368|
        LDR      r0,|L1.2196|
        BL       SPI_IS_BUSY
        CMP      r0,#0
        BNE      |L1.1368|
        LDR      r0,|L1.2196|
        LDR      r0,[r0,#0x10]
        LDR      r1,|L1.2228|
        STR      r0,[r1,#0]  ; L_delta
        MOVS     r1,#0x20
        LDR      r0,|L1.2196|
        BL       SPI_SET_TX_BIT_LEN
        MOVS     r1,#0xff
        LDR      r0,|L1.2196|
        BL       SPI_WRITE_TX0
        LDR      r0,|L1.2196|
        BL       SPI_SET_GO
        LDR      r0,|L1.2228|
        LDR      r0,[r0,#0]  ; L_delta
        LSRS     r0,r0,#16
        LDR      r1,|L1.2232|
        STR      r0,[r1,#0]  ; R_delta
        LDR      r0,|L1.2228|
        LDRH     r0,[r0,#0]  ; L_delta
        UXTH     r0,r0
        LDR      r1,|L1.2228|
        STR      r0,[r1,#0]  ; L_delta
        NOP      
|L1.1430|
        LDR      r0,|L1.2196|
        BL       SPI_IS_BUSY
        CMP      r0,#0
        BNE      |L1.1430|
        LDR      r0,|L1.2196|
        LDR      r0,[r0,#0x10]
        LDR      r1,|L1.2236|
        STR      r0,[r1,#0]  ; adpcm_step_size_index_L_encode
        MOVS     r1,#0x20
        LDR      r0,|L1.2196|
        BL       SPI_SET_TX_BIT_LEN
        MOVS     r1,#0xff
        LDR      r0,|L1.2196|
        B        |L1.1464|
|L1.1462|
        B        |L1.1552|
|L1.1464|
        BL       SPI_WRITE_TX0
        LDR      r0,|L1.2196|
        BL       SPI_SET_GO
        LDR      r0,|L1.2236|
        LDR      r0,[r0,#0]  ; adpcm_step_size_index_L_encode
        ASRS     r0,r0,#16
        LDR      r1,|L1.2240|
        STR      r0,[r1,#0]  ; adpcm_step_size_index_R_encode
        LDR      r0,|L1.2236|
        LDRH     r0,[r0,#0]  ; adpcm_step_size_index_L_encode
        SXTH     r0,r0
        LDR      r1,|L1.2236|
        STR      r0,[r1,#0]  ; adpcm_step_size_index_L_encode
        NOP      
|L1.1496|
        LDR      r0,|L1.2196|
        BL       SPI_IS_BUSY
        CMP      r0,#0
        BNE      |L1.1496|
        LDR      r0,|L1.2196|
        LDR      r0,[r0,#0x10]
        LDR      r1,|L1.2244|
        STR      r0,[r1,#0]  ; L_sample1
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; L_sample1
        ASRS     r0,r0,#16
        LDR      r1,|L1.2248|
        STR      r0,[r1,#0]  ; R_sample1
        LDR      r0,|L1.2244|
        LDRH     r0,[r0,#0]  ; L_sample1
        SXTH     r0,r0
        LDR      r1,|L1.2244|
        STR      r0,[r1,#0]  ; L_sample1
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; L_sample1
        LDR      r1,|L1.2252|
        STR      r0,[r1,#0]  ; pre_Ldata_decode
        LDR      r0,|L1.2248|
        LDR      r0,[r0,#0]  ; R_sample1
        LDR      r1,|L1.2256|
        STR      r0,[r1,#0]  ; pre_Rdata_decode
        B        |L1.1952|
|L1.1552|
        LDR      r0,|L1.2192|
        LDR      r0,[r0,#0]  ; block_sample_index
        CMP      r0,#1
        BNE      |L1.1588|
        LDR      r0,|L1.2192|
        LDR      r0,[r0,#0]  ; block_sample_index
        ADDS     r0,r0,#1
        LDR      r1,|L1.2192|
        STR      r0,[r1,#0]  ; block_sample_index
        LDR      r0,|L1.2236|
        LDR      r0,[r0,#0]  ; adpcm_step_size_index_L_encode
        LDR      r1,|L1.2252|
        STR      r0,[r1,#0]  ; pre_Ldata_decode
        LDR      r0,|L1.2240|
        LDR      r0,[r0,#0]  ; adpcm_step_size_index_R_encode
        LDR      r1,|L1.2256|
        STR      r0,[r1,#0]  ; pre_Rdata_decode
        B        |L1.1952|
|L1.1588|
        LDR      r0,|L1.2192|
        LDR      r0,[r0,#0]  ; block_sample_index
        ADDS     r0,r0,#1
        LDR      r1,|L1.2192|
        STR      r0,[r1,#0]  ; block_sample_index
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; block_sample_index
        LDR      r1,|L1.2260|
        LDR      r1,[r1,#0]  ; samples_per_block
        CMP      r0,r1
        BNE      |L1.1636|
        MOVS     r0,#0
        LDR      r1,|L1.2192|
        STR      r0,[r1,#0]  ; block_sample_index
        LDR      r0,|L1.2264|
        LDR      r0,[r0,#0]  ; data_block_size
        SUBS     r0,r0,#1
        LDR      r1,|L1.2264|
        STR      r0,[r1,#0]  ; data_block_size
        LDR      r0,|L1.2268|
        LDRH     r0,[r0,#2]  ; file_head
        SUBS     r0,r0,#1
        LDR      r1,|L1.2268|
        STRH     r0,[r1,#2]
|L1.1636|
        MOVS     r1,#8
        MOVS     r0,#0xff
        BL       spiSendWord
        LDR      r0,|L1.2196|
        LDR      r0,[r0,#0x10]
        SXTB     r4,r0
        LDR      r0,|L1.2236|
        LDR      r0,[r0,#0]  ; adpcm_step_size_index_L_encode
        LDR      r1,|L1.2212|
        MOVS     r2,#0
        LDRSH    r2,[r1,r2]  ; L_cofe0
        MULS     r0,r2,r0
        LDR      r1,|L1.2244|
        LDR      r1,[r1,#0]  ; L_sample1
        LDR      r2,|L1.2216|
        MOVS     r3,#0
        LDRSH    r3,[r2,r3]  ; L_cofe1
        MULS     r1,r3,r1
        ADDS     r0,r0,r1
        ASRS     r0,r0,#8
        LDR      r1,|L1.2252|
        STR      r0,[r1,#0]  ; pre_Ldata_decode
        ASRS     r0,r4,#4
        LDR      r1,|L1.2228|
        LDR      r1,[r1,#0]  ; L_delta
        MULS     r0,r1,r0
        LDR      r1,|L1.2252|
        LDR      r1,[r1,#0]  ; pre_Ldata_decode
        ADDS     r0,r0,r1
        LDR      r1,|L1.2252|
        STR      r0,[r1,#0]  ; pre_Ldata_decode
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; pre_Ldata_decode
        LDR      r1,|L1.2272|
        CMP      r0,r1
        BLE      |L1.1716|
        MOV      r0,r1
        LDR      r1,|L1.2252|
        STR      r0,[r1,#0]  ; pre_Ldata_decode
|L1.1716|
        LDR      r0,|L1.2252|
        LDR      r0,[r0,#0]  ; pre_Ldata_decode
        LDR      r1,|L1.2272|
        MVNS     r1,r1
        CMP      r0,r1
        BGE      |L1.1734|
        MOV      r0,r1
        LDR      r1,|L1.2252|
        STR      r0,[r1,#0]  ; pre_Ldata_decode
|L1.1734|
        LDR      r0,|L1.2236|
        LDR      r0,[r0,#0]  ; adpcm_step_size_index_L_encode
        LDR      r1,|L1.2244|
        STR      r0,[r1,#0]  ; L_sample1
        LDR      r0,|L1.2252|
        LDRH     r0,[r0,#0]  ; pre_Ldata_decode
        SXTH     r0,r0
        LDR      r1,|L1.2236|
        STR      r0,[r1,#0]  ; adpcm_step_size_index_L_encode
        LSLS     r0,r4,#24
        LSRS     r0,r0,#28
        LSLS     r0,r0,#2
        LDR      r1,|L1.2276|
        LDR      r0,[r1,r0]
        LDR      r1,|L1.2228|
        LDR      r1,[r1,#0]  ; L_delta
        MULS     r0,r1,r0
        LSRS     r0,r0,#8
        LDR      r1,|L1.2228|
        STR      r0,[r1,#0]  ; L_delta
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; L_delta
        CMP      r0,#0x10
        BCS      |L1.1786|
        MOVS     r0,#0x10
        STR      r0,[r1,#0]  ; L_delta
|L1.1786|
        LDR      r0,|L1.2228|
        LDR      r0,[r0,#0]  ; L_delta
        LDR      r1,|L1.2280|
        CMP      r0,r1
        BLS      |L1.1802|
        MOV      r0,r1
        LDR      r1,|L1.2228|
        STR      r0,[r1,#0]  ; L_delta
|L1.1802|
        LDR      r0,|L1.2240|
        LDR      r0,[r0,#0]  ; adpcm_step_size_index_R_encode
        LDR      r1,|L1.2220|
        MOVS     r2,#0
        LDRSH    r2,[r1,r2]  ; R_cofe0
        MULS     r0,r2,r0
        LDR      r1,|L1.2248|
        LDR      r1,[r1,#0]  ; R_sample1
        LDR      r2,|L1.2224|
        MOVS     r3,#0
        LDRSH    r3,[r2,r3]  ; R_cofe1
        MULS     r1,r3,r1
        ADDS     r0,r0,r1
        ASRS     r0,r0,#8
        LDR      r1,|L1.2256|
        STR      r0,[r1,#0]  ; pre_Rdata_decode
        LSLS     r0,r4,#4
        SXTB     r0,r0
        ASRS     r4,r0,#4
        LDR      r0,|L1.2232|
        LDR      r0,[r0,#0]  ; R_delta
        MULS     r0,r4,r0
        LDR      r1,[r1,#0]  ; pre_Rdata_decode
        ADDS     r0,r0,r1
        LDR      r1,|L1.2256|
        STR      r0,[r1,#0]  ; pre_Rdata_decode
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; pre_Rdata_decode
        LDR      r1,|L1.2272|
        CMP      r0,r1
        BLE      |L1.1870|
        MOV      r0,r1
        LDR      r1,|L1.2256|
        STR      r0,[r1,#0]  ; pre_Rdata_decode
|L1.1870|
        LDR      r0,|L1.2256|
        LDR      r0,[r0,#0]  ; pre_Rdata_decode
        LDR      r1,|L1.2272|
        MVNS     r1,r1
        CMP      r0,r1
        BGE      |L1.1888|
        MOV      r0,r1
        LDR      r1,|L1.2256|
        STR      r0,[r1,#0]  ; pre_Rdata_decode
|L1.1888|
        LDR      r0,|L1.2240|
        LDR      r0,[r0,#0]  ; adpcm_step_size_index_R_encode
        LDR      r1,|L1.2248|
        STR      r0,[r1,#0]  ; R_sample1
        LDR      r0,|L1.2256|
        LDR      r0,[r0,#0]  ; pre_Rdata_decode
        LDR      r1,|L1.2240|
        STR      r0,[r1,#0]  ; adpcm_step_size_index_R_encode
        LSLS     r0,r4,#28
        LSRS     r0,r0,#26
        LDR      r1,|L1.2276|
        LDR      r0,[r1,r0]
        LDR      r1,|L1.2232|
        LDR      r1,[r1,#0]  ; R_delta
        MULS     r0,r1,r0
        LSRS     r0,r0,#8
        LDR      r1,|L1.2232|
        STR      r0,[r1,#0]  ; R_delta
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; R_delta
        CMP      r0,#0x10
        BCS      |L1.1936|
        MOVS     r0,#0x10
        STR      r0,[r1,#0]  ; R_delta
|L1.1936|
        LDR      r0,|L1.2232|
        LDR      r0,[r0,#0]  ; R_delta
        LDR      r1,|L1.2280|
        CMP      r0,r1
        BLS      |L1.1952|
        MOV      r0,r1
        LDR      r1,|L1.2232|
        STR      r0,[r1,#0]  ; R_delta
|L1.1952|
        POP      {r4,pc}
        ENDP

dealFlashEvent PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        LDR      r0,|L1.2284|
        LDRB     r0,[r0,#0]  ; flash_mode
        CMP      r0,#1
        BNE      |L1.2100|
        LDR      r0,|L1.2268|
        LDRH     r0,[r0,#2]  ; file_head
        CMP      r0,#0
        BLE      |L1.2064|
        LDR      r0,|L1.2288|
        LDR      r0,[r0,#0]  ; pre_freq
        CMP      r0,#0
        BEQ      |L1.2020|
        MOVS     r0,#0
        LDR      r1,|L1.2288|
        STR      r0,[r1,#0]  ; pre_freq
        LDR      r0,|L1.2252|
        LDR      r0,[r0,#0]  ; pre_Ldata_decode
        LDR      r1,|L1.2292|
        LDR      r1,[r1,#0]  ; L_predata
        ADDS     r0,r0,r1
        LSLS     r0,r0,#15
        STR      r0,[r5,#0]
        LDR      r0,|L1.2256|
        LDR      r0,[r0,#0]  ; pre_Rdata_decode
        LDR      r1,|L1.2296|
        LDR      r1,[r1,#0]  ; R_predata
        ADDS     r0,r0,r1
        LSLS     r0,r0,#15
        STR      r0,[r4,#0]
        B        |L1.2100|
|L1.2020|
        MOVS     r0,#1
        LDR      r1,|L1.2288|
        STR      r0,[r1,#0]  ; pre_freq
        LDR      r0,|L1.2256|
        LDR      r0,[r0,#0]  ; pre_Rdata_decode
        LDR      r1,|L1.2296|
        STR      r0,[r1,#0]  ; R_predata
        LDR      r0,|L1.2252|
        LDR      r0,[r0,#0]  ; pre_Ldata_decode
        LDR      r1,|L1.2292|
        STR      r0,[r1,#0]  ; L_predata
        BL       adpcmDecode
        LDR      r0,|L1.2252|
        LDRH     r0,[r0,#0]  ; pre_Ldata_decode
        LSLS     r0,r0,#16
        STR      r0,[r5,#0]
        LDR      r0,|L1.2256|
        LDRH     r0,[r0,#0]  ; pre_Rdata_decode
        LSLS     r0,r0,#16
        STR      r0,[r4,#0]
        B        |L1.2100|
|L1.2064|
        LDR      r0,|L1.2196|
        BL       SPI_CLR_SS0
        MOVS     r0,#0
        STR      r0,[r5,#0]
        STR      r0,[r4,#0]
        BL       I2S_CLR_RXFIFO
        BL       I2S_CLR_TXFIFO
        MOVS     r0,#0
        LDR      r1,|L1.2284|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.2300|
        STRB     r0,[r1,#0]
        LDR      r0,|L1.2304|
        LDR      r1,|L1.2308|
        STR      r0,[r1,#0]  ; adcKeySubHook
|L1.2100|
        POP      {r4-r6,pc}
        ENDP

spireadbyte PROC
        PUSH     {r4-r6,lr}
        MOVS     r5,#0
        B        |L1.2184|
|L1.2108|
        LSLS     r0,r4,#25
        LSRS     r4,r0,#24
        LDR      r0,|L1.2312|
        BL       GPIO_SET_PIN
        NOP      
        LDR      r0,|L1.2312|
        ADDS     r0,r0,#4
        LDR      r0,[r0,#0]
        CMP      r0,#0
        BEQ      |L1.2134|
        MOVS     r0,#1
        ORRS     r4,r4,r0
|L1.2134|
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        LDR      r0,|L1.2312|
        BL       GPIO_CLR_PIN
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        ADDS     r0,r5,#1
        UXTB     r5,r0
|L1.2184|
        CMP      r5,#8
        BLT      |L1.2108|
        MOV      r0,r4
        POP      {r4-r6,pc}
|L1.2192|
        DCD      block_sample_index
|L1.2196|
        DCD      0x40130000
|L1.2200|
        DCD      adpcm_step_size_index_L_decode
|L1.2204|
        DCD      adpcm_step_size_index_R_decode
|L1.2208|
        DCD      cofe_set
|L1.2212|
        DCD      L_cofe0
|L1.2216|
        DCD      L_cofe1
|L1.2220|
        DCD      R_cofe0
|L1.2224|
        DCD      R_cofe1
|L1.2228|
        DCD      L_delta
|L1.2232|
        DCD      R_delta
|L1.2236|
        DCD      adpcm_step_size_index_L_encode
|L1.2240|
        DCD      adpcm_step_size_index_R_encode
|L1.2244|
        DCD      L_sample1
|L1.2248|
        DCD      R_sample1
|L1.2252|
        DCD      pre_Ldata_decode
|L1.2256|
        DCD      pre_Rdata_decode
|L1.2260|
        DCD      samples_per_block
|L1.2264|
        DCD      data_block_size
|L1.2268|
        DCD      file_head
|L1.2272|
        DCD      0x00007fff
|L1.2276|
        DCD      AdaptationTable
|L1.2280|
        DCD      0x00003fff
|L1.2284|
        DCD      flash_mode
|L1.2288|
        DCD      pre_freq
|L1.2292|
        DCD      L_predata
|L1.2296|
        DCD      R_predata
|L1.2300|
        DCD      flg_softmute
|L1.2304|
        DCD      playSFMusicEnd
|L1.2308|
        DCD      adcKeySubHook
|L1.2312|
        DCD      0x50004254
        ENDP

spiwritebyte PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOVS     r5,#0
        B        |L1.2408|
|L1.2324|
        MOVS     r0,#0x80
        TST      r4,r0
        BEQ      |L1.2338|
        LDR      r0,|L1.3348|
        BL       GPIO_SET_PIN
        B        |L1.2344|
|L1.2338|
        LDR      r0,|L1.3348|
        BL       GPIO_CLR_PIN
|L1.2344|
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        LDR      r0,|L1.3348|
        SUBS     r0,r0,#4
        BL       GPIO_SET_PIN
        LSLS     r0,r4,#25
        LSRS     r4,r0,#24
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        LDR      r0,|L1.3348|
        SUBS     r0,r0,#4
        BL       GPIO_CLR_PIN
        ADDS     r0,r5,#1
        UXTB     r5,r0
|L1.2408|
        CMP      r5,#8
        BLT      |L1.2324|
        POP      {r4-r6,pc}
        ENDP

readfromspi PROC
        PUSH     {r0-r7,lr}
        SUB      sp,sp,#4
        MOV      r5,r0
        MOV      r6,r1
        MOV      r7,r2
        MOVS     r4,#0
        LDR      r0,|L1.3348|
        SUBS     r0,r0,#4
        BL       GPIO_CLR_PIN
        LDR      r0,|L1.3348|
        SUBS     r0,r0,#8
        BL       GPIO_CLR_PIN
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        MOVS     r4,#0
        B        |L1.2676|
|L1.2668|
        LDRB     r0,[r6,r4]
        BL       spiwritebyte
        ADDS     r4,r4,#1
|L1.2676|
        CMP      r4,r5
        BLT      |L1.2668|
        MOVS     r4,#0
        B        |L1.2694|
|L1.2684|
        BL       spireadbyte
        LDR      r1,[sp,#0x10]
        STRB     r0,[r1,r4]
        ADDS     r4,r4,#1
|L1.2694|
        CMP      r4,r7
        BCC      |L1.2684|
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        LDR      r0,|L1.3348|
        SUBS     r0,r0,#4
        BL       GPIO_CLR_PIN
        LDR      r0,|L1.3348|
        SUBS     r0,r0,#8
        BL       GPIO_SET_PIN
        MOVS     r0,#0
        ADD      sp,sp,#0x14
        POP      {r4-r7,pc}
        ENDP

writetospi PROC
        PUSH     {r0-r7,lr}
        SUB      sp,sp,#4
        MOV      r5,r0
        MOV      r6,r1
        MOV      r7,r2
        LDR      r0,|L1.3348|
        SUBS     r0,r0,#4
        BL       GPIO_CLR_PIN
        LDR      r0,|L1.3348|
        SUBS     r0,r0,#8
        BL       GPIO_CLR_PIN
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        MOVS     r4,#0
        B        |L1.3202|
|L1.3192|
        LDRB     r0,[r6,r4]
        BL       spiwritebyte
        ADDS     r0,r4,#1
        UXTB     r4,r0
|L1.3202|
        CMP      r4,r5
        BLT      |L1.3192|
        MOVS     r4,#0
        B        |L1.3222|
|L1.3210|
        LDR      r1,[sp,#0x10]
        LDRB     r0,[r1,r4]
        BL       spiwritebyte
        ADDS     r0,r4,#1
        UXTB     r4,r0
|L1.3222|
        CMP      r4,r7
        BCC      |L1.3210|
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        B        |L1.3352|
|L1.3348|
        DCD      0x50004258
|L1.3352|
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        LDR      r0,|L1.3828|
        BL       GPIO_CLR_PIN
        LDR      r0,|L1.3828|
        SUBS     r0,r0,#4
        BL       GPIO_SET_PIN
        MOVS     r0,#0
        ADD      sp,sp,#0x14
        POP      {r4-r7,pc}
        ENDP

reset_DW1000 PROC
        PUSH     {r4,lr}
        MOVS     r2,#3
        MOVS     r1,#9
        LDR      r0,|L1.3832|
        BL       GPIO_SET_MODE
        LDR      r0,|L1.3828|
        ADDS     r0,r0,#0x10
        BL       GPIO_CLR_PIN
        MOVS     r0,#0xc8
        BL       sysDelayMs
        LDR      r0,|L1.3828|
        ADDS     r0,r0,#0x10
        BL       GPIO_SET_PIN
        MOVS     r0,#0x32
        BL       sysDelayMs
        MOVS     r2,#0
        MOVS     r1,#9
        LDR      r0,|L1.3832|
        BL       GPIO_SET_MODE
        MOVS     r0,#2
        BL       sysDelayMs
        POP      {r4,pc}
        ENDP

spi_set_rate_low PROC
        BX       lr
        ENDP

spi_set_rate_high PROC
        BX       lr
        ENDP

deca_sleep PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        MOV      r0,r4
        BL       sysDelayMs
        POP      {r4,pc}
        ENDP

decamutexon PROC
        LDR      r1,|L1.3836|
        LDR      r1,[r1,#0]
        MOVS     r2,#0x20
        ANDS     r1,r1,r2
        MOV      r0,r1
        CMP      r0,#0
        BEQ      |L1.3570|
        LDR      r1,|L1.3836|
        LDR      r1,[r1,#0]
        BICS     r1,r1,r2
        LDR      r2,|L1.3836|
        STR      r1,[r2,#0]
|L1.3570|
        BX       lr
        ENDP

decamutexoff PROC
        CMP      r0,#0
        BEQ      |L1.3588|
        LDR      r1,|L1.3836|
        LDR      r1,[r1,#0]
        MOVS     r2,#0x20
        ORRS     r1,r1,r2
        LDR      r2,|L1.3836|
        STR      r1,[r2,#0]
|L1.3588|
        BX       lr
        ENDP

NVIC_SetPriority PROC
        PUSH     {r4,lr}
        CMP      r0,#0
        BGE      |L1.3648|
        LDR      r2,|L1.3840|
        LSLS     r3,r0,#28
        LSRS     r3,r3,#28
        SUBS     r3,r3,#8
        LSRS     r3,r3,#2
        LSLS     r3,r3,#2
        LDR      r2,[r2,r3]
        LSLS     r3,r0,#30
        LSRS     r4,r3,#27
        MOVS     r3,#0xff
        LSLS     r3,r3,r4
        BICS     r2,r2,r3
        LSLS     r3,r1,#30
        LSRS     r3,r3,#24
        LSLS     r4,r0,#30
        LSRS     r4,r4,#27
        LSLS     r3,r3,r4
        ORRS     r2,r2,r3
        LDR      r3,|L1.3840|
        LSLS     r4,r0,#28
        LSRS     r4,r4,#28
        SUBS     r4,r4,#8
        LSRS     r4,r4,#2
        LSLS     r4,r4,#2
        STR      r2,[r3,r4]
        B        |L1.3698|
|L1.3648|
        LDR      r2,|L1.3836|
        MOVS     r3,#3
        LSLS     r3,r3,#8
        ADDS     r2,r2,r3
        LSRS     r3,r0,#2
        LSLS     r3,r3,#2
        LDR      r2,[r2,r3]
        LSLS     r3,r0,#30
        LSRS     r4,r3,#27
        MOVS     r3,#0xff
        LSLS     r3,r3,r4
        BICS     r2,r2,r3
        LSLS     r3,r1,#30
        LSRS     r3,r3,#24
        LSLS     r4,r0,#30
        LSRS     r4,r4,#27
        LSLS     r3,r3,r4
        ORRS     r2,r2,r3
        LDR      r3,|L1.3836|
        MOVS     r4,#3
        LSLS     r4,r4,#8
        ADDS     r3,r3,r4
        LSRS     r4,r0,#2
        LSLS     r4,r4,#2
        STR      r2,[r3,r4]
|L1.3698|
        POP      {r4,pc}
        ENDP

GPIO_SET_PIN PROC
        MOVS     r1,#1
        STR      r1,[r0,#0]
        BX       lr
        ENDP

GPIO_CLR_PIN PROC
        MOVS     r1,#0
        STR      r1,[r0,#0]
        BX       lr
        ENDP

I2S_CLR_RXFIFO PROC
        LDR      r0,|L1.3844|
        LDR      r0,[r0,#0]
        MOVS     r1,#1
        LSLS     r1,r1,#19
        ORRS     r0,r0,r1
        LDR      r1,|L1.3844|
        STR      r0,[r1,#0]
        BX       lr
        ENDP

I2S_CLR_TXFIFO PROC
        LDR      r0,|L1.3844|
        LDR      r0,[r0,#0]
        MOVS     r1,#1
        LSLS     r1,r1,#18
        ORRS     r0,r0,r1
        LDR      r1,|L1.3844|
        STR      r0,[r1,#0]
        BX       lr
        ENDP

I2S_SET_MCK_DIV PROC
        LDR      r1,|L1.3844|
        LDR      r1,[r1,#4]
        LSRS     r1,r1,#3
        LSLS     r1,r1,#3
        ORRS     r1,r1,r0
        LDR      r2,|L1.3844|
        STR      r1,[r2,#4]
        BX       lr
        ENDP

SPI_ENABLE_REORDER PROC
        LDR      r1,[r0,#0]
        MOVS     r2,#1
        LSLS     r2,r2,#19
        ORRS     r1,r1,r2
        STR      r1,[r0,#0]
        BX       lr
        ENDP

SPI_DISABLE_REORDER PROC
        LDR      r1,[r0,#0]
        MOVS     r2,#1
        LSLS     r2,r2,#19
        BICS     r1,r1,r2
        STR      r1,[r0,#0]
        BX       lr
        ENDP

SPI_SET_GO PROC
        LDR      r1,[r0,#0]
        MOVS     r2,#1
        ORRS     r1,r1,r2
        STR      r1,[r0,#0]
        BX       lr
        ENDP

SPI_IS_BUSY PROC
        MOV      r1,r0
        LDR      r0,[r1,#0]
        LSLS     r0,r0,#31
        LSRS     r0,r0,#31
        BX       lr
        ENDP

SPI_SET_SS0 PROC
        LDR      r1,[r0,#8]
        MOVS     r2,#1
        ORRS     r1,r1,r2
        STR      r1,[r0,#8]
        BX       lr
        ENDP

SPI_CLR_SS0 PROC
        LDR      r1,[r0,#8]
        LSRS     r1,r1,#1
        LSLS     r1,r1,#1
        STR      r1,[r0,#8]
        BX       lr
        ENDP

SPI_WRITE_TX0 PROC
        STR      r1,[r0,#0x20]
        BX       lr
        ENDP

|L1.3828|
        DCD      0x50004254
|L1.3832|
        DCD      0x50004040
|L1.3836|
        DCD      0xe000e100
|L1.3840|
        DCD      0xe000ed1c
|L1.3844|
        DCD      0x401a0000

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.bss||, DATA, NOINIT, ALIGN=2

sflash_info_cache
        %        88
file_head
        %        46
cofe_set
        %        40

        AREA ||.data||, DATA, ALIGN=2

flash_mode
        DCB      0x00,0x00,0x00,0x00
flash_music_index
        DCD      0x00000000
music_size
        DCD      0x00000000
audio_detect_L
        DCD      0x00000000
audio_detect_R
        DCD      0x00000000
flash_program_address
        DCD      0x00000000
flash_data_buf_mux
        DCD      0x00000001
flash_status
        DCB      0x00,0x00,0x00,0x00
flash_write_triggle
        DCD      0x00000000
flash_recode_stop
        DCD      0x00000000
recode_index
        DCD      0x00000000
pre_Rdata_encode
        DCD      0x00000000
pre_Ldata_encode
        DCD      0x00000000
pre_Rdata_decode
        DCD      0x00000000
pre_Ldata_decode
        DCD      0x00000000
adpcm_step_size_index_L_encode
        DCD      0x00000000
adpcm_step_size_index_R_encode
        DCD      0x00000000
adpcm_step_size_index_L_decode
        DCD      0x00000000
adpcm_step_size_index_R_decode
        DCD      0x00000000
chuck_index
        DCB      0x00,0x00,0x00,0x00
AdaptationTable
        DCD      0x000000e6
        DCD      0x000000e6
        DCD      0x000000e6
        DCD      0x000000e6
        DCD      0x00000133
        DCD      0x00000199
        DCD      0x00000200
        DCD      0x00000266
        DCD      0x00000300
        DCD      0x00000266
        DCD      0x00000200
        DCD      0x00000199
        DCD      0x00000133
        DCD      0x000000e6
        DCD      0x000000e6
        DCD      0x000000e6
flash_music_id
        DCB      0xff,0x00,0x00,0x00
volume_back
        DCD      0x00000000
L_delta
        DCD      0x00000000
R_delta
        DCD      0x00000000
L_sample1
        DCD      0x00000000
R_sample1
        DCD      0x00000000
L_cofe0
        DCB      0x00,0x00
L_cofe1
        DCB      0x00,0x00
R_cofe0
        DCB      0x00,0x00
R_cofe1
        DCB      0x00,0x00
pre_freq
        DCD      0x00000000
R_predata
        DCD      0x00000000
L_predata
        DCD      0x00000000
block_sample_index
        DCD      0x00000000
samples_per_block
        DCD      0x00000000
data_block_size
        DCD      0x00000000

        EXPORT I2SClkInit [CODE]
        EXPORT i2sStart [CODE]
        EXPORT SPI2_IRQHandler [CODE]
        EXPORT spiFlashRead [CODE]
        EXPORT spiFlashPageWrite [CODE]
        EXPORT spiFlashInit [CODE]
        EXPORT adpcmDataInit [CODE]
        EXPORT readWaveHeaderInfo [CODE]
        EXPORT playMusic [CODE]
        EXPORT spiflashInfoWrite [CODE]
        EXPORT init_spiflash_info [CODE]
        EXPORT recodeMusic [CODE]
        EXPORT recodeEnd [CODE]
        EXPORT playSFMusicEnd [CODE]
        EXPORT adpcmEncode [CODE]
        EXPORT adpcmDecode [CODE]
        EXPORT dealFlashEvent [CODE]
        EXPORT spireadbyte [CODE]
        EXPORT spiwritebyte [CODE]
        EXPORT readfromspi [CODE]
        EXPORT writetospi [CODE]
        EXPORT reset_DW1000 [CODE]
        EXPORT spi_set_rate_low [CODE]
        EXPORT spi_set_rate_high [CODE]
        EXPORT deca_sleep [CODE]
        EXPORT decamutexon [CODE]
        EXPORT decamutexoff [CODE]
        EXPORT sflash_info_cache [DATA,SIZE=88]
        EXPORT flash_mode [DATA,SIZE=1]
        EXPORT flash_music_index [DATA,SIZE=4]
        EXPORT music_size [DATA,SIZE=4]
        EXPORT audio_detect_L [DATA,SIZE=4]
        EXPORT audio_detect_R [DATA,SIZE=4]
        EXPORT flash_program_address [DATA,SIZE=4]
        EXPORT flash_data_buf_mux [DATA,SIZE=4]
        EXPORT flash_status [DATA,SIZE=1]
        EXPORT flash_write_triggle [DATA,SIZE=4]
        EXPORT flash_recode_stop [DATA,SIZE=4]
        EXPORT AdaptationTable [DATA,SIZE=64]
        EXPORT volume_back [DATA,SIZE=4]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT __aeabi_uidivmod [CODE]
        IMPORT DrvI2S_EnableInt [CODE]
        IMPORT filter_bypass [DATA]
        IMPORT flg_softmute [DATA]
        IMPORT adcKeySubHook [DATA]
        IMPORT sysDelayMs [CODE]

        KEEP GPIO_SET_MODE
        KEEP SPI_SET_TX_BIT_LEN
        KEEP spiSendWord
        KEEP NVIC_SetPriority
        KEEP GPIO_SET_PIN
        KEEP GPIO_CLR_PIN
        KEEP I2S_CLR_RXFIFO
        KEEP I2S_CLR_TXFIFO
        KEEP I2S_SET_MCK_DIV
        KEEP SPI_ENABLE_REORDER
        KEEP SPI_DISABLE_REORDER
        KEEP SPI_SET_GO
        KEEP SPI_IS_BUSY
        KEEP SPI_SET_SS0
        KEEP SPI_CLR_SS0
        KEEP SPI_WRITE_TX0
        KEEP file_head
        KEEP cofe_set
        KEEP recode_index
        KEEP pre_Rdata_encode
        KEEP pre_Ldata_encode
        KEEP pre_Rdata_decode
        KEEP pre_Ldata_decode
        KEEP adpcm_step_size_index_L_encode
        KEEP adpcm_step_size_index_R_encode
        KEEP adpcm_step_size_index_L_decode
        KEEP adpcm_step_size_index_R_decode
        KEEP chuck_index
        KEEP flash_music_id
        KEEP L_delta
        KEEP R_delta
        KEEP L_sample1
        KEEP R_sample1
        KEEP L_cofe0
        KEEP L_cofe1
        KEEP R_cofe0
        KEEP R_cofe1
        KEEP pre_freq
        KEEP R_predata
        KEEP L_predata
        KEEP block_sample_index
        KEEP samples_per_block
        KEEP data_block_size

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
