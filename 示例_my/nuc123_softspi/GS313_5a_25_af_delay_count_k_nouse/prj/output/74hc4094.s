; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--debug -c --asm --info=totals -o.\output\74hc4094.o --depend=.\output\74hc4094.d --cpu=Cortex-M0 --apcs=interwork -O0 -I..\CMSIS\CM0\DeviceSupport\Nuvoton\NUC123Series -I..\CMSIS\CM0\CoreSupport -I..\INC\DrvInc -I..\INC\SysInc -I..\dw -IC:\Keil_v472\ARM\RV31\INC -IC:\Keil_v472\ARM\CMSIS\Include -IC:\Keil_v472\ARM\Inc\Nuvoton\NUC123Series -D__MICROLIB --omf_browse=.\output\74hc4094.crf ..\AppSrc\74HC4094.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

send74data PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        NOP      
        MOVS     r0,#0
        LDR      r1,|L1.572|
        STR      r0,[r1,#0]
        NOP      
        MOV      r1,r4
        LDR      r0,|L1.576|
        BL       SPI_WRITE_TX0
        LDR      r0,|L1.576|
        BL       SPI_SET_GO
        NOP      
|L1.30|
        NOP      
        LDR      r0,|L1.576|
        LDR      r0,[r0,#0]
        LSLS     r0,r0,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BNE      |L1.30|
        LDR      r0,|L1.580|
        STRH     r4,[r0,#0]
        NOP      
        MOVS     r0,#1
        LDR      r1,|L1.572|
        STR      r0,[r1,#0]
        NOP      
        POP      {r4,pc}
        ENDP

ledOff PROC
        PUSH     {r4,lr}
        NOP      
        MOVS     r0,#0
        LDR      r1,|L1.572|
        STR      r0,[r1,#0]
        NOP      
        LDR      r0,|L1.580|
        LDRH     r0,[r0,#0]  ; data_74hc4096
        LDR      r2,|L1.584|
        ORRS     r0,r0,r2
        MOV      r1,r0
        LDR      r0,|L1.576|
        BL       SPI_WRITE_TX0
        LDR      r0,|L1.576|
        BL       SPI_SET_GO
        NOP      
|L1.96|
        NOP      
        LDR      r0,|L1.576|
        LDR      r0,[r0,#0]
        LSLS     r0,r0,#31
        LSRS     r0,r0,#31
        CMP      r0,#0
        BNE      |L1.96|
        NOP      
        MOVS     r0,#1
        LDR      r1,|L1.572|
        STR      r0,[r1,#0]
        NOP      
        POP      {r4,pc}
        ENDP

get74data PROC
        LDR      r0,|L1.580|
        LDRH     r0,[r0,#0]  ; data_74hc4096
        BX       lr
        ENDP

set74data PROC
        LDR      r1,|L1.580|
        STRH     r0,[r1,#0]
        BX       lr
        ENDP

showResetLed PROC
        PUSH     {r4,lr}
        BL       get74data
        MOV      r4,r0
        MOVS     r4,#0
        MOV      r0,r4
        BL       send74data
        POP      {r4,pc}
        ENDP

showGainLed PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        BL       get74data
        MOV      r5,r0
        LDR      r0,|L1.584|
        SUBS     r0,r0,#0xfe
        ANDS     r5,r5,r0
        MOVS     r0,#0xff
        ADDS     r0,#1
        ASRS     r0,r0,r4
        MVNS     r0,r0
        LDR      r1,|L1.588|
        STRB     r0,[r1,#0]
        LDRB     r1,[r1,#0]  ; gain
        MOVS     r2,#0xfe
        ANDS     r1,r1,r2
        ORRS     r1,r1,r5
        MOV      r0,r1
        BL       send74data
        POP      {r4-r6,pc}
        ENDP

showCrossLed PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        BL       get74data
        MOV      r5,r0
        LSLS     r5,r5,#23
        LSRS     r5,r5,#23
        MOVS     r0,#0xff
        ADDS     r0,#1
        ASRS     r0,r0,r4
        MVNS     r0,r0
        LDR      r1,|L1.592|
        STRB     r0,[r1,#0]
        LDRB     r1,[r1,#0]  ; cross
        LSLS     r1,r1,#8
        MOVS     r2,#0x7f
        LSLS     r2,r2,#9
        ANDS     r1,r1,r2
        ORRS     r1,r1,r5
        MOV      r0,r1
        BL       send74data
        POP      {r4-r6,pc}
        ENDP

showPhaseLed PROC
        PUSH     {r4,lr}
        LDR      r0,|L1.596|
        LDR      r0,[r0,#0]  ; i
        ADDS     r0,r0,#1
        LDR      r1,|L1.596|
        STR      r0,[r1,#0]  ; i
        BL       get74data
        MOV      r4,r0
        LDR      r0,|L1.600|
        ANDS     r4,r4,r0
        LDR      r1,|L1.596|
        LDR      r0,[r1,#0]  ; i
        LSRS     r1,r0,#31
        ADDS     r1,r1,r0
        ASRS     r1,r1,#1
        LSLS     r1,r1,#1
        SUBS     r1,r0,r1
        CMP      r1,#1
        BNE      |L1.296|
        LDR      r1,|L1.584|
        RSBS     r1,r1,#0
        ORRS     r1,r1,r4
        UXTH     r0,r1
        BL       send74data
        B        |L1.314|
|L1.296|
        MOVS     r1,#0xff
        ADDS     r1,#1
        ORRS     r1,r1,r4
        UXTH     r0,r1
        BL       send74data
        MOVS     r0,#0
        LDR      r1,|L1.596|
        STR      r0,[r1,#0]  ; i
|L1.314|
        POP      {r4,pc}
        ENDP

setw58Presel PROC
        BX       lr
        ENDP

flashVolumeLed PROC
        BX       lr
        ENDP

doBreathingLed PROC
        BX       lr
        ENDP

hc4096Init PROC
        PUSH     {r4,lr}
        NOP      
        MOVS     r0,#0
        LDR      r1,|L1.572|
        STR      r0,[r1,#0]
        NOP      
        MOVS     r0,#2
        MOVS     r1,#1
        LDR      r2,|L1.604|
        LDR      r2,[r2,#0]
        LSLS     r4,r0,#1
        MOVS     r3,#3
        LSLS     r3,r3,r4
        BICS     r2,r2,r3
        LSLS     r4,r0,#1
        MOV      r3,r1
        LSLS     r3,r3,r4
        ORRS     r2,r2,r3
        LDR      r3,|L1.604|
        STR      r2,[r3,#0]
        NOP      
        NOP      
        MOVS     r0,#5
        LSLS     r0,r0,#28
        LDR      r0,[r0,#0x3c]
        MOVS     r1,#2
        BICS     r0,r0,r1
        MOVS     r1,#5
        LSLS     r1,r1,#28
        STR      r0,[r1,#0x3c]
        LDR      r0,|L1.608|
        LDR      r0,[r0,#0x14]
        MOVS     r1,#1
        LSLS     r1,r1,#17
        ORRS     r0,r0,r1
        LDR      r1,|L1.608|
        STR      r0,[r1,#0x14]
        NOP      
        NOP      
        MOVS     r0,#5
        LSLS     r0,r0,#28
        LDR      r0,[r0,#0x3c]
        MOVS     r1,#8
        BICS     r0,r0,r1
        MOVS     r1,#5
        LSLS     r1,r1,#28
        STR      r0,[r1,#0x3c]
        LDR      r0,|L1.608|
        LDR      r0,[r0,#0x14]
        MOVS     r1,#1
        LSLS     r1,r1,#19
        ORRS     r0,r0,r1
        LDR      r1,|L1.608|
        STR      r0,[r1,#0x14]
        NOP      
        MOVS     r0,#0
        MOV      r1,r0
        LDR      r2,|L1.576|
        LDR      r2,[r2,#8]
        MOV      r3,r0
        ORRS     r3,r3,r1
        ORRS     r2,r2,r3
        LDR      r3,|L1.576|
        STR      r2,[r3,#8]
        NOP      
        MOVS     r3,#0x10
        LDR      r2,|L1.612|
        MOVS     r1,#0
        LDR      r0,|L1.576|
        BL       DrvSPI_Init
        MOVS     r0,#0
        LDR      r1,|L1.576|
        LDR      r1,[r1,#0]
        MOVS     r2,#0xf
        LSLS     r2,r2,#12
        BICS     r1,r1,r2
        LSLS     r2,r0,#12
        ORRS     r1,r1,r2
        LDR      r2,|L1.576|
        STR      r1,[r2,#0]
        NOP      
        NOP      
        MOV      r0,r2
        LDR      r0,[r0,#0]
        MOVS     r1,#1
        LSLS     r1,r1,#10
        BICS     r0,r0,r1
        MOV      r1,r2
        STR      r0,[r1,#0]
        NOP      
        NOP      
        MOV      r0,r1
        LDR      r0,[r0,#0]
        MOVS     r1,#1
        LSLS     r1,r1,#19
        BICS     r0,r0,r1
        MOV      r1,r2
        STR      r0,[r1,#0]
        NOP      
        NOP      
        MOV      r0,r1
        LDR      r0,[r0,#0x3c]
        LSLS     r0,r0,#1
        LSRS     r0,r0,#1
        STR      r0,[r1,#0x3c]
        NOP      
        MOVS     r0,#0x31
        LDR      r1,[r1,#4]
        LSRS     r1,r1,#8
        LSLS     r1,r1,#8
        ORRS     r1,r1,r0
        STR      r1,[r2,#4]
        NOP      
        MOVS     r0,#0
        BL       send74data
        POP      {r4,pc}
        ENDP

SPI_SET_GO PROC
        LDR      r1,[r0,#0]
        MOVS     r2,#1
        ORRS     r1,r1,r2
        STR      r1,[r0,#0]
        BX       lr
        ENDP

SPI_WRITE_TX0 PROC
        STR      r1,[r0,#0x20]
        BX       lr
        ENDP

|L1.572|
        DCD      0x500042c8
|L1.576|
        DCD      0x40130000
|L1.580|
        DCD      data_74hc4096
|L1.584|
        DCD      0x0000ffff
|L1.588|
        DCD      gain
|L1.592|
        DCD      cross
|L1.596|
        DCD      i
|L1.600|
        DCD      0x0000fefe
|L1.604|
        DCD      0x500040c0
|L1.608|
        DCD      0x50000040
|L1.612|
        DCD      0x00000804

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.data||, DATA, ALIGN=2

data_74hc4096
        DCW      0x0002
        DCB      0x00,0x00
i
        DCD      0x00000000
gain
        DCB      0x00
cross
        DCB      0x00

        EXPORT send74data [CODE]
        EXPORT ledOff [CODE]
        EXPORT get74data [CODE]
        EXPORT set74data [CODE]
        EXPORT showResetLed [CODE]
        EXPORT showGainLed [CODE]
        EXPORT showCrossLed [CODE]
        EXPORT showPhaseLed [CODE]
        EXPORT setw58Presel [CODE]
        EXPORT flashVolumeLed [CODE]
        EXPORT doBreathingLed [CODE]
        EXPORT hc4096Init [CODE]
        EXPORT gain [DATA,SIZE=1]
        EXPORT cross [DATA,SIZE=1]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT DrvSPI_Init [CODE]

        KEEP SPI_SET_GO
        KEEP SPI_WRITE_TX0
        KEEP data_74hc4096
        KEEP i

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
